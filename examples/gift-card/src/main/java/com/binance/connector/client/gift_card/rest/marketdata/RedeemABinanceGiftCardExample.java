/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.gift_card.rest.marketdata;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.ApiResponse;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.gift_card.rest.GiftCardRestApiUtil;
import com.binance.connector.client.gift_card.rest.api.GiftCardRestApi;
import com.binance.connector.client.gift_card.rest.model.RedeemABinanceGiftCardRequest;
import com.binance.connector.client.gift_card.rest.model.RedeemABinanceGiftCardResponse;

/** API examples for MarketDataApi */
public class RedeemABinanceGiftCardExample {
    private GiftCardRestApi api;

    public GiftCardRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration = GiftCardRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new GiftCardRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * Redeem a Binance Gift Card(USER_DATA)
     *
     * <p>This API is for redeeming a Binance Gift Card Once redeemed, the coins will be deposited
     * in your funding wallet. * Parameter code can be sent in two formats: * Plaintext * Encrypted
     * * Sending code in Encrypted format provides more security than sending it as a plaintext. To
     * send card code in encrypted format the following steps must be followed: * Fetch RSA public
     * key from api stated below. * Use the below algorithm to encrypt the card code using the RSA
     * public key fetched above: &#x60;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&#x60; **A sample code
     * snippet (JAVA) is stated below for reference, the same approach can be used for different
     * languages like C#, PERL, PYTHON, SHELL etc.:** Weight: 1
     *
     * @throws ApiException if the Api call fails
     */
    public void redeemABinanceGiftCardExample() throws ApiException {
        RedeemABinanceGiftCardRequest redeemABinanceGiftCardRequest =
                new RedeemABinanceGiftCardRequest();
        redeemABinanceGiftCardRequest.code("");
        ApiResponse<RedeemABinanceGiftCardResponse> response =
                getApi().redeemABinanceGiftCard(redeemABinanceGiftCardRequest);
        System.out.println(response.getData());
    }
}
