/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.derivatives_trading_coin_futures.rest.trade;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.derivatives_trading_coin_futures.rest.DerivativesTradingCoinFuturesRestApiUtil;
import com.binance.connector.client.derivatives_trading_coin_futures.rest.api.DerivativesTradingCoinFuturesRestApi;
import com.binance.connector.client.derivatives_trading_coin_futures.rest.model.AutoCancelAllOpenOrdersRequest;

/** API examples for TradeApi */
public class AutoCancelAllOpenOrdersExample {
    private DerivativesTradingCoinFuturesRestApi api;

    public DerivativesTradingCoinFuturesRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration =
                    DerivativesTradingCoinFuturesRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new DerivativesTradingCoinFuturesRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * Auto-Cancel All Open Orders (TRADE)
     *
     * <p>Cancel all open orders of the specified symbol at the end of the specified countdown. This
     * rest endpoint means to ensure your open orders are canceled in case of an outage. The
     * endpoint should be called repeatedly as heartbeats so that the existing countdown time can be
     * canceled and repalced by a new one. The system will check all countdowns **approximately
     * every 10 milliseconds**, so please note that sufficient redundancy should be considered when
     * using this function. We do not recommend setting the countdown time to be too precise or too
     * small. * Example usage: Call this endpoint at 30s intervals with an countdownTime of 120000
     * (120s). If this endpoint is not called within 120 seconds, all your orders of the specified
     * symbol will be automatically canceled. If this endpoint is called with an countdownTime of 0,
     * the countdown timer will be stopped. Weight: 10
     *
     * @throws ApiException if the Api call fails
     */
    public void autoCancelAllOpenOrdersExample() throws ApiException {
        AutoCancelAllOpenOrdersRequest autoCancelAllOpenOrdersRequest =
                new AutoCancelAllOpenOrdersRequest();
        autoCancelAllOpenOrdersRequest.symbol("");
        autoCancelAllOpenOrdersRequest.countdownTime(0L);
        getApi().autoCancelAllOpenOrders(autoCancelAllOpenOrdersRequest);
    }
}
