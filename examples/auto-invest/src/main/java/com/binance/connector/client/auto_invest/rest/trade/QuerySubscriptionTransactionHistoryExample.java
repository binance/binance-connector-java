/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.auto_invest.rest.trade;

import com.binance.connector.client.auto_invest.rest.AutoInvestRestApiUtil;
import com.binance.connector.client.auto_invest.rest.api.AutoInvestRestApi;
import com.binance.connector.client.auto_invest.rest.model.QuerySubscriptionTransactionHistoryResponse;
import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.ApiResponse;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;

/** API examples for TradeApi */
public class QuerySubscriptionTransactionHistoryExample {
    private AutoInvestRestApi api;

    public AutoInvestRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration =
                    AutoInvestRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new AutoInvestRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * Query subscription transaction history(USER_DATA)
     *
     * <p>Query subscription transaction history of a plan * Max span between startTime and endTime
     * is 30days * If both startTime and endTime are nullï¼Œthen default is 30days Weight: 1
     *
     * @throws ApiException if the Api call fails
     */
    public void querySubscriptionTransactionHistoryExample() throws ApiException {
        Long planId = 1L;
        Long startTime = 1623319461670L;
        Long endTime = 1641782889000L;
        Long targetAsset = 0L;
        Long planType = 0L;
        Long size = 8L;
        Long current = 1L;
        Long recvWindow = 5000L;
        ApiResponse<QuerySubscriptionTransactionHistoryResponse> response =
                getApi().querySubscriptionTransactionHistory(
                                planId,
                                startTime,
                                endTime,
                                targetAsset,
                                planType,
                                size,
                                current,
                                recvWindow);
        System.out.println(response.getData());
    }
}
