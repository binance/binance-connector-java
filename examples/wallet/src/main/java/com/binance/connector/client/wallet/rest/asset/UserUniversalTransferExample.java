/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.wallet.rest.asset;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.ApiResponse;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.wallet.rest.WalletRestApiUtil;
import com.binance.connector.client.wallet.rest.api.WalletRestApi;
import com.binance.connector.client.wallet.rest.model.UserUniversalTransferRequest;
import com.binance.connector.client.wallet.rest.model.UserUniversalTransferResponse;

/** API examples for AssetApi */
public class UserUniversalTransferExample {
    private WalletRestApi api;

    public WalletRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration = WalletRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new WalletRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * User Universal Transfer (USER_DATA)
     *
     * <p>user universal transfer * &#x60;fromSymbol&#x60; must be sent when type are
     * ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN * &#x60;toSymbol&#x60; must be sent
     * when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN * ENUM of transfer
     * types: * MAIN_UMFUTURE Spot account transfer to USDⓈ-M Futures account * MAIN_CMFUTURE Spot
     * account transfer to COIN-M Futures account * MAIN_MARGIN Spot account transfer to
     * Margin（cross）account * UMFUTURE_MAIN USDⓈ-M Futures account transfer to Spot account *
     * UMFUTURE_MARGIN USDⓈ-M Futures account transfer to Margin（cross）account * CMFUTURE_MAIN
     * COIN-M Futures account transfer to Spot account * CMFUTURE_MARGIN COIN-M Futures account
     * transfer to Margin(cross) account * MARGIN_MAIN Margin（cross）account transfer to Spot account
     * * MARGIN_UMFUTURE Margin（cross）account transfer to USDⓈ-M Futures * MARGIN_CMFUTURE
     * Margin（cross）account transfer to COIN-M Futures * ISOLATEDMARGIN_MARGIN Isolated margin
     * account transfer to Margin(cross) account * MARGIN_ISOLATEDMARGIN Margin(cross) account
     * transfer to Isolated margin account * ISOLATEDMARGIN_ISOLATEDMARGIN Isolated margin account
     * transfer to Isolated margin account * MAIN_FUNDING Spot account transfer to Funding account *
     * FUNDING_MAIN Funding account transfer to Spot account * FUNDING_UMFUTURE Funding account
     * transfer to UMFUTURE account * UMFUTURE_FUNDING UMFUTURE account transfer to Funding account
     * * MARGIN_FUNDING MARGIN account transfer to Funding account * FUNDING_MARGIN Funding account
     * transfer to Margin account * FUNDING_CMFUTURE Funding account transfer to CMFUTURE account *
     * CMFUTURE_FUNDING CMFUTURE account transfer to Funding account * MAIN_OPTION Spot account
     * transfer to Options account * OPTION_MAIN Options account transfer to Spot account *
     * UMFUTURE_OPTION USDⓈ-M Futures account transfer to Options account * OPTION_UMFUTURE Options
     * account transfer to USDⓈ-M Futures account * MARGIN_OPTION Margin（cross）account transfer to
     * Options account * OPTION_MARGIN Options account transfer to Margin（cross）account *
     * FUNDING_OPTION Funding account transfer to Options account * OPTION_FUNDING Options account
     * transfer to Funding account * MAIN_PORTFOLIO_MARGIN Spot account transfer to Portfolio Margin
     * account * PORTFOLIO_MARGIN_MAIN Portfolio Margin account transfer to Spot account Weight: 900
     *
     * @throws ApiException if the Api call fails
     */
    public void userUniversalTransferExample() throws ApiException {
        UserUniversalTransferRequest userUniversalTransferRequest =
                new UserUniversalTransferRequest();
        userUniversalTransferRequest.type("");
        userUniversalTransferRequest.asset("");
        userUniversalTransferRequest.amount(1d);
        ApiResponse<UserUniversalTransferResponse> response =
                getApi().userUniversalTransfer(userUniversalTransferRequest);
        System.out.println(response.getData());
    }
}
