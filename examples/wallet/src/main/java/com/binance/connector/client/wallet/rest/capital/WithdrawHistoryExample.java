/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.wallet.rest.capital;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.ApiResponse;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.wallet.rest.WalletRestApiUtil;
import com.binance.connector.client.wallet.rest.api.WalletRestApi;
import com.binance.connector.client.wallet.rest.model.WithdrawHistoryResponse;

/** API examples for CapitalApi */
public class WithdrawHistoryExample {
    private WalletRestApi api;

    public WalletRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration = WalletRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new WalletRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * Withdraw History (supporting network) (USER_DATA)
     *
     * <p>Fetch withdraw history. * &#x60;network&#x60; may not be in the response for old withdraw.
     * * Please notice the default &#x60;startTime&#x60; and &#x60;endTime&#x60; to make sure that
     * time interval is within 0-90 days. * If both &#x60;startTime&#x60; and &#x60;endTime&#x60;are
     * sent, time between &#x60;startTime&#x60;and &#x60;endTime&#x60;must be less than 90 days. *
     * If &#x60;withdrawOrderId&#x60; is sent, time between &#x60;startTime&#x60; and
     * &#x60;endTime&#x60; must be less than 7 days. * If &#x60;withdrawOrderId&#x60; is sent,
     * &#x60;startTime&#x60; and &#x60;endTime&#x60; are not sent, will return last 7 days records
     * by default. * Maximum support &#x60;idList&#x60; number is 45. Weight: 18000 Request limit:
     * 10 requests per second
     *
     * @throws ApiException if the Api call fails
     */
    public void withdrawHistoryExample() throws ApiException {
        String coin = "";
        String withdrawOrderId = "1";
        Long status = 0L;
        Long offset = 0L;
        Long limit = 7L;
        String idList = "";
        Long startTime = 1623319461670L;
        Long endTime = 1641782889000L;
        Long recvWindow = 5000L;
        ApiResponse<WithdrawHistoryResponse> response =
                getApi().withdrawHistory(
                                coin,
                                withdrawOrderId,
                                status,
                                offset,
                                limit,
                                idList,
                                startTime,
                                endTime,
                                recvWindow);
        System.out.println(response.getData());
    }
}
