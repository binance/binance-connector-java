/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.spot.websocket.stream.websocketstreams;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.websocket.configuration.WebSocketClientConfiguration;
import com.binance.connector.client.common.websocket.service.StreamBlockingQueueWrapper;
import com.binance.connector.client.spot.websocket.stream.SpotWebSocketStreamsUtil;
import com.binance.connector.client.spot.websocket.stream.api.SpotWebSocketStreams;
import com.binance.connector.client.spot.websocket.stream.model.RollingWindowTickerRequest;
import com.binance.connector.client.spot.websocket.stream.model.RollingWindowTickerResponse;
import com.binance.connector.client.spot.websocket.stream.model.WindowSize;

/** API examples for WebSocketStreamsApi */
public class RollingWindowTickerExample {
    private SpotWebSocketStreams api;

    public SpotWebSocketStreams getApi() {
        if (api == null) {
            WebSocketClientConfiguration clientConfiguration =
                    SpotWebSocketStreamsUtil.getClientConfiguration();
            api = new SpotWebSocketStreams(clientConfiguration);
        }
        return api;
    }

    /**
     * WebSocket Individual Symbol Rolling Window Statistics Streams
     *
     * <p>Rolling window ticker statistics for a single symbol, computed over multiple windows.
     *
     * @throws ApiException if the Api call fails
     */
    public void rollingWindowTickerExample() throws ApiException, InterruptedException {
        RollingWindowTickerRequest rollingWindowTickerRequest = new RollingWindowTickerRequest();
        rollingWindowTickerRequest.symbol("bnbusdt");
        rollingWindowTickerRequest.windowSize(WindowSize.WINDOW_SIZE_1h);
        StreamBlockingQueueWrapper<RollingWindowTickerResponse> response =
                getApi().rollingWindowTicker(rollingWindowTickerRequest);
        while (true) {
            System.out.println(response.take());
        }
    }
}
