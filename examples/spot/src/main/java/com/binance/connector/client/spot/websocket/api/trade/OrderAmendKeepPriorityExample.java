/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.spot.websocket.api.trade;

import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.common.websocket.configuration.WebSocketClientConfiguration;
import com.binance.connector.client.spot.websocket.api.SpotWebSocketApiUtil;
import com.binance.connector.client.spot.websocket.api.api.SpotWebSocketApi;
import com.binance.connector.client.spot.websocket.api.model.OrderAmendKeepPriorityRequest;
import com.binance.connector.client.spot.websocket.api.model.OrderAmendKeepPriorityResponse;
import java.util.concurrent.CompletableFuture;

/** API examples for TradeApi */
public class OrderAmendKeepPriorityExample {
    private SpotWebSocketApi api;

    public SpotWebSocketApi getApi() {
        if (api == null) {
            WebSocketClientConfiguration clientConfiguration =
                    SpotWebSocketApiUtil.getClientConfiguration();
            clientConfiguration.setAutoLogon(false);
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("/path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new SpotWebSocketApi(clientConfiguration);
        }
        return api;
    }

    /**
     * WebSocket Order Amend Keep Priority
     *
     * <p>Reduce the quantity of an existing open order. Read [Order Amend Keep Priority
     * FAQ](faqs/order_amend_keep_priority.md) to learn more. Weight: 1
     */
    public void orderAmendKeepPriorityExampleAsync() {
        OrderAmendKeepPriorityRequest orderAmendKeepPriorityRequest =
                new OrderAmendKeepPriorityRequest();
        orderAmendKeepPriorityRequest.symbol("BNBUSDT");
        orderAmendKeepPriorityRequest.newQty(1.0d);
        CompletableFuture<OrderAmendKeepPriorityResponse> future =
                getApi().orderAmendKeepPriority(orderAmendKeepPriorityRequest);
        future.handle(
                (response, error) -> {
                    if (error != null) {
                        System.err.println(error);
                    }
                    System.out.println(response);
                    return response;
                });
    }

    /**
     * WebSocket Order Amend Keep Priority
     *
     * <p>Reduce the quantity of an existing open order. Read [Order Amend Keep Priority
     * FAQ](faqs/order_amend_keep_priority.md) to learn more. Weight: 1
     */
    public void orderAmendKeepPriorityExampleSync() {
        OrderAmendKeepPriorityRequest orderAmendKeepPriorityRequest =
                new OrderAmendKeepPriorityRequest();
        orderAmendKeepPriorityRequest.symbol("BNBUSDT");
        orderAmendKeepPriorityRequest.newQty(1.0d);
        CompletableFuture<OrderAmendKeepPriorityResponse> future =
                getApi().orderAmendKeepPriority(orderAmendKeepPriorityRequest);
        OrderAmendKeepPriorityResponse response = future.join();
        System.out.println(response);
    }
}
