/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.convert.rest.trade;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.ApiResponse;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.convert.rest.ConvertRestApiUtil;
import com.binance.connector.client.convert.rest.api.ConvertRestApi;
import com.binance.connector.client.convert.rest.model.PlaceLimitOrderRequest;
import com.binance.connector.client.convert.rest.model.PlaceLimitOrderResponse;

/** API examples for TradeApi */
public class PlaceLimitOrderExample {
    private ConvertRestApi api;

    public ConvertRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration = ConvertRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new ConvertRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * Place limit order (USER_DATA)
     *
     * <p>Enable users to place a limit order * &#x60;baseAsset&#x60; or &#x60;quoteAsset&#x60; can
     * be determined via &#x60;exchangeInfo&#x60; endpoint. * Limit price is defined from
     * &#x60;baseAsset&#x60; to &#x60;quoteAsset&#x60;. * Either &#x60;baseAmount&#x60; or
     * &#x60;quoteAmount&#x60; is used. Weight: 500(UID)
     *
     * @throws ApiException if the Api call fails
     */
    public void placeLimitOrderExample() throws ApiException {
        PlaceLimitOrderRequest placeLimitOrderRequest = new PlaceLimitOrderRequest();
        placeLimitOrderRequest.baseAsset("");
        placeLimitOrderRequest.quoteAsset("");
        placeLimitOrderRequest.limitPrice(1d);
        placeLimitOrderRequest.side("BUY");
        placeLimitOrderRequest.expiredType("");
        ApiResponse<PlaceLimitOrderResponse> response =
                getApi().placeLimitOrder(placeLimitOrderRequest);
        System.out.println(response.getData());
    }
}
