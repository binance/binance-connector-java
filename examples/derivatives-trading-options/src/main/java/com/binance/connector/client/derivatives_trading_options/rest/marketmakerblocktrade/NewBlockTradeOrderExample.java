/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.derivatives_trading_options.rest.marketmakerblocktrade;

import com.binance.connector.client.common.ApiException;
import com.binance.connector.client.common.ApiResponse;
import com.binance.connector.client.common.configuration.ClientConfiguration;
import com.binance.connector.client.common.configuration.SignatureConfiguration;
import com.binance.connector.client.derivatives_trading_options.rest.DerivativesTradingOptionsRestApiUtil;
import com.binance.connector.client.derivatives_trading_options.rest.api.DerivativesTradingOptionsRestApi;
import com.binance.connector.client.derivatives_trading_options.rest.model.Legs;
import com.binance.connector.client.derivatives_trading_options.rest.model.NewBlockTradeOrderRequest;
import com.binance.connector.client.derivatives_trading_options.rest.model.NewBlockTradeOrderResponse;
import com.binance.connector.client.derivatives_trading_options.rest.model.Side;

/** API examples for MarketMakerBlockTradeApi */
public class NewBlockTradeOrderExample {
    private DerivativesTradingOptionsRestApi api;

    public DerivativesTradingOptionsRestApi getApi() {
        if (api == null) {
            ClientConfiguration clientConfiguration =
                    DerivativesTradingOptionsRestApiUtil.getClientConfiguration();
            SignatureConfiguration signatureConfiguration = new SignatureConfiguration();
            signatureConfiguration.setApiKey("apiKey");
            signatureConfiguration.setPrivateKey("path/to/private.key");
            clientConfiguration.setSignatureConfiguration(signatureConfiguration);
            api = new DerivativesTradingOptionsRestApi(clientConfiguration);
        }
        return api;
    }

    /**
     * New Block Trade Order (TRADE)
     *
     * <p>Send in a new block trade order. Weight: 5
     *
     * @throws ApiException if the Api call fails
     */
    public void newBlockTradeOrderExample() throws ApiException {
        NewBlockTradeOrderRequest newBlockTradeOrderRequest = new NewBlockTradeOrderRequest();
        newBlockTradeOrderRequest.liquidity("");
        newBlockTradeOrderRequest.legs(new Legs());
        newBlockTradeOrderRequest.symbol("");
        newBlockTradeOrderRequest.side(Side.BUY);
        newBlockTradeOrderRequest.price(1d);
        newBlockTradeOrderRequest.quantity(1d);
        ApiResponse<NewBlockTradeOrderResponse> response =
                getApi().newBlockTradeOrder(newBlockTradeOrderRequest);
        System.out.println(response.getData());
    }
}
