/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner {
    public static final String SERIALIZED_NAME_USER_ID = "userId";

    @SerializedName(SERIALIZED_NAME_USER_ID)
    @jakarta.annotation.Nullable
    private Long userId;

    public static final String SERIALIZED_NAME_BTC = "btc";

    @SerializedName(SERIALIZED_NAME_BTC)
    @jakarta.annotation.Nullable
    private Long btc;

    public static final String SERIALIZED_NAME_BTC_FUTURES = "btcFutures";

    @SerializedName(SERIALIZED_NAME_BTC_FUTURES)
    @jakarta.annotation.Nullable
    private Long btcFutures;

    public static final String SERIALIZED_NAME_BTC_MARGIN = "btcMargin";

    @SerializedName(SERIALIZED_NAME_BTC_MARGIN)
    @jakarta.annotation.Nullable
    private Long btcMargin;

    public static final String SERIALIZED_NAME_BUSD = "busd";

    @SerializedName(SERIALIZED_NAME_BUSD)
    @jakarta.annotation.Nullable
    private Long busd;

    public static final String SERIALIZED_NAME_BUSD_FUTURES = "busdFutures";

    @SerializedName(SERIALIZED_NAME_BUSD_FUTURES)
    @jakarta.annotation.Nullable
    private Long busdFutures;

    public static final String SERIALIZED_NAME_BUSD_MARGIN = "busdMargin";

    @SerializedName(SERIALIZED_NAME_BUSD_MARGIN)
    @jakarta.annotation.Nullable
    private Long busdMargin;

    public static final String SERIALIZED_NAME_DATE = "date";

    @SerializedName(SERIALIZED_NAME_DATE)
    @jakarta.annotation.Nullable
    private Long date;

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner() {}

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner userId(
            @jakarta.annotation.Nullable Long userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Get userId
     *
     * @return userId
     */
    @jakarta.annotation.Nullable
    public Long getUserId() {
        return userId;
    }

    public void setUserId(@jakarta.annotation.Nullable Long userId) {
        this.userId = userId;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner btc(
            @jakarta.annotation.Nullable Long btc) {
        this.btc = btc;
        return this;
    }

    /**
     * Get btc
     *
     * @return btc
     */
    @jakarta.annotation.Nullable
    public Long getBtc() {
        return btc;
    }

    public void setBtc(@jakarta.annotation.Nullable Long btc) {
        this.btc = btc;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner btcFutures(
            @jakarta.annotation.Nullable Long btcFutures) {
        this.btcFutures = btcFutures;
        return this;
    }

    /**
     * Get btcFutures
     *
     * @return btcFutures
     */
    @jakarta.annotation.Nullable
    public Long getBtcFutures() {
        return btcFutures;
    }

    public void setBtcFutures(@jakarta.annotation.Nullable Long btcFutures) {
        this.btcFutures = btcFutures;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner btcMargin(
            @jakarta.annotation.Nullable Long btcMargin) {
        this.btcMargin = btcMargin;
        return this;
    }

    /**
     * Get btcMargin
     *
     * @return btcMargin
     */
    @jakarta.annotation.Nullable
    public Long getBtcMargin() {
        return btcMargin;
    }

    public void setBtcMargin(@jakarta.annotation.Nullable Long btcMargin) {
        this.btcMargin = btcMargin;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner busd(
            @jakarta.annotation.Nullable Long busd) {
        this.busd = busd;
        return this;
    }

    /**
     * Get busd
     *
     * @return busd
     */
    @jakarta.annotation.Nullable
    public Long getBusd() {
        return busd;
    }

    public void setBusd(@jakarta.annotation.Nullable Long busd) {
        this.busd = busd;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner busdFutures(
            @jakarta.annotation.Nullable Long busdFutures) {
        this.busdFutures = busdFutures;
        return this;
    }

    /**
     * Get busdFutures
     *
     * @return busdFutures
     */
    @jakarta.annotation.Nullable
    public Long getBusdFutures() {
        return busdFutures;
    }

    public void setBusdFutures(@jakarta.annotation.Nullable Long busdFutures) {
        this.busdFutures = busdFutures;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner busdMargin(
            @jakarta.annotation.Nullable Long busdMargin) {
        this.busdMargin = busdMargin;
        return this;
    }

    /**
     * Get busdMargin
     *
     * @return busdMargin
     */
    @jakarta.annotation.Nullable
    public Long getBusdMargin() {
        return busdMargin;
    }

    public void setBusdMargin(@jakarta.annotation.Nullable Long busdMargin) {
        this.busdMargin = busdMargin;
    }

    public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner date(
            @jakarta.annotation.Nullable Long date) {
        this.date = date;
        return this;
    }

    /**
     * Get date
     *
     * @return date
     */
    @jakarta.annotation.Nullable
    public Long getDate() {
        return date;
    }

    public void setDate(@jakarta.annotation.Nullable Long date) {
        this.date = date;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
                querySubAccountTransactionStatisticsResponse2TradeInfoVosInner =
                        (QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner) o;
        return Objects.equals(
                        this.userId,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.userId)
                && Objects.equals(
                        this.btc,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.btc)
                && Objects.equals(
                        this.btcFutures,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.btcFutures)
                && Objects.equals(
                        this.btcMargin,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.btcMargin)
                && Objects.equals(
                        this.busd,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.busd)
                && Objects.equals(
                        this.busdFutures,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.busdFutures)
                && Objects.equals(
                        this.busdMargin,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.busdMargin)
                && Objects.equals(
                        this.date,
                        querySubAccountTransactionStatisticsResponse2TradeInfoVosInner.date);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                userId, btc, btcFutures, btcMargin, busd, busdFutures, busdMargin, date);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner {\n");
        sb.append("		userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("		btc: ").append(toIndentedString(btc)).append("\n");
        sb.append("		btcFutures: ").append(toIndentedString(btcFutures)).append("\n");
        sb.append("		btcMargin: ").append(toIndentedString(btcMargin)).append("\n");
        sb.append("		busd: ").append(toIndentedString(busd)).append("\n");
        sb.append("		busdFutures: ").append(toIndentedString(busdFutures)).append("\n");
        sb.append("		busdMargin: ").append(toIndentedString(busdMargin)).append("\n");
        sb.append("		date: ").append(toIndentedString(date)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object userIdValue = getUserId();
        String userIdValueAsString = "";
        userIdValueAsString = userIdValue.toString();
        sb.append("userId=").append(urlEncode(userIdValueAsString)).append("");
        Object btcValue = getBtc();
        String btcValueAsString = "";
        btcValueAsString = btcValue.toString();
        sb.append("btc=").append(urlEncode(btcValueAsString)).append("");
        Object btcFuturesValue = getBtcFutures();
        String btcFuturesValueAsString = "";
        btcFuturesValueAsString = btcFuturesValue.toString();
        sb.append("btcFutures=").append(urlEncode(btcFuturesValueAsString)).append("");
        Object btcMarginValue = getBtcMargin();
        String btcMarginValueAsString = "";
        btcMarginValueAsString = btcMarginValue.toString();
        sb.append("btcMargin=").append(urlEncode(btcMarginValueAsString)).append("");
        Object busdValue = getBusd();
        String busdValueAsString = "";
        busdValueAsString = busdValue.toString();
        sb.append("busd=").append(urlEncode(busdValueAsString)).append("");
        Object busdFuturesValue = getBusdFutures();
        String busdFuturesValueAsString = "";
        busdFuturesValueAsString = busdFuturesValue.toString();
        sb.append("busdFutures=").append(urlEncode(busdFuturesValueAsString)).append("");
        Object busdMarginValue = getBusdMargin();
        String busdMarginValueAsString = "";
        busdMarginValueAsString = busdMarginValue.toString();
        sb.append("busdMargin=").append(urlEncode(busdMarginValueAsString)).append("");
        Object dateValue = getDate();
        String dateValueAsString = "";
        dateValueAsString = dateValue.toString();
        sb.append("date=").append(urlEncode(dateValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("userId");
        openapiFields.add("btc");
        openapiFields.add("btcFutures");
        openapiFields.add("btcMargin");
        openapiFields.add("busd");
        openapiFields.add("busdFutures");
        openapiFields.add("busdMargin");
        openapiFields.add("date");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner"
                                    + " is not found in the empty JSON string",
                                QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner.openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner' and
                // its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner read(
                                JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner given an
     * JSON string
     *
     * @param jsonString JSON string
     * @return An instance of QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
     * @throws IOException if the JSON string is invalid with respect to
     *     QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner
     */
    public static QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner.class);
    }

    /**
     * Convert an instance of QuerySubAccountTransactionStatisticsResponse2TradeInfoVosInner to an
     * JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
