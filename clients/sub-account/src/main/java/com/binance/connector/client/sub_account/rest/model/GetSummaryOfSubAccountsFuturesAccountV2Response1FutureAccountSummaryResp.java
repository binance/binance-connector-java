/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;
import org.hibernate.validator.constraints.*;

/** GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp {
    public static final String SERIALIZED_NAME_TOTAL_INITIAL_MARGIN = "totalInitialMargin";

    @SerializedName(SERIALIZED_NAME_TOTAL_INITIAL_MARGIN)
    @jakarta.annotation.Nullable
    private String totalInitialMargin;

    public static final String SERIALIZED_NAME_TOTAL_MAINTENANCE_MARGIN = "totalMaintenanceMargin";

    @SerializedName(SERIALIZED_NAME_TOTAL_MAINTENANCE_MARGIN)
    @jakarta.annotation.Nullable
    private String totalMaintenanceMargin;

    public static final String SERIALIZED_NAME_TOTAL_MARGIN_BALANCE = "totalMarginBalance";

    @SerializedName(SERIALIZED_NAME_TOTAL_MARGIN_BALANCE)
    @jakarta.annotation.Nullable
    private String totalMarginBalance;

    public static final String SERIALIZED_NAME_TOTAL_OPEN_ORDER_INITIAL_MARGIN =
            "totalOpenOrderInitialMargin";

    @SerializedName(SERIALIZED_NAME_TOTAL_OPEN_ORDER_INITIAL_MARGIN)
    @jakarta.annotation.Nullable
    private String totalOpenOrderInitialMargin;

    public static final String SERIALIZED_NAME_TOTAL_POSITION_INITIAL_MARGIN =
            "totalPositionInitialMargin";

    @SerializedName(SERIALIZED_NAME_TOTAL_POSITION_INITIAL_MARGIN)
    @jakarta.annotation.Nullable
    private String totalPositionInitialMargin;

    public static final String SERIALIZED_NAME_TOTAL_UNREALIZED_PROFIT = "totalUnrealizedProfit";

    @SerializedName(SERIALIZED_NAME_TOTAL_UNREALIZED_PROFIT)
    @jakarta.annotation.Nullable
    private String totalUnrealizedProfit;

    public static final String SERIALIZED_NAME_TOTAL_WALLET_BALANCE = "totalWalletBalance";

    @SerializedName(SERIALIZED_NAME_TOTAL_WALLET_BALANCE)
    @jakarta.annotation.Nullable
    private String totalWalletBalance;

    public static final String SERIALIZED_NAME_ASSET = "asset";

    @SerializedName(SERIALIZED_NAME_ASSET)
    @jakarta.annotation.Nullable
    private String asset;

    public static final String SERIALIZED_NAME_SUB_ACCOUNT_LIST = "subAccountList";

    @SerializedName(SERIALIZED_NAME_SUB_ACCOUNT_LIST)
    @jakarta.annotation.Nullable
    private List<
                    @Valid
                    GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryRespSubAccountListInner>
            subAccountList;

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp() {}

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalInitialMargin(@jakarta.annotation.Nullable String totalInitialMargin) {
        this.totalInitialMargin = totalInitialMargin;
        return this;
    }

    /**
     * Get totalInitialMargin
     *
     * @return totalInitialMargin
     */
    @jakarta.annotation.Nullable
    public String getTotalInitialMargin() {
        return totalInitialMargin;
    }

    public void setTotalInitialMargin(@jakarta.annotation.Nullable String totalInitialMargin) {
        this.totalInitialMargin = totalInitialMargin;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalMaintenanceMargin(@jakarta.annotation.Nullable String totalMaintenanceMargin) {
        this.totalMaintenanceMargin = totalMaintenanceMargin;
        return this;
    }

    /**
     * Get totalMaintenanceMargin
     *
     * @return totalMaintenanceMargin
     */
    @jakarta.annotation.Nullable
    public String getTotalMaintenanceMargin() {
        return totalMaintenanceMargin;
    }

    public void setTotalMaintenanceMargin(
            @jakarta.annotation.Nullable String totalMaintenanceMargin) {
        this.totalMaintenanceMargin = totalMaintenanceMargin;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalMarginBalance(@jakarta.annotation.Nullable String totalMarginBalance) {
        this.totalMarginBalance = totalMarginBalance;
        return this;
    }

    /**
     * Get totalMarginBalance
     *
     * @return totalMarginBalance
     */
    @jakarta.annotation.Nullable
    public String getTotalMarginBalance() {
        return totalMarginBalance;
    }

    public void setTotalMarginBalance(@jakarta.annotation.Nullable String totalMarginBalance) {
        this.totalMarginBalance = totalMarginBalance;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalOpenOrderInitialMargin(
                    @jakarta.annotation.Nullable String totalOpenOrderInitialMargin) {
        this.totalOpenOrderInitialMargin = totalOpenOrderInitialMargin;
        return this;
    }

    /**
     * Get totalOpenOrderInitialMargin
     *
     * @return totalOpenOrderInitialMargin
     */
    @jakarta.annotation.Nullable
    public String getTotalOpenOrderInitialMargin() {
        return totalOpenOrderInitialMargin;
    }

    public void setTotalOpenOrderInitialMargin(
            @jakarta.annotation.Nullable String totalOpenOrderInitialMargin) {
        this.totalOpenOrderInitialMargin = totalOpenOrderInitialMargin;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalPositionInitialMargin(
                    @jakarta.annotation.Nullable String totalPositionInitialMargin) {
        this.totalPositionInitialMargin = totalPositionInitialMargin;
        return this;
    }

    /**
     * Get totalPositionInitialMargin
     *
     * @return totalPositionInitialMargin
     */
    @jakarta.annotation.Nullable
    public String getTotalPositionInitialMargin() {
        return totalPositionInitialMargin;
    }

    public void setTotalPositionInitialMargin(
            @jakarta.annotation.Nullable String totalPositionInitialMargin) {
        this.totalPositionInitialMargin = totalPositionInitialMargin;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalUnrealizedProfit(@jakarta.annotation.Nullable String totalUnrealizedProfit) {
        this.totalUnrealizedProfit = totalUnrealizedProfit;
        return this;
    }

    /**
     * Get totalUnrealizedProfit
     *
     * @return totalUnrealizedProfit
     */
    @jakarta.annotation.Nullable
    public String getTotalUnrealizedProfit() {
        return totalUnrealizedProfit;
    }

    public void setTotalUnrealizedProfit(
            @jakarta.annotation.Nullable String totalUnrealizedProfit) {
        this.totalUnrealizedProfit = totalUnrealizedProfit;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            totalWalletBalance(@jakarta.annotation.Nullable String totalWalletBalance) {
        this.totalWalletBalance = totalWalletBalance;
        return this;
    }

    /**
     * Get totalWalletBalance
     *
     * @return totalWalletBalance
     */
    @jakarta.annotation.Nullable
    public String getTotalWalletBalance() {
        return totalWalletBalance;
    }

    public void setTotalWalletBalance(@jakarta.annotation.Nullable String totalWalletBalance) {
        this.totalWalletBalance = totalWalletBalance;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp asset(
            @jakarta.annotation.Nullable String asset) {
        this.asset = asset;
        return this;
    }

    /**
     * Get asset
     *
     * @return asset
     */
    @jakarta.annotation.Nullable
    public String getAsset() {
        return asset;
    }

    public void setAsset(@jakarta.annotation.Nullable String asset) {
        this.asset = asset;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp subAccountList(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryRespSubAccountListInner>
                            subAccountList) {
        this.subAccountList = subAccountList;
        return this;
    }

    public GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
            addSubAccountListItem(
                    GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryRespSubAccountListInner
                            subAccountListItem) {
        if (this.subAccountList == null) {
            this.subAccountList = new ArrayList<>();
        }
        this.subAccountList.add(subAccountListItem);
        return this;
    }

    /**
     * Get subAccountList
     *
     * @return subAccountList
     */
    @jakarta.annotation.Nullable
    @Valid
    public List<
                    @Valid
                    GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryRespSubAccountListInner>
            getSubAccountList() {
        return subAccountList;
    }

    public void setSubAccountList(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryRespSubAccountListInner>
                            subAccountList) {
        this.subAccountList = subAccountList;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp =
                        (GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp)
                                o;
        return Objects.equals(
                        this.totalInitialMargin,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalInitialMargin)
                && Objects.equals(
                        this.totalMaintenanceMargin,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalMaintenanceMargin)
                && Objects.equals(
                        this.totalMarginBalance,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalMarginBalance)
                && Objects.equals(
                        this.totalOpenOrderInitialMargin,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalOpenOrderInitialMargin)
                && Objects.equals(
                        this.totalPositionInitialMargin,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalPositionInitialMargin)
                && Objects.equals(
                        this.totalUnrealizedProfit,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalUnrealizedProfit)
                && Objects.equals(
                        this.totalWalletBalance,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .totalWalletBalance)
                && Objects.equals(
                        this.asset,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .asset)
                && Objects.equals(
                        this.subAccountList,
                        getSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .subAccountList);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                totalInitialMargin,
                totalMaintenanceMargin,
                totalMarginBalance,
                totalOpenOrderInitialMargin,
                totalPositionInitialMargin,
                totalUnrealizedProfit,
                totalWalletBalance,
                asset,
                subAccountList);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(
                "class GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp"
                        + " {\n");
        sb.append("		totalInitialMargin: ")
                .append(toIndentedString(totalInitialMargin))
                .append("\n");
        sb.append("		totalMaintenanceMargin: ")
                .append(toIndentedString(totalMaintenanceMargin))
                .append("\n");
        sb.append("		totalMarginBalance: ")
                .append(toIndentedString(totalMarginBalance))
                .append("\n");
        sb.append("		totalOpenOrderInitialMargin: ")
                .append(toIndentedString(totalOpenOrderInitialMargin))
                .append("\n");
        sb.append("		totalPositionInitialMargin: ")
                .append(toIndentedString(totalPositionInitialMargin))
                .append("\n");
        sb.append("		totalUnrealizedProfit: ")
                .append(toIndentedString(totalUnrealizedProfit))
                .append("\n");
        sb.append("		totalWalletBalance: ")
                .append(toIndentedString(totalWalletBalance))
                .append("\n");
        sb.append("		asset: ").append(toIndentedString(asset)).append("\n");
        sb.append("		subAccountList: ").append(toIndentedString(subAccountList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object totalInitialMarginValue = getTotalInitialMargin();
        String totalInitialMarginValueAsString = "";
        totalInitialMarginValueAsString = totalInitialMarginValue.toString();
        sb.append("totalInitialMargin=")
                .append(urlEncode(totalInitialMarginValueAsString))
                .append("");
        Object totalMaintenanceMarginValue = getTotalMaintenanceMargin();
        String totalMaintenanceMarginValueAsString = "";
        totalMaintenanceMarginValueAsString = totalMaintenanceMarginValue.toString();
        sb.append("totalMaintenanceMargin=")
                .append(urlEncode(totalMaintenanceMarginValueAsString))
                .append("");
        Object totalMarginBalanceValue = getTotalMarginBalance();
        String totalMarginBalanceValueAsString = "";
        totalMarginBalanceValueAsString = totalMarginBalanceValue.toString();
        sb.append("totalMarginBalance=")
                .append(urlEncode(totalMarginBalanceValueAsString))
                .append("");
        Object totalOpenOrderInitialMarginValue = getTotalOpenOrderInitialMargin();
        String totalOpenOrderInitialMarginValueAsString = "";
        totalOpenOrderInitialMarginValueAsString = totalOpenOrderInitialMarginValue.toString();
        sb.append("totalOpenOrderInitialMargin=")
                .append(urlEncode(totalOpenOrderInitialMarginValueAsString))
                .append("");
        Object totalPositionInitialMarginValue = getTotalPositionInitialMargin();
        String totalPositionInitialMarginValueAsString = "";
        totalPositionInitialMarginValueAsString = totalPositionInitialMarginValue.toString();
        sb.append("totalPositionInitialMargin=")
                .append(urlEncode(totalPositionInitialMarginValueAsString))
                .append("");
        Object totalUnrealizedProfitValue = getTotalUnrealizedProfit();
        String totalUnrealizedProfitValueAsString = "";
        totalUnrealizedProfitValueAsString = totalUnrealizedProfitValue.toString();
        sb.append("totalUnrealizedProfit=")
                .append(urlEncode(totalUnrealizedProfitValueAsString))
                .append("");
        Object totalWalletBalanceValue = getTotalWalletBalance();
        String totalWalletBalanceValueAsString = "";
        totalWalletBalanceValueAsString = totalWalletBalanceValue.toString();
        sb.append("totalWalletBalance=")
                .append(urlEncode(totalWalletBalanceValueAsString))
                .append("");
        Object assetValue = getAsset();
        String assetValueAsString = "";
        assetValueAsString = assetValue.toString();
        sb.append("asset=").append(urlEncode(assetValueAsString)).append("");
        Object subAccountListValue = getSubAccountList();
        String subAccountListValueAsString = "";
        subAccountListValueAsString =
                (String)
                        ((Collection) subAccountListValue)
                                .stream().map(Object::toString).collect(Collectors.joining(","));
        sb.append("subAccountList=").append(urlEncode(subAccountListValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("totalInitialMargin");
        openapiFields.add("totalMaintenanceMargin");
        openapiFields.add("totalMarginBalance");
        openapiFields.add("totalOpenOrderInitialMargin");
        openapiFields.add("totalPositionInitialMargin");
        openapiFields.add("totalUnrealizedProfit");
        openapiFields.add("totalWalletBalance");
        openapiFields.add("asset");
        openapiFields.add("subAccountList");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp"
                                    + " is not found in the empty JSON string",
                                GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                    .openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("totalInitialMargin") != null
                        && !jsonObj.get("totalInitialMargin").isJsonNull())
                && !jsonObj.get("totalInitialMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalInitialMargin` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("totalInitialMargin").toString()));
        }
        if ((jsonObj.get("totalMaintenanceMargin") != null
                        && !jsonObj.get("totalMaintenanceMargin").isJsonNull())
                && !jsonObj.get("totalMaintenanceMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalMaintenanceMargin` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("totalMaintenanceMargin").toString()));
        }
        if ((jsonObj.get("totalMarginBalance") != null
                        && !jsonObj.get("totalMarginBalance").isJsonNull())
                && !jsonObj.get("totalMarginBalance").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalMarginBalance` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("totalMarginBalance").toString()));
        }
        if ((jsonObj.get("totalOpenOrderInitialMargin") != null
                        && !jsonObj.get("totalOpenOrderInitialMargin").isJsonNull())
                && !jsonObj.get("totalOpenOrderInitialMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalOpenOrderInitialMargin` to be a primitive"
                                    + " type in the JSON string but got `%s`",
                            jsonObj.get("totalOpenOrderInitialMargin").toString()));
        }
        if ((jsonObj.get("totalPositionInitialMargin") != null
                        && !jsonObj.get("totalPositionInitialMargin").isJsonNull())
                && !jsonObj.get("totalPositionInitialMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalPositionInitialMargin` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("totalPositionInitialMargin").toString()));
        }
        if ((jsonObj.get("totalUnrealizedProfit") != null
                        && !jsonObj.get("totalUnrealizedProfit").isJsonNull())
                && !jsonObj.get("totalUnrealizedProfit").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalUnrealizedProfit` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("totalUnrealizedProfit").toString()));
        }
        if ((jsonObj.get("totalWalletBalance") != null
                        && !jsonObj.get("totalWalletBalance").isJsonNull())
                && !jsonObj.get("totalWalletBalance").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalWalletBalance` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("totalWalletBalance").toString()));
        }
        if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull())
                && !jsonObj.get("asset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `asset` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("asset").toString()));
        }
        if (jsonObj.get("subAccountList") != null && !jsonObj.get("subAccountList").isJsonNull()) {
            JsonArray jsonArraysubAccountList = jsonObj.getAsJsonArray("subAccountList");
            if (jsonArraysubAccountList != null) {
                // ensure the json data is an array
                if (!jsonObj.get("subAccountList").isJsonArray()) {
                    throw new IllegalArgumentException(
                            String.format(
                                    "Expected the field `subAccountList` to be an array in the JSON"
                                            + " string but got `%s`",
                                    jsonObj.get("subAccountList").toString()));
                }

                // validate the optional field `subAccountList` (array)
                for (int i = 0; i < jsonArraysubAccountList.size(); i++) {
                    GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryRespSubAccountListInner
                            .validateJsonElement(jsonArraysubAccountList.get(i));
                }
                ;
            }
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp' and
                // its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<
                            GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public
                        GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of
     * GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of
     *     GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
     * @throws IOException if the JSON string is invalid with respect to
     *     GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
     */
    public static GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp
                                .class);
    }

    /**
     * Convert an instance of
     * GetSummaryOfSubAccountsFuturesAccountV2Response1FutureAccountSummaryResp to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
