/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;
import org.hibernate.validator.constraints.*;

/** GetDetailOnSubAccountsMarginAccountResponse */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetDetailOnSubAccountsMarginAccountResponse {
    public static final String SERIALIZED_NAME_EMAIL = "email";

    @SerializedName(SERIALIZED_NAME_EMAIL)
    @jakarta.annotation.Nullable
    private String email;

    public static final String SERIALIZED_NAME_MARGIN_LEVEL = "marginLevel";

    @SerializedName(SERIALIZED_NAME_MARGIN_LEVEL)
    @jakarta.annotation.Nullable
    private String marginLevel;

    public static final String SERIALIZED_NAME_TOTAL_ASSET_OF_BTC = "totalAssetOfBtc";

    @SerializedName(SERIALIZED_NAME_TOTAL_ASSET_OF_BTC)
    @jakarta.annotation.Nullable
    private String totalAssetOfBtc;

    public static final String SERIALIZED_NAME_TOTAL_LIABILITY_OF_BTC = "totalLiabilityOfBtc";

    @SerializedName(SERIALIZED_NAME_TOTAL_LIABILITY_OF_BTC)
    @jakarta.annotation.Nullable
    private String totalLiabilityOfBtc;

    public static final String SERIALIZED_NAME_TOTAL_NET_ASSET_OF_BTC = "totalNetAssetOfBtc";

    @SerializedName(SERIALIZED_NAME_TOTAL_NET_ASSET_OF_BTC)
    @jakarta.annotation.Nullable
    private String totalNetAssetOfBtc;

    public static final String SERIALIZED_NAME_MARGIN_TRADE_COEFF_VO = "marginTradeCoeffVo";

    @SerializedName(SERIALIZED_NAME_MARGIN_TRADE_COEFF_VO)
    @jakarta.annotation.Nullable
    private GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo marginTradeCoeffVo;

    public static final String SERIALIZED_NAME_MARGIN_USER_ASSET_VO_LIST = "marginUserAssetVoList";

    @SerializedName(SERIALIZED_NAME_MARGIN_USER_ASSET_VO_LIST)
    @jakarta.annotation.Nullable
    private List<@Valid GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner>
            marginUserAssetVoList;

    public GetDetailOnSubAccountsMarginAccountResponse() {}

    public GetDetailOnSubAccountsMarginAccountResponse email(
            @jakarta.annotation.Nullable String email) {
        this.email = email;
        return this;
    }

    /**
     * Get email
     *
     * @return email
     */
    @jakarta.annotation.Nullable
    public String getEmail() {
        return email;
    }

    public void setEmail(@jakarta.annotation.Nullable String email) {
        this.email = email;
    }

    public GetDetailOnSubAccountsMarginAccountResponse marginLevel(
            @jakarta.annotation.Nullable String marginLevel) {
        this.marginLevel = marginLevel;
        return this;
    }

    /**
     * Get marginLevel
     *
     * @return marginLevel
     */
    @jakarta.annotation.Nullable
    public String getMarginLevel() {
        return marginLevel;
    }

    public void setMarginLevel(@jakarta.annotation.Nullable String marginLevel) {
        this.marginLevel = marginLevel;
    }

    public GetDetailOnSubAccountsMarginAccountResponse totalAssetOfBtc(
            @jakarta.annotation.Nullable String totalAssetOfBtc) {
        this.totalAssetOfBtc = totalAssetOfBtc;
        return this;
    }

    /**
     * Get totalAssetOfBtc
     *
     * @return totalAssetOfBtc
     */
    @jakarta.annotation.Nullable
    public String getTotalAssetOfBtc() {
        return totalAssetOfBtc;
    }

    public void setTotalAssetOfBtc(@jakarta.annotation.Nullable String totalAssetOfBtc) {
        this.totalAssetOfBtc = totalAssetOfBtc;
    }

    public GetDetailOnSubAccountsMarginAccountResponse totalLiabilityOfBtc(
            @jakarta.annotation.Nullable String totalLiabilityOfBtc) {
        this.totalLiabilityOfBtc = totalLiabilityOfBtc;
        return this;
    }

    /**
     * Get totalLiabilityOfBtc
     *
     * @return totalLiabilityOfBtc
     */
    @jakarta.annotation.Nullable
    public String getTotalLiabilityOfBtc() {
        return totalLiabilityOfBtc;
    }

    public void setTotalLiabilityOfBtc(@jakarta.annotation.Nullable String totalLiabilityOfBtc) {
        this.totalLiabilityOfBtc = totalLiabilityOfBtc;
    }

    public GetDetailOnSubAccountsMarginAccountResponse totalNetAssetOfBtc(
            @jakarta.annotation.Nullable String totalNetAssetOfBtc) {
        this.totalNetAssetOfBtc = totalNetAssetOfBtc;
        return this;
    }

    /**
     * Get totalNetAssetOfBtc
     *
     * @return totalNetAssetOfBtc
     */
    @jakarta.annotation.Nullable
    public String getTotalNetAssetOfBtc() {
        return totalNetAssetOfBtc;
    }

    public void setTotalNetAssetOfBtc(@jakarta.annotation.Nullable String totalNetAssetOfBtc) {
        this.totalNetAssetOfBtc = totalNetAssetOfBtc;
    }

    public GetDetailOnSubAccountsMarginAccountResponse marginTradeCoeffVo(
            @jakarta.annotation.Nullable
                    GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
                            marginTradeCoeffVo) {
        this.marginTradeCoeffVo = marginTradeCoeffVo;
        return this;
    }

    /**
     * Get marginTradeCoeffVo
     *
     * @return marginTradeCoeffVo
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo getMarginTradeCoeffVo() {
        return marginTradeCoeffVo;
    }

    public void setMarginTradeCoeffVo(
            @jakarta.annotation.Nullable
                    GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
                            marginTradeCoeffVo) {
        this.marginTradeCoeffVo = marginTradeCoeffVo;
    }

    public GetDetailOnSubAccountsMarginAccountResponse marginUserAssetVoList(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner>
                            marginUserAssetVoList) {
        this.marginUserAssetVoList = marginUserAssetVoList;
        return this;
    }

    public GetDetailOnSubAccountsMarginAccountResponse addMarginUserAssetVoListItem(
            GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                    marginUserAssetVoListItem) {
        if (this.marginUserAssetVoList == null) {
            this.marginUserAssetVoList = new ArrayList<>();
        }
        this.marginUserAssetVoList.add(marginUserAssetVoListItem);
        return this;
    }

    /**
     * Get marginUserAssetVoList
     *
     * @return marginUserAssetVoList
     */
    @jakarta.annotation.Nullable
    @Valid
    public List<@Valid GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner>
            getMarginUserAssetVoList() {
        return marginUserAssetVoList;
    }

    public void setMarginUserAssetVoList(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner>
                            marginUserAssetVoList) {
        this.marginUserAssetVoList = marginUserAssetVoList;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDetailOnSubAccountsMarginAccountResponse getDetailOnSubAccountsMarginAccountResponse =
                (GetDetailOnSubAccountsMarginAccountResponse) o;
        return Objects.equals(this.email, getDetailOnSubAccountsMarginAccountResponse.email)
                && Objects.equals(
                        this.marginLevel, getDetailOnSubAccountsMarginAccountResponse.marginLevel)
                && Objects.equals(
                        this.totalAssetOfBtc,
                        getDetailOnSubAccountsMarginAccountResponse.totalAssetOfBtc)
                && Objects.equals(
                        this.totalLiabilityOfBtc,
                        getDetailOnSubAccountsMarginAccountResponse.totalLiabilityOfBtc)
                && Objects.equals(
                        this.totalNetAssetOfBtc,
                        getDetailOnSubAccountsMarginAccountResponse.totalNetAssetOfBtc)
                && Objects.equals(
                        this.marginTradeCoeffVo,
                        getDetailOnSubAccountsMarginAccountResponse.marginTradeCoeffVo)
                && Objects.equals(
                        this.marginUserAssetVoList,
                        getDetailOnSubAccountsMarginAccountResponse.marginUserAssetVoList);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                email,
                marginLevel,
                totalAssetOfBtc,
                totalLiabilityOfBtc,
                totalNetAssetOfBtc,
                marginTradeCoeffVo,
                marginUserAssetVoList);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetDetailOnSubAccountsMarginAccountResponse {\n");
        sb.append("		email: ").append(toIndentedString(email)).append("\n");
        sb.append("		marginLevel: ").append(toIndentedString(marginLevel)).append("\n");
        sb.append("		totalAssetOfBtc: ").append(toIndentedString(totalAssetOfBtc)).append("\n");
        sb.append("		totalLiabilityOfBtc: ")
                .append(toIndentedString(totalLiabilityOfBtc))
                .append("\n");
        sb.append("		totalNetAssetOfBtc: ")
                .append(toIndentedString(totalNetAssetOfBtc))
                .append("\n");
        sb.append("		marginTradeCoeffVo: ")
                .append(toIndentedString(marginTradeCoeffVo))
                .append("\n");
        sb.append("		marginUserAssetVoList: ")
                .append(toIndentedString(marginUserAssetVoList))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object emailValue = getEmail();
        String emailValueAsString = "";
        emailValueAsString = emailValue.toString();
        sb.append("email=").append(urlEncode(emailValueAsString)).append("");
        Object marginLevelValue = getMarginLevel();
        String marginLevelValueAsString = "";
        marginLevelValueAsString = marginLevelValue.toString();
        sb.append("marginLevel=").append(urlEncode(marginLevelValueAsString)).append("");
        Object totalAssetOfBtcValue = getTotalAssetOfBtc();
        String totalAssetOfBtcValueAsString = "";
        totalAssetOfBtcValueAsString = totalAssetOfBtcValue.toString();
        sb.append("totalAssetOfBtc=").append(urlEncode(totalAssetOfBtcValueAsString)).append("");
        Object totalLiabilityOfBtcValue = getTotalLiabilityOfBtc();
        String totalLiabilityOfBtcValueAsString = "";
        totalLiabilityOfBtcValueAsString = totalLiabilityOfBtcValue.toString();
        sb.append("totalLiabilityOfBtc=")
                .append(urlEncode(totalLiabilityOfBtcValueAsString))
                .append("");
        Object totalNetAssetOfBtcValue = getTotalNetAssetOfBtc();
        String totalNetAssetOfBtcValueAsString = "";
        totalNetAssetOfBtcValueAsString = totalNetAssetOfBtcValue.toString();
        sb.append("totalNetAssetOfBtc=")
                .append(urlEncode(totalNetAssetOfBtcValueAsString))
                .append("");
        Object marginTradeCoeffVoValue = getMarginTradeCoeffVo();
        String marginTradeCoeffVoValueAsString = "";
        marginTradeCoeffVoValueAsString = marginTradeCoeffVoValue.toString();
        sb.append("marginTradeCoeffVo=")
                .append(urlEncode(marginTradeCoeffVoValueAsString))
                .append("");
        Object marginUserAssetVoListValue = getMarginUserAssetVoList();
        String marginUserAssetVoListValueAsString = "";
        marginUserAssetVoListValueAsString =
                (String)
                        ((Collection) marginUserAssetVoListValue)
                                .stream().map(Object::toString).collect(Collectors.joining(","));
        sb.append("marginUserAssetVoList=")
                .append(urlEncode(marginUserAssetVoListValueAsString))
                .append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("email");
        openapiFields.add("marginLevel");
        openapiFields.add("totalAssetOfBtc");
        openapiFields.add("totalLiabilityOfBtc");
        openapiFields.add("totalNetAssetOfBtc");
        openapiFields.add("marginTradeCoeffVo");
        openapiFields.add("marginUserAssetVoList");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetDetailOnSubAccountsMarginAccountResponse
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetDetailOnSubAccountsMarginAccountResponse.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetDetailOnSubAccountsMarginAccountResponse is not found in"
                                    + " the empty JSON string",
                                GetDetailOnSubAccountsMarginAccountResponse.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetDetailOnSubAccountsMarginAccountResponse.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetDetailOnSubAccountsMarginAccountResponse` properties."
                                    + " JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull())
                && !jsonObj.get("email").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `email` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("email").toString()));
        }
        if ((jsonObj.get("marginLevel") != null && !jsonObj.get("marginLevel").isJsonNull())
                && !jsonObj.get("marginLevel").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `marginLevel` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("marginLevel").toString()));
        }
        if ((jsonObj.get("totalAssetOfBtc") != null && !jsonObj.get("totalAssetOfBtc").isJsonNull())
                && !jsonObj.get("totalAssetOfBtc").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalAssetOfBtc` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("totalAssetOfBtc").toString()));
        }
        if ((jsonObj.get("totalLiabilityOfBtc") != null
                        && !jsonObj.get("totalLiabilityOfBtc").isJsonNull())
                && !jsonObj.get("totalLiabilityOfBtc").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalLiabilityOfBtc` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("totalLiabilityOfBtc").toString()));
        }
        if ((jsonObj.get("totalNetAssetOfBtc") != null
                        && !jsonObj.get("totalNetAssetOfBtc").isJsonNull())
                && !jsonObj.get("totalNetAssetOfBtc").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalNetAssetOfBtc` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("totalNetAssetOfBtc").toString()));
        }
        // validate the optional field `marginTradeCoeffVo`
        if (jsonObj.get("marginTradeCoeffVo") != null
                && !jsonObj.get("marginTradeCoeffVo").isJsonNull()) {
            GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.validateJsonElement(
                    jsonObj.get("marginTradeCoeffVo"));
        }
        if (jsonObj.get("marginUserAssetVoList") != null
                && !jsonObj.get("marginUserAssetVoList").isJsonNull()) {
            JsonArray jsonArraymarginUserAssetVoList =
                    jsonObj.getAsJsonArray("marginUserAssetVoList");
            if (jsonArraymarginUserAssetVoList != null) {
                // ensure the json data is an array
                if (!jsonObj.get("marginUserAssetVoList").isJsonArray()) {
                    throw new IllegalArgumentException(
                            String.format(
                                    "Expected the field `marginUserAssetVoList` to be an array in"
                                            + " the JSON string but got `%s`",
                                    jsonObj.get("marginUserAssetVoList").toString()));
                }

                // validate the optional field `marginUserAssetVoList` (array)
                for (int i = 0; i < jsonArraymarginUserAssetVoList.size(); i++) {
                    GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                            .validateJsonElement(jsonArraymarginUserAssetVoList.get(i));
                }
                ;
            }
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetDetailOnSubAccountsMarginAccountResponse.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'GetDetailOnSubAccountsMarginAccountResponse' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetDetailOnSubAccountsMarginAccountResponse> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(GetDetailOnSubAccountsMarginAccountResponse.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetDetailOnSubAccountsMarginAccountResponse>() {
                        @Override
                        public void write(
                                JsonWriter out, GetDetailOnSubAccountsMarginAccountResponse value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetDetailOnSubAccountsMarginAccountResponse read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetDetailOnSubAccountsMarginAccountResponse given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetDetailOnSubAccountsMarginAccountResponse
     * @throws IOException if the JSON string is invalid with respect to
     *     GetDetailOnSubAccountsMarginAccountResponse
     */
    public static GetDetailOnSubAccountsMarginAccountResponse fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, GetDetailOnSubAccountsMarginAccountResponse.class);
    }

    /**
     * Convert an instance of GetDetailOnSubAccountsMarginAccountResponse to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
