/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner {
    public static final String SERIALIZED_NAME_ASSET = "asset";

    @SerializedName(SERIALIZED_NAME_ASSET)
    @jakarta.annotation.Nullable
    private String asset;

    public static final String SERIALIZED_NAME_INITIAL_MARGIN = "initialMargin";

    @SerializedName(SERIALIZED_NAME_INITIAL_MARGIN)
    @jakarta.annotation.Nullable
    private String initialMargin;

    public static final String SERIALIZED_NAME_MAINTENANCE_MARGIN = "maintenanceMargin";

    @SerializedName(SERIALIZED_NAME_MAINTENANCE_MARGIN)
    @jakarta.annotation.Nullable
    private String maintenanceMargin;

    public static final String SERIALIZED_NAME_MARGIN_BALANCE = "marginBalance";

    @SerializedName(SERIALIZED_NAME_MARGIN_BALANCE)
    @jakarta.annotation.Nullable
    private String marginBalance;

    public static final String SERIALIZED_NAME_MAX_WITHDRAW_AMOUNT = "maxWithdrawAmount";

    @SerializedName(SERIALIZED_NAME_MAX_WITHDRAW_AMOUNT)
    @jakarta.annotation.Nullable
    private String maxWithdrawAmount;

    public static final String SERIALIZED_NAME_OPEN_ORDER_INITIAL_MARGIN = "openOrderInitialMargin";

    @SerializedName(SERIALIZED_NAME_OPEN_ORDER_INITIAL_MARGIN)
    @jakarta.annotation.Nullable
    private String openOrderInitialMargin;

    public static final String SERIALIZED_NAME_POSITION_INITIAL_MARGIN = "positionInitialMargin";

    @SerializedName(SERIALIZED_NAME_POSITION_INITIAL_MARGIN)
    @jakarta.annotation.Nullable
    private String positionInitialMargin;

    public static final String SERIALIZED_NAME_UNREALIZED_PROFIT = "unrealizedProfit";

    @SerializedName(SERIALIZED_NAME_UNREALIZED_PROFIT)
    @jakarta.annotation.Nullable
    private String unrealizedProfit;

    public static final String SERIALIZED_NAME_WALLET_BALANCE = "walletBalance";

    @SerializedName(SERIALIZED_NAME_WALLET_BALANCE)
    @jakarta.annotation.Nullable
    private String walletBalance;

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner() {}

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner asset(
            @jakarta.annotation.Nullable String asset) {
        this.asset = asset;
        return this;
    }

    /**
     * Get asset
     *
     * @return asset
     */
    @jakarta.annotation.Nullable
    public String getAsset() {
        return asset;
    }

    public void setAsset(@jakarta.annotation.Nullable String asset) {
        this.asset = asset;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            initialMargin(@jakarta.annotation.Nullable String initialMargin) {
        this.initialMargin = initialMargin;
        return this;
    }

    /**
     * Get initialMargin
     *
     * @return initialMargin
     */
    @jakarta.annotation.Nullable
    public String getInitialMargin() {
        return initialMargin;
    }

    public void setInitialMargin(@jakarta.annotation.Nullable String initialMargin) {
        this.initialMargin = initialMargin;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            maintenanceMargin(@jakarta.annotation.Nullable String maintenanceMargin) {
        this.maintenanceMargin = maintenanceMargin;
        return this;
    }

    /**
     * Get maintenanceMargin
     *
     * @return maintenanceMargin
     */
    @jakarta.annotation.Nullable
    public String getMaintenanceMargin() {
        return maintenanceMargin;
    }

    public void setMaintenanceMargin(@jakarta.annotation.Nullable String maintenanceMargin) {
        this.maintenanceMargin = maintenanceMargin;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            marginBalance(@jakarta.annotation.Nullable String marginBalance) {
        this.marginBalance = marginBalance;
        return this;
    }

    /**
     * Get marginBalance
     *
     * @return marginBalance
     */
    @jakarta.annotation.Nullable
    public String getMarginBalance() {
        return marginBalance;
    }

    public void setMarginBalance(@jakarta.annotation.Nullable String marginBalance) {
        this.marginBalance = marginBalance;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            maxWithdrawAmount(@jakarta.annotation.Nullable String maxWithdrawAmount) {
        this.maxWithdrawAmount = maxWithdrawAmount;
        return this;
    }

    /**
     * Get maxWithdrawAmount
     *
     * @return maxWithdrawAmount
     */
    @jakarta.annotation.Nullable
    public String getMaxWithdrawAmount() {
        return maxWithdrawAmount;
    }

    public void setMaxWithdrawAmount(@jakarta.annotation.Nullable String maxWithdrawAmount) {
        this.maxWithdrawAmount = maxWithdrawAmount;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            openOrderInitialMargin(@jakarta.annotation.Nullable String openOrderInitialMargin) {
        this.openOrderInitialMargin = openOrderInitialMargin;
        return this;
    }

    /**
     * Get openOrderInitialMargin
     *
     * @return openOrderInitialMargin
     */
    @jakarta.annotation.Nullable
    public String getOpenOrderInitialMargin() {
        return openOrderInitialMargin;
    }

    public void setOpenOrderInitialMargin(
            @jakarta.annotation.Nullable String openOrderInitialMargin) {
        this.openOrderInitialMargin = openOrderInitialMargin;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            positionInitialMargin(@jakarta.annotation.Nullable String positionInitialMargin) {
        this.positionInitialMargin = positionInitialMargin;
        return this;
    }

    /**
     * Get positionInitialMargin
     *
     * @return positionInitialMargin
     */
    @jakarta.annotation.Nullable
    public String getPositionInitialMargin() {
        return positionInitialMargin;
    }

    public void setPositionInitialMargin(
            @jakarta.annotation.Nullable String positionInitialMargin) {
        this.positionInitialMargin = positionInitialMargin;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            unrealizedProfit(@jakarta.annotation.Nullable String unrealizedProfit) {
        this.unrealizedProfit = unrealizedProfit;
        return this;
    }

    /**
     * Get unrealizedProfit
     *
     * @return unrealizedProfit
     */
    @jakarta.annotation.Nullable
    public String getUnrealizedProfit() {
        return unrealizedProfit;
    }

    public void setUnrealizedProfit(@jakarta.annotation.Nullable String unrealizedProfit) {
        this.unrealizedProfit = unrealizedProfit;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            walletBalance(@jakarta.annotation.Nullable String walletBalance) {
        this.walletBalance = walletBalance;
        return this;
    }

    /**
     * Get walletBalance
     *
     * @return walletBalance
     */
    @jakarta.annotation.Nullable
    public String getWalletBalance() {
        return walletBalance;
    }

    public void setWalletBalance(@jakarta.annotation.Nullable String walletBalance) {
        this.walletBalance = walletBalance;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner =
                        (GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner)
                                o;
        return Objects.equals(
                        this.asset,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .asset)
                && Objects.equals(
                        this.initialMargin,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .initialMargin)
                && Objects.equals(
                        this.maintenanceMargin,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .maintenanceMargin)
                && Objects.equals(
                        this.marginBalance,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .marginBalance)
                && Objects.equals(
                        this.maxWithdrawAmount,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .maxWithdrawAmount)
                && Objects.equals(
                        this.openOrderInitialMargin,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .openOrderInitialMargin)
                && Objects.equals(
                        this.positionInitialMargin,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .positionInitialMargin)
                && Objects.equals(
                        this.unrealizedProfit,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .unrealizedProfit)
                && Objects.equals(
                        this.walletBalance,
                        getDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .walletBalance);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                asset,
                initialMargin,
                maintenanceMargin,
                marginBalance,
                maxWithdrawAmount,
                openOrderInitialMargin,
                positionInitialMargin,
                unrealizedProfit,
                walletBalance);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(
                "class GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner"
                        + " {\n");
        sb.append("		asset: ").append(toIndentedString(asset)).append("\n");
        sb.append("		initialMargin: ").append(toIndentedString(initialMargin)).append("\n");
        sb.append("		maintenanceMargin: ").append(toIndentedString(maintenanceMargin)).append("\n");
        sb.append("		marginBalance: ").append(toIndentedString(marginBalance)).append("\n");
        sb.append("		maxWithdrawAmount: ").append(toIndentedString(maxWithdrawAmount)).append("\n");
        sb.append("		openOrderInitialMargin: ")
                .append(toIndentedString(openOrderInitialMargin))
                .append("\n");
        sb.append("		positionInitialMargin: ")
                .append(toIndentedString(positionInitialMargin))
                .append("\n");
        sb.append("		unrealizedProfit: ").append(toIndentedString(unrealizedProfit)).append("\n");
        sb.append("		walletBalance: ").append(toIndentedString(walletBalance)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object assetValue = getAsset();
        String assetValueAsString = "";
        assetValueAsString = assetValue.toString();
        sb.append("asset=").append(urlEncode(assetValueAsString)).append("");
        Object initialMarginValue = getInitialMargin();
        String initialMarginValueAsString = "";
        initialMarginValueAsString = initialMarginValue.toString();
        sb.append("initialMargin=").append(urlEncode(initialMarginValueAsString)).append("");
        Object maintenanceMarginValue = getMaintenanceMargin();
        String maintenanceMarginValueAsString = "";
        maintenanceMarginValueAsString = maintenanceMarginValue.toString();
        sb.append("maintenanceMargin=")
                .append(urlEncode(maintenanceMarginValueAsString))
                .append("");
        Object marginBalanceValue = getMarginBalance();
        String marginBalanceValueAsString = "";
        marginBalanceValueAsString = marginBalanceValue.toString();
        sb.append("marginBalance=").append(urlEncode(marginBalanceValueAsString)).append("");
        Object maxWithdrawAmountValue = getMaxWithdrawAmount();
        String maxWithdrawAmountValueAsString = "";
        maxWithdrawAmountValueAsString = maxWithdrawAmountValue.toString();
        sb.append("maxWithdrawAmount=")
                .append(urlEncode(maxWithdrawAmountValueAsString))
                .append("");
        Object openOrderInitialMarginValue = getOpenOrderInitialMargin();
        String openOrderInitialMarginValueAsString = "";
        openOrderInitialMarginValueAsString = openOrderInitialMarginValue.toString();
        sb.append("openOrderInitialMargin=")
                .append(urlEncode(openOrderInitialMarginValueAsString))
                .append("");
        Object positionInitialMarginValue = getPositionInitialMargin();
        String positionInitialMarginValueAsString = "";
        positionInitialMarginValueAsString = positionInitialMarginValue.toString();
        sb.append("positionInitialMargin=")
                .append(urlEncode(positionInitialMarginValueAsString))
                .append("");
        Object unrealizedProfitValue = getUnrealizedProfit();
        String unrealizedProfitValueAsString = "";
        unrealizedProfitValueAsString = unrealizedProfitValue.toString();
        sb.append("unrealizedProfit=").append(urlEncode(unrealizedProfitValueAsString)).append("");
        Object walletBalanceValue = getWalletBalance();
        String walletBalanceValueAsString = "";
        walletBalanceValueAsString = walletBalanceValue.toString();
        sb.append("walletBalance=").append(urlEncode(walletBalanceValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("asset");
        openapiFields.add("initialMargin");
        openapiFields.add("maintenanceMargin");
        openapiFields.add("marginBalance");
        openapiFields.add("maxWithdrawAmount");
        openapiFields.add("openOrderInitialMargin");
        openapiFields.add("positionInitialMargin");
        openapiFields.add("unrealizedProfit");
        openapiFields.add("walletBalance");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner"
                                    + " is not found in the empty JSON string",
                                GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                    .openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull())
                && !jsonObj.get("asset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `asset` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("asset").toString()));
        }
        if ((jsonObj.get("initialMargin") != null && !jsonObj.get("initialMargin").isJsonNull())
                && !jsonObj.get("initialMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `initialMargin` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("initialMargin").toString()));
        }
        if ((jsonObj.get("maintenanceMargin") != null
                        && !jsonObj.get("maintenanceMargin").isJsonNull())
                && !jsonObj.get("maintenanceMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `maintenanceMargin` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("maintenanceMargin").toString()));
        }
        if ((jsonObj.get("marginBalance") != null && !jsonObj.get("marginBalance").isJsonNull())
                && !jsonObj.get("marginBalance").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `marginBalance` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("marginBalance").toString()));
        }
        if ((jsonObj.get("maxWithdrawAmount") != null
                        && !jsonObj.get("maxWithdrawAmount").isJsonNull())
                && !jsonObj.get("maxWithdrawAmount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `maxWithdrawAmount` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("maxWithdrawAmount").toString()));
        }
        if ((jsonObj.get("openOrderInitialMargin") != null
                        && !jsonObj.get("openOrderInitialMargin").isJsonNull())
                && !jsonObj.get("openOrderInitialMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `openOrderInitialMargin` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("openOrderInitialMargin").toString()));
        }
        if ((jsonObj.get("positionInitialMargin") != null
                        && !jsonObj.get("positionInitialMargin").isJsonNull())
                && !jsonObj.get("positionInitialMargin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `positionInitialMargin` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("positionInitialMargin").toString()));
        }
        if ((jsonObj.get("unrealizedProfit") != null
                        && !jsonObj.get("unrealizedProfit").isJsonNull())
                && !jsonObj.get("unrealizedProfit").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `unrealizedProfit` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("unrealizedProfit").toString()));
        }
        if ((jsonObj.get("walletBalance") != null && !jsonObj.get("walletBalance").isJsonNull())
                && !jsonObj.get("walletBalance").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `walletBalance` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("walletBalance").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner' and
                // its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<
                            GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public
                        GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of
     * GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner given an JSON
     * string
     *
     * @param jsonString JSON string
     * @return An instance of
     *     GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
     */
    public static GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
            fromJson(String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner
                                .class);
    }

    /**
     * Convert an instance of
     * GetDetailOnSubAccountsFuturesAccountV2Response1FutureAccountRespAssetsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
