/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner {
    public static final String SERIALIZED_NAME_ASSET = "asset";

    @SerializedName(SERIALIZED_NAME_ASSET)
    @jakarta.annotation.Nullable
    private String asset;

    public static final String SERIALIZED_NAME_BORROWED = "borrowed";

    @SerializedName(SERIALIZED_NAME_BORROWED)
    @jakarta.annotation.Nullable
    private String borrowed;

    public static final String SERIALIZED_NAME_FREE = "free";

    @SerializedName(SERIALIZED_NAME_FREE)
    @jakarta.annotation.Nullable
    private String free;

    public static final String SERIALIZED_NAME_INTEREST = "interest";

    @SerializedName(SERIALIZED_NAME_INTEREST)
    @jakarta.annotation.Nullable
    private String interest;

    public static final String SERIALIZED_NAME_LOCKED = "locked";

    @SerializedName(SERIALIZED_NAME_LOCKED)
    @jakarta.annotation.Nullable
    private String locked;

    public static final String SERIALIZED_NAME_NET_ASSET = "netAsset";

    @SerializedName(SERIALIZED_NAME_NET_ASSET)
    @jakarta.annotation.Nullable
    private String netAsset;

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner() {}

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner asset(
            @jakarta.annotation.Nullable String asset) {
        this.asset = asset;
        return this;
    }

    /**
     * Get asset
     *
     * @return asset
     */
    @jakarta.annotation.Nullable
    public String getAsset() {
        return asset;
    }

    public void setAsset(@jakarta.annotation.Nullable String asset) {
        this.asset = asset;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner borrowed(
            @jakarta.annotation.Nullable String borrowed) {
        this.borrowed = borrowed;
        return this;
    }

    /**
     * Get borrowed
     *
     * @return borrowed
     */
    @jakarta.annotation.Nullable
    public String getBorrowed() {
        return borrowed;
    }

    public void setBorrowed(@jakarta.annotation.Nullable String borrowed) {
        this.borrowed = borrowed;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner free(
            @jakarta.annotation.Nullable String free) {
        this.free = free;
        return this;
    }

    /**
     * Get free
     *
     * @return free
     */
    @jakarta.annotation.Nullable
    public String getFree() {
        return free;
    }

    public void setFree(@jakarta.annotation.Nullable String free) {
        this.free = free;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner interest(
            @jakarta.annotation.Nullable String interest) {
        this.interest = interest;
        return this;
    }

    /**
     * Get interest
     *
     * @return interest
     */
    @jakarta.annotation.Nullable
    public String getInterest() {
        return interest;
    }

    public void setInterest(@jakarta.annotation.Nullable String interest) {
        this.interest = interest;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner locked(
            @jakarta.annotation.Nullable String locked) {
        this.locked = locked;
        return this;
    }

    /**
     * Get locked
     *
     * @return locked
     */
    @jakarta.annotation.Nullable
    public String getLocked() {
        return locked;
    }

    public void setLocked(@jakarta.annotation.Nullable String locked) {
        this.locked = locked;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner netAsset(
            @jakarta.annotation.Nullable String netAsset) {
        this.netAsset = netAsset;
        return this;
    }

    /**
     * Get netAsset
     *
     * @return netAsset
     */
    @jakarta.annotation.Nullable
    public String getNetAsset() {
        return netAsset;
    }

    public void setNetAsset(@jakarta.annotation.Nullable String netAsset) {
        this.netAsset = netAsset;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner =
                        (GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner) o;
        return Objects.equals(
                        this.asset,
                        getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner.asset)
                && Objects.equals(
                        this.borrowed,
                        getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                .borrowed)
                && Objects.equals(
                        this.free,
                        getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner.free)
                && Objects.equals(
                        this.interest,
                        getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                .interest)
                && Objects.equals(
                        this.locked,
                        getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                .locked)
                && Objects.equals(
                        this.netAsset,
                        getDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                .netAsset);
    }

    @Override
    public int hashCode() {
        return Objects.hash(asset, borrowed, free, interest, locked, netAsset);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(
                "class GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner {\n");
        sb.append("		asset: ").append(toIndentedString(asset)).append("\n");
        sb.append("		borrowed: ").append(toIndentedString(borrowed)).append("\n");
        sb.append("		free: ").append(toIndentedString(free)).append("\n");
        sb.append("		interest: ").append(toIndentedString(interest)).append("\n");
        sb.append("		locked: ").append(toIndentedString(locked)).append("\n");
        sb.append("		netAsset: ").append(toIndentedString(netAsset)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object assetValue = getAsset();
        String assetValueAsString = "";
        assetValueAsString = assetValue.toString();
        sb.append("asset=").append(urlEncode(assetValueAsString)).append("");
        Object borrowedValue = getBorrowed();
        String borrowedValueAsString = "";
        borrowedValueAsString = borrowedValue.toString();
        sb.append("borrowed=").append(urlEncode(borrowedValueAsString)).append("");
        Object freeValue = getFree();
        String freeValueAsString = "";
        freeValueAsString = freeValue.toString();
        sb.append("free=").append(urlEncode(freeValueAsString)).append("");
        Object interestValue = getInterest();
        String interestValueAsString = "";
        interestValueAsString = interestValue.toString();
        sb.append("interest=").append(urlEncode(interestValueAsString)).append("");
        Object lockedValue = getLocked();
        String lockedValueAsString = "";
        lockedValueAsString = lockedValue.toString();
        sb.append("locked=").append(urlEncode(lockedValueAsString)).append("");
        Object netAssetValue = getNetAsset();
        String netAssetValueAsString = "";
        netAssetValueAsString = netAssetValue.toString();
        sb.append("netAsset=").append(urlEncode(netAssetValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("asset");
        openapiFields.add("borrowed");
        openapiFields.add("free");
        openapiFields.add("interest");
        openapiFields.add("locked");
        openapiFields.add("netAsset");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner"
                                    + " is not found in the empty JSON string",
                                GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner.openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull())
                && !jsonObj.get("asset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `asset` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("asset").toString()));
        }
        if ((jsonObj.get("borrowed") != null && !jsonObj.get("borrowed").isJsonNull())
                && !jsonObj.get("borrowed").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `borrowed` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("borrowed").toString()));
        }
        if ((jsonObj.get("free") != null && !jsonObj.get("free").isJsonNull())
                && !jsonObj.get("free").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `free` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("free").toString()));
        }
        if ((jsonObj.get("interest") != null && !jsonObj.get("interest").isJsonNull())
                && !jsonObj.get("interest").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `interest` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("interest").toString()));
        }
        if ((jsonObj.get("locked") != null && !jsonObj.get("locked").isJsonNull())
                && !jsonObj.get("locked").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `locked` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("locked").toString()));
        }
        if ((jsonObj.get("netAsset") != null && !jsonObj.get("netAsset").isJsonNull())
                && !jsonObj.get("netAsset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `netAsset` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("netAsset").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
     * given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
     */
    public static GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
                                .class);
    }

    /**
     * Convert an instance of GetDetailOnSubAccountsMarginAccountResponseMarginUserAssetVoListInner
     * to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
