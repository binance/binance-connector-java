/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo {
    public static final String SERIALIZED_NAME_FORCE_LIQUIDATION_BAR = "forceLiquidationBar";

    @SerializedName(SERIALIZED_NAME_FORCE_LIQUIDATION_BAR)
    @jakarta.annotation.Nullable
    private String forceLiquidationBar;

    public static final String SERIALIZED_NAME_MARGIN_CALL_BAR = "marginCallBar";

    @SerializedName(SERIALIZED_NAME_MARGIN_CALL_BAR)
    @jakarta.annotation.Nullable
    private String marginCallBar;

    public static final String SERIALIZED_NAME_NORMAL_BAR = "normalBar";

    @SerializedName(SERIALIZED_NAME_NORMAL_BAR)
    @jakarta.annotation.Nullable
    private String normalBar;

    public GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo() {}

    public GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo forceLiquidationBar(
            @jakarta.annotation.Nullable String forceLiquidationBar) {
        this.forceLiquidationBar = forceLiquidationBar;
        return this;
    }

    /**
     * Get forceLiquidationBar
     *
     * @return forceLiquidationBar
     */
    @jakarta.annotation.Nullable
    public String getForceLiquidationBar() {
        return forceLiquidationBar;
    }

    public void setForceLiquidationBar(@jakarta.annotation.Nullable String forceLiquidationBar) {
        this.forceLiquidationBar = forceLiquidationBar;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo marginCallBar(
            @jakarta.annotation.Nullable String marginCallBar) {
        this.marginCallBar = marginCallBar;
        return this;
    }

    /**
     * Get marginCallBar
     *
     * @return marginCallBar
     */
    @jakarta.annotation.Nullable
    public String getMarginCallBar() {
        return marginCallBar;
    }

    public void setMarginCallBar(@jakarta.annotation.Nullable String marginCallBar) {
        this.marginCallBar = marginCallBar;
    }

    public GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo normalBar(
            @jakarta.annotation.Nullable String normalBar) {
        this.normalBar = normalBar;
        return this;
    }

    /**
     * Get normalBar
     *
     * @return normalBar
     */
    @jakarta.annotation.Nullable
    public String getNormalBar() {
        return normalBar;
    }

    public void setNormalBar(@jakarta.annotation.Nullable String normalBar) {
        this.normalBar = normalBar;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
                getDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo =
                        (GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo) o;
        return Objects.equals(
                        this.forceLiquidationBar,
                        getDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
                                .forceLiquidationBar)
                && Objects.equals(
                        this.marginCallBar,
                        getDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.marginCallBar)
                && Objects.equals(
                        this.normalBar,
                        getDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.normalBar);
    }

    @Override
    public int hashCode() {
        return Objects.hash(forceLiquidationBar, marginCallBar, normalBar);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo {\n");
        sb.append("		forceLiquidationBar: ")
                .append(toIndentedString(forceLiquidationBar))
                .append("\n");
        sb.append("		marginCallBar: ").append(toIndentedString(marginCallBar)).append("\n");
        sb.append("		normalBar: ").append(toIndentedString(normalBar)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object forceLiquidationBarValue = getForceLiquidationBar();
        String forceLiquidationBarValueAsString = "";
        forceLiquidationBarValueAsString = forceLiquidationBarValue.toString();
        sb.append("forceLiquidationBar=")
                .append(urlEncode(forceLiquidationBarValueAsString))
                .append("");
        Object marginCallBarValue = getMarginCallBar();
        String marginCallBarValueAsString = "";
        marginCallBarValueAsString = marginCallBarValue.toString();
        sb.append("marginCallBar=").append(urlEncode(marginCallBarValueAsString)).append("");
        Object normalBarValue = getNormalBar();
        String normalBarValueAsString = "";
        normalBarValueAsString = normalBarValue.toString();
        sb.append("normalBar=").append(urlEncode(normalBarValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("forceLiquidationBar");
        openapiFields.add("marginCallBar");
        openapiFields.add("normalBar");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo"
                                    + " is not found in the empty JSON string",
                                GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("forceLiquidationBar") != null
                        && !jsonObj.get("forceLiquidationBar").isJsonNull())
                && !jsonObj.get("forceLiquidationBar").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `forceLiquidationBar` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("forceLiquidationBar").toString()));
        }
        if ((jsonObj.get("marginCallBar") != null && !jsonObj.get("marginCallBar").isJsonNull())
                && !jsonObj.get("marginCallBar").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `marginCallBar` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("marginCallBar").toString()));
        }
        if ((jsonObj.get("normalBar") != null && !jsonObj.get("normalBar").isJsonNull())
                && !jsonObj.get("normalBar").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `normalBar` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("normalBar").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo' and
                // its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo read(
                                JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo given an
     * JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
     * @throws IOException if the JSON string is invalid with respect to
     *     GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo
     */
    public static GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo.class);
    }

    /**
     * Convert an instance of GetDetailOnSubAccountsMarginAccountResponseMarginTradeCoeffVo to an
     * JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
