/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;
import org.hibernate.validator.constraints.*;

/** QuerySubAccountTransactionStatisticsResponse1 */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class QuerySubAccountTransactionStatisticsResponse1 {
    public static final String SERIALIZED_NAME_RECENT30_BTC_TOTAL = "recent30BtcTotal";

    @SerializedName(SERIALIZED_NAME_RECENT30_BTC_TOTAL)
    @jakarta.annotation.Nullable
    private String recent30BtcTotal;

    public static final String SERIALIZED_NAME_RECENT30_BTC_FUTURES_TOTAL =
            "recent30BtcFuturesTotal";

    @SerializedName(SERIALIZED_NAME_RECENT30_BTC_FUTURES_TOTAL)
    @jakarta.annotation.Nullable
    private String recent30BtcFuturesTotal;

    public static final String SERIALIZED_NAME_RECENT30_BTC_MARGIN_TOTAL = "recent30BtcMarginTotal";

    @SerializedName(SERIALIZED_NAME_RECENT30_BTC_MARGIN_TOTAL)
    @jakarta.annotation.Nullable
    private String recent30BtcMarginTotal;

    public static final String SERIALIZED_NAME_RECENT30_BUSD_TOTAL = "recent30BusdTotal";

    @SerializedName(SERIALIZED_NAME_RECENT30_BUSD_TOTAL)
    @jakarta.annotation.Nullable
    private String recent30BusdTotal;

    public static final String SERIALIZED_NAME_RECENT30_BUSD_FUTURES_TOTAL =
            "recent30BusdFuturesTotal";

    @SerializedName(SERIALIZED_NAME_RECENT30_BUSD_FUTURES_TOTAL)
    @jakarta.annotation.Nullable
    private String recent30BusdFuturesTotal;

    public static final String SERIALIZED_NAME_RECENT30_BUSD_MARGIN_TOTAL =
            "recent30BusdMarginTotal";

    @SerializedName(SERIALIZED_NAME_RECENT30_BUSD_MARGIN_TOTAL)
    @jakarta.annotation.Nullable
    private String recent30BusdMarginTotal;

    public static final String SERIALIZED_NAME_TRADE_INFO_VOS = "tradeInfoVos";

    @SerializedName(SERIALIZED_NAME_TRADE_INFO_VOS)
    @jakarta.annotation.Nullable
    private List<String> tradeInfoVos;

    public QuerySubAccountTransactionStatisticsResponse1() {}

    public QuerySubAccountTransactionStatisticsResponse1 recent30BtcTotal(
            @jakarta.annotation.Nullable String recent30BtcTotal) {
        this.recent30BtcTotal = recent30BtcTotal;
        return this;
    }

    /**
     * Get recent30BtcTotal
     *
     * @return recent30BtcTotal
     */
    @jakarta.annotation.Nullable
    public String getRecent30BtcTotal() {
        return recent30BtcTotal;
    }

    public void setRecent30BtcTotal(@jakarta.annotation.Nullable String recent30BtcTotal) {
        this.recent30BtcTotal = recent30BtcTotal;
    }

    public QuerySubAccountTransactionStatisticsResponse1 recent30BtcFuturesTotal(
            @jakarta.annotation.Nullable String recent30BtcFuturesTotal) {
        this.recent30BtcFuturesTotal = recent30BtcFuturesTotal;
        return this;
    }

    /**
     * Get recent30BtcFuturesTotal
     *
     * @return recent30BtcFuturesTotal
     */
    @jakarta.annotation.Nullable
    public String getRecent30BtcFuturesTotal() {
        return recent30BtcFuturesTotal;
    }

    public void setRecent30BtcFuturesTotal(
            @jakarta.annotation.Nullable String recent30BtcFuturesTotal) {
        this.recent30BtcFuturesTotal = recent30BtcFuturesTotal;
    }

    public QuerySubAccountTransactionStatisticsResponse1 recent30BtcMarginTotal(
            @jakarta.annotation.Nullable String recent30BtcMarginTotal) {
        this.recent30BtcMarginTotal = recent30BtcMarginTotal;
        return this;
    }

    /**
     * Get recent30BtcMarginTotal
     *
     * @return recent30BtcMarginTotal
     */
    @jakarta.annotation.Nullable
    public String getRecent30BtcMarginTotal() {
        return recent30BtcMarginTotal;
    }

    public void setRecent30BtcMarginTotal(
            @jakarta.annotation.Nullable String recent30BtcMarginTotal) {
        this.recent30BtcMarginTotal = recent30BtcMarginTotal;
    }

    public QuerySubAccountTransactionStatisticsResponse1 recent30BusdTotal(
            @jakarta.annotation.Nullable String recent30BusdTotal) {
        this.recent30BusdTotal = recent30BusdTotal;
        return this;
    }

    /**
     * Get recent30BusdTotal
     *
     * @return recent30BusdTotal
     */
    @jakarta.annotation.Nullable
    public String getRecent30BusdTotal() {
        return recent30BusdTotal;
    }

    public void setRecent30BusdTotal(@jakarta.annotation.Nullable String recent30BusdTotal) {
        this.recent30BusdTotal = recent30BusdTotal;
    }

    public QuerySubAccountTransactionStatisticsResponse1 recent30BusdFuturesTotal(
            @jakarta.annotation.Nullable String recent30BusdFuturesTotal) {
        this.recent30BusdFuturesTotal = recent30BusdFuturesTotal;
        return this;
    }

    /**
     * Get recent30BusdFuturesTotal
     *
     * @return recent30BusdFuturesTotal
     */
    @jakarta.annotation.Nullable
    public String getRecent30BusdFuturesTotal() {
        return recent30BusdFuturesTotal;
    }

    public void setRecent30BusdFuturesTotal(
            @jakarta.annotation.Nullable String recent30BusdFuturesTotal) {
        this.recent30BusdFuturesTotal = recent30BusdFuturesTotal;
    }

    public QuerySubAccountTransactionStatisticsResponse1 recent30BusdMarginTotal(
            @jakarta.annotation.Nullable String recent30BusdMarginTotal) {
        this.recent30BusdMarginTotal = recent30BusdMarginTotal;
        return this;
    }

    /**
     * Get recent30BusdMarginTotal
     *
     * @return recent30BusdMarginTotal
     */
    @jakarta.annotation.Nullable
    public String getRecent30BusdMarginTotal() {
        return recent30BusdMarginTotal;
    }

    public void setRecent30BusdMarginTotal(
            @jakarta.annotation.Nullable String recent30BusdMarginTotal) {
        this.recent30BusdMarginTotal = recent30BusdMarginTotal;
    }

    public QuerySubAccountTransactionStatisticsResponse1 tradeInfoVos(
            @jakarta.annotation.Nullable List<String> tradeInfoVos) {
        this.tradeInfoVos = tradeInfoVos;
        return this;
    }

    public QuerySubAccountTransactionStatisticsResponse1 addTradeInfoVosItem(
            String tradeInfoVosItem) {
        if (this.tradeInfoVos == null) {
            this.tradeInfoVos = new ArrayList<>();
        }
        this.tradeInfoVos.add(tradeInfoVosItem);
        return this;
    }

    /**
     * Get tradeInfoVos
     *
     * @return tradeInfoVos
     */
    @jakarta.annotation.Nullable
    public List<String> getTradeInfoVos() {
        return tradeInfoVos;
    }

    public void setTradeInfoVos(@jakarta.annotation.Nullable List<String> tradeInfoVos) {
        this.tradeInfoVos = tradeInfoVos;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QuerySubAccountTransactionStatisticsResponse1
                querySubAccountTransactionStatisticsResponse1 =
                        (QuerySubAccountTransactionStatisticsResponse1) o;
        return Objects.equals(
                        this.recent30BtcTotal,
                        querySubAccountTransactionStatisticsResponse1.recent30BtcTotal)
                && Objects.equals(
                        this.recent30BtcFuturesTotal,
                        querySubAccountTransactionStatisticsResponse1.recent30BtcFuturesTotal)
                && Objects.equals(
                        this.recent30BtcMarginTotal,
                        querySubAccountTransactionStatisticsResponse1.recent30BtcMarginTotal)
                && Objects.equals(
                        this.recent30BusdTotal,
                        querySubAccountTransactionStatisticsResponse1.recent30BusdTotal)
                && Objects.equals(
                        this.recent30BusdFuturesTotal,
                        querySubAccountTransactionStatisticsResponse1.recent30BusdFuturesTotal)
                && Objects.equals(
                        this.recent30BusdMarginTotal,
                        querySubAccountTransactionStatisticsResponse1.recent30BusdMarginTotal)
                && Objects.equals(
                        this.tradeInfoVos,
                        querySubAccountTransactionStatisticsResponse1.tradeInfoVos);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                recent30BtcTotal,
                recent30BtcFuturesTotal,
                recent30BtcMarginTotal,
                recent30BusdTotal,
                recent30BusdFuturesTotal,
                recent30BusdMarginTotal,
                tradeInfoVos);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class QuerySubAccountTransactionStatisticsResponse1 {\n");
        sb.append("		recent30BtcTotal: ").append(toIndentedString(recent30BtcTotal)).append("\n");
        sb.append("		recent30BtcFuturesTotal: ")
                .append(toIndentedString(recent30BtcFuturesTotal))
                .append("\n");
        sb.append("		recent30BtcMarginTotal: ")
                .append(toIndentedString(recent30BtcMarginTotal))
                .append("\n");
        sb.append("		recent30BusdTotal: ").append(toIndentedString(recent30BusdTotal)).append("\n");
        sb.append("		recent30BusdFuturesTotal: ")
                .append(toIndentedString(recent30BusdFuturesTotal))
                .append("\n");
        sb.append("		recent30BusdMarginTotal: ")
                .append(toIndentedString(recent30BusdMarginTotal))
                .append("\n");
        sb.append("		tradeInfoVos: ").append(toIndentedString(tradeInfoVos)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object recent30BtcTotalValue = getRecent30BtcTotal();
        String recent30BtcTotalValueAsString = "";
        recent30BtcTotalValueAsString = recent30BtcTotalValue.toString();
        sb.append("recent30BtcTotal=").append(urlEncode(recent30BtcTotalValueAsString)).append("");
        Object recent30BtcFuturesTotalValue = getRecent30BtcFuturesTotal();
        String recent30BtcFuturesTotalValueAsString = "";
        recent30BtcFuturesTotalValueAsString = recent30BtcFuturesTotalValue.toString();
        sb.append("recent30BtcFuturesTotal=")
                .append(urlEncode(recent30BtcFuturesTotalValueAsString))
                .append("");
        Object recent30BtcMarginTotalValue = getRecent30BtcMarginTotal();
        String recent30BtcMarginTotalValueAsString = "";
        recent30BtcMarginTotalValueAsString = recent30BtcMarginTotalValue.toString();
        sb.append("recent30BtcMarginTotal=")
                .append(urlEncode(recent30BtcMarginTotalValueAsString))
                .append("");
        Object recent30BusdTotalValue = getRecent30BusdTotal();
        String recent30BusdTotalValueAsString = "";
        recent30BusdTotalValueAsString = recent30BusdTotalValue.toString();
        sb.append("recent30BusdTotal=")
                .append(urlEncode(recent30BusdTotalValueAsString))
                .append("");
        Object recent30BusdFuturesTotalValue = getRecent30BusdFuturesTotal();
        String recent30BusdFuturesTotalValueAsString = "";
        recent30BusdFuturesTotalValueAsString = recent30BusdFuturesTotalValue.toString();
        sb.append("recent30BusdFuturesTotal=")
                .append(urlEncode(recent30BusdFuturesTotalValueAsString))
                .append("");
        Object recent30BusdMarginTotalValue = getRecent30BusdMarginTotal();
        String recent30BusdMarginTotalValueAsString = "";
        recent30BusdMarginTotalValueAsString = recent30BusdMarginTotalValue.toString();
        sb.append("recent30BusdMarginTotal=")
                .append(urlEncode(recent30BusdMarginTotalValueAsString))
                .append("");
        Object tradeInfoVosValue = getTradeInfoVos();
        String tradeInfoVosValueAsString = "";
        tradeInfoVosValueAsString =
                (String)
                        ((Collection) tradeInfoVosValue)
                                .stream().map(Object::toString).collect(Collectors.joining(","));
        sb.append("tradeInfoVos=").append(urlEncode(tradeInfoVosValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("recent30BtcTotal");
        openapiFields.add("recent30BtcFuturesTotal");
        openapiFields.add("recent30BtcMarginTotal");
        openapiFields.add("recent30BusdTotal");
        openapiFields.add("recent30BusdFuturesTotal");
        openapiFields.add("recent30BusdMarginTotal");
        openapiFields.add("tradeInfoVos");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     QuerySubAccountTransactionStatisticsResponse1
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!QuerySubAccountTransactionStatisticsResponse1.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " QuerySubAccountTransactionStatisticsResponse1 is not found"
                                    + " in the empty JSON string",
                                QuerySubAccountTransactionStatisticsResponse1.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!QuerySubAccountTransactionStatisticsResponse1.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `QuerySubAccountTransactionStatisticsResponse1` properties."
                                    + " JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("recent30BtcTotal") != null
                        && !jsonObj.get("recent30BtcTotal").isJsonNull())
                && !jsonObj.get("recent30BtcTotal").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `recent30BtcTotal` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("recent30BtcTotal").toString()));
        }
        if ((jsonObj.get("recent30BtcFuturesTotal") != null
                        && !jsonObj.get("recent30BtcFuturesTotal").isJsonNull())
                && !jsonObj.get("recent30BtcFuturesTotal").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `recent30BtcFuturesTotal` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("recent30BtcFuturesTotal").toString()));
        }
        if ((jsonObj.get("recent30BtcMarginTotal") != null
                        && !jsonObj.get("recent30BtcMarginTotal").isJsonNull())
                && !jsonObj.get("recent30BtcMarginTotal").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `recent30BtcMarginTotal` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("recent30BtcMarginTotal").toString()));
        }
        if ((jsonObj.get("recent30BusdTotal") != null
                        && !jsonObj.get("recent30BusdTotal").isJsonNull())
                && !jsonObj.get("recent30BusdTotal").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `recent30BusdTotal` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("recent30BusdTotal").toString()));
        }
        if ((jsonObj.get("recent30BusdFuturesTotal") != null
                        && !jsonObj.get("recent30BusdFuturesTotal").isJsonNull())
                && !jsonObj.get("recent30BusdFuturesTotal").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `recent30BusdFuturesTotal` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("recent30BusdFuturesTotal").toString()));
        }
        if ((jsonObj.get("recent30BusdMarginTotal") != null
                        && !jsonObj.get("recent30BusdMarginTotal").isJsonNull())
                && !jsonObj.get("recent30BusdMarginTotal").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `recent30BusdMarginTotal` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("recent30BusdMarginTotal").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("tradeInfoVos") != null
                && !jsonObj.get("tradeInfoVos").isJsonNull()
                && !jsonObj.get("tradeInfoVos").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `tradeInfoVos` to be an array in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("tradeInfoVos").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!QuerySubAccountTransactionStatisticsResponse1.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'QuerySubAccountTransactionStatisticsResponse1' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<QuerySubAccountTransactionStatisticsResponse1> thisAdapter =
                    gson.getDelegateAdapter(
                            this,
                            TypeToken.get(QuerySubAccountTransactionStatisticsResponse1.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<QuerySubAccountTransactionStatisticsResponse1>() {
                        @Override
                        public void write(
                                JsonWriter out, QuerySubAccountTransactionStatisticsResponse1 value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public QuerySubAccountTransactionStatisticsResponse1 read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of QuerySubAccountTransactionStatisticsResponse1 given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of QuerySubAccountTransactionStatisticsResponse1
     * @throws IOException if the JSON string is invalid with respect to
     *     QuerySubAccountTransactionStatisticsResponse1
     */
    public static QuerySubAccountTransactionStatisticsResponse1 fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, QuerySubAccountTransactionStatisticsResponse1.class);
    }

    /**
     * Convert an instance of QuerySubAccountTransactionStatisticsResponse1 to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
