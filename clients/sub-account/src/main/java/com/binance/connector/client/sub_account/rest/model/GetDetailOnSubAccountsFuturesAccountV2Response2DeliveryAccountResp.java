/*
 * Binance Sub Account REST API
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.sub_account.rest.model;

import com.binance.connector.client.sub_account.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;
import org.hibernate.validator.constraints.*;

/** GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp {
    public static final String SERIALIZED_NAME_EMAIL = "email";

    @SerializedName(SERIALIZED_NAME_EMAIL)
    @jakarta.annotation.Nullable
    private String email;

    public static final String SERIALIZED_NAME_ASSETS = "assets";

    @SerializedName(SERIALIZED_NAME_ASSETS)
    @jakarta.annotation.Nullable
    private List<
                    @Valid
                    GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountRespAssetsInner>
            assets;

    public static final String SERIALIZED_NAME_CAN_DEPOSIT = "canDeposit";

    @SerializedName(SERIALIZED_NAME_CAN_DEPOSIT)
    @jakarta.annotation.Nullable
    private Boolean canDeposit;

    public static final String SERIALIZED_NAME_CAN_TRADE = "canTrade";

    @SerializedName(SERIALIZED_NAME_CAN_TRADE)
    @jakarta.annotation.Nullable
    private Boolean canTrade;

    public static final String SERIALIZED_NAME_CAN_WITHDRAW = "canWithdraw";

    @SerializedName(SERIALIZED_NAME_CAN_WITHDRAW)
    @jakarta.annotation.Nullable
    private Boolean canWithdraw;

    public static final String SERIALIZED_NAME_FEE_TIER = "feeTier";

    @SerializedName(SERIALIZED_NAME_FEE_TIER)
    @jakarta.annotation.Nullable
    private Long feeTier;

    public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";

    @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
    @jakarta.annotation.Nullable
    private Long updateTime;

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp() {}

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp email(
            @jakarta.annotation.Nullable String email) {
        this.email = email;
        return this;
    }

    /**
     * Get email
     *
     * @return email
     */
    @jakarta.annotation.Nullable
    public String getEmail() {
        return email;
    }

    public void setEmail(@jakarta.annotation.Nullable String email) {
        this.email = email;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp assets(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountRespAssetsInner>
                            assets) {
        this.assets = assets;
        return this;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp addAssetsItem(
            GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountRespAssetsInner
                    assetsItem) {
        if (this.assets == null) {
            this.assets = new ArrayList<>();
        }
        this.assets.add(assetsItem);
        return this;
    }

    /**
     * Get assets
     *
     * @return assets
     */
    @jakarta.annotation.Nullable
    @Valid
    public List<
                    @Valid
                    GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountRespAssetsInner>
            getAssets() {
        return assets;
    }

    public void setAssets(
            @jakarta.annotation.Nullable
                    List<
                                    @Valid
                                    GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountRespAssetsInner>
                            assets) {
        this.assets = assets;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp canDeposit(
            @jakarta.annotation.Nullable Boolean canDeposit) {
        this.canDeposit = canDeposit;
        return this;
    }

    /**
     * Get canDeposit
     *
     * @return canDeposit
     */
    @jakarta.annotation.Nullable
    public Boolean getCanDeposit() {
        return canDeposit;
    }

    public void setCanDeposit(@jakarta.annotation.Nullable Boolean canDeposit) {
        this.canDeposit = canDeposit;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp canTrade(
            @jakarta.annotation.Nullable Boolean canTrade) {
        this.canTrade = canTrade;
        return this;
    }

    /**
     * Get canTrade
     *
     * @return canTrade
     */
    @jakarta.annotation.Nullable
    public Boolean getCanTrade() {
        return canTrade;
    }

    public void setCanTrade(@jakarta.annotation.Nullable Boolean canTrade) {
        this.canTrade = canTrade;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp canWithdraw(
            @jakarta.annotation.Nullable Boolean canWithdraw) {
        this.canWithdraw = canWithdraw;
        return this;
    }

    /**
     * Get canWithdraw
     *
     * @return canWithdraw
     */
    @jakarta.annotation.Nullable
    public Boolean getCanWithdraw() {
        return canWithdraw;
    }

    public void setCanWithdraw(@jakarta.annotation.Nullable Boolean canWithdraw) {
        this.canWithdraw = canWithdraw;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp feeTier(
            @jakarta.annotation.Nullable Long feeTier) {
        this.feeTier = feeTier;
        return this;
    }

    /**
     * Get feeTier
     *
     * @return feeTier
     */
    @jakarta.annotation.Nullable
    public Long getFeeTier() {
        return feeTier;
    }

    public void setFeeTier(@jakarta.annotation.Nullable Long feeTier) {
        this.feeTier = feeTier;
    }

    public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp updateTime(
            @jakarta.annotation.Nullable Long updateTime) {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * Get updateTime
     *
     * @return updateTime
     */
    @jakarta.annotation.Nullable
    public Long getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(@jakarta.annotation.Nullable Long updateTime) {
        this.updateTime = updateTime;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp =
                        (GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp) o;
        return Objects.equals(
                        this.email,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.email)
                && Objects.equals(
                        this.assets,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.assets)
                && Objects.equals(
                        this.canDeposit,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                .canDeposit)
                && Objects.equals(
                        this.canTrade,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.canTrade)
                && Objects.equals(
                        this.canWithdraw,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                .canWithdraw)
                && Objects.equals(
                        this.feeTier,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.feeTier)
                && Objects.equals(
                        this.updateTime,
                        getDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                .updateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(email, assets, canDeposit, canTrade, canWithdraw, feeTier, updateTime);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp {\n");
        sb.append("		email: ").append(toIndentedString(email)).append("\n");
        sb.append("		assets: ").append(toIndentedString(assets)).append("\n");
        sb.append("		canDeposit: ").append(toIndentedString(canDeposit)).append("\n");
        sb.append("		canTrade: ").append(toIndentedString(canTrade)).append("\n");
        sb.append("		canWithdraw: ").append(toIndentedString(canWithdraw)).append("\n");
        sb.append("		feeTier: ").append(toIndentedString(feeTier)).append("\n");
        sb.append("		updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object emailValue = getEmail();
        String emailValueAsString = "";
        emailValueAsString = emailValue.toString();
        sb.append("email=").append(urlEncode(emailValueAsString)).append("");
        Object assetsValue = getAssets();
        String assetsValueAsString = "";
        assetsValueAsString =
                (String)
                        ((Collection) assetsValue)
                                .stream().map(Object::toString).collect(Collectors.joining(","));
        sb.append("assets=").append(urlEncode(assetsValueAsString)).append("");
        Object canDepositValue = getCanDeposit();
        String canDepositValueAsString = "";
        canDepositValueAsString = canDepositValue.toString();
        sb.append("canDeposit=").append(urlEncode(canDepositValueAsString)).append("");
        Object canTradeValue = getCanTrade();
        String canTradeValueAsString = "";
        canTradeValueAsString = canTradeValue.toString();
        sb.append("canTrade=").append(urlEncode(canTradeValueAsString)).append("");
        Object canWithdrawValue = getCanWithdraw();
        String canWithdrawValueAsString = "";
        canWithdrawValueAsString = canWithdrawValue.toString();
        sb.append("canWithdraw=").append(urlEncode(canWithdrawValueAsString)).append("");
        Object feeTierValue = getFeeTier();
        String feeTierValueAsString = "";
        feeTierValueAsString = feeTierValue.toString();
        sb.append("feeTier=").append(urlEncode(feeTierValueAsString)).append("");
        Object updateTimeValue = getUpdateTime();
        String updateTimeValueAsString = "";
        updateTimeValueAsString = updateTimeValue.toString();
        sb.append("updateTime=").append(urlEncode(updateTimeValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("email");
        openapiFields.add("assets");
        openapiFields.add("canDeposit");
        openapiFields.add("canTrade");
        openapiFields.add("canWithdraw");
        openapiFields.add("feeTier");
        openapiFields.add("updateTime");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp"
                                    + " is not found in the empty JSON string",
                                GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull())
                && !jsonObj.get("email").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `email` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("email").toString()));
        }
        if (jsonObj.get("assets") != null && !jsonObj.get("assets").isJsonNull()) {
            JsonArray jsonArrayassets = jsonObj.getAsJsonArray("assets");
            if (jsonArrayassets != null) {
                // ensure the json data is an array
                if (!jsonObj.get("assets").isJsonArray()) {
                    throw new IllegalArgumentException(
                            String.format(
                                    "Expected the field `assets` to be an array in the JSON string"
                                            + " but got `%s`",
                                    jsonObj.get("assets").toString()));
                }

                // validate the optional field `assets` (array)
                for (int i = 0; i < jsonArrayassets.size(); i++) {
                    GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountRespAssetsInner
                            .validateJsonElement(jsonArrayassets.get(i));
                }
                ;
            }
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp'
                // and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
                                read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
     * given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
     * @throws IOException if the JSON string is invalid with respect to
     *     GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp
     */
    public static GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp.class);
    }

    /**
     * Convert an instance of GetDetailOnSubAccountsFuturesAccountV2Response2DeliveryAccountResp to
     * an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
