/*
 * Binance VIP Loan REST API
 * OpenAPI Specification for the Binance VIP Loan REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.vip_loan.rest.model;

import com.binance.connector.client.vip_loan.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetLoanableAssetsDataResponseRowsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetLoanableAssetsDataResponseRowsInner {
    public static final String SERIALIZED_NAME_LOAN_COIN = "loanCoin";

    @SerializedName(SERIALIZED_NAME_LOAN_COIN)
    @jakarta.annotation.Nullable
    private String loanCoin;

    public static final String SERIALIZED_NAME_FLEXIBLE_DAILY_INTEREST_RATE =
            "_flexibleDailyInterestRate";

    @SerializedName(SERIALIZED_NAME_FLEXIBLE_DAILY_INTEREST_RATE)
    @jakarta.annotation.Nullable
    private String flexibleDailyInterestRate;

    public static final String SERIALIZED_NAME_FLEXIBLE_YEARLY_INTEREST_RATE =
            "_flexibleYearlyInterestRate";

    @SerializedName(SERIALIZED_NAME_FLEXIBLE_YEARLY_INTEREST_RATE)
    @jakarta.annotation.Nullable
    private String flexibleYearlyInterestRate;

    public static final String SERIALIZED_NAME_30D_DAILY_INTEREST_RATE = "_30dDailyInterestRate";

    @SerializedName(SERIALIZED_NAME_30D_DAILY_INTEREST_RATE)
    @jakarta.annotation.Nullable
    private String _30dDailyInterestRate;

    public static final String SERIALIZED_NAME_30D_YEARLY_INTEREST_RATE = "_30dYearlyInterestRate";

    @SerializedName(SERIALIZED_NAME_30D_YEARLY_INTEREST_RATE)
    @jakarta.annotation.Nullable
    private String _30dYearlyInterestRate;

    public static final String SERIALIZED_NAME_60D_DAILY_INTEREST_RATE = "_60dDailyInterestRate";

    @SerializedName(SERIALIZED_NAME_60D_DAILY_INTEREST_RATE)
    @jakarta.annotation.Nullable
    private String _60dDailyInterestRate;

    public static final String SERIALIZED_NAME_60D_YEARLY_INTEREST_RATE = "_60dYearlyInterestRate";

    @SerializedName(SERIALIZED_NAME_60D_YEARLY_INTEREST_RATE)
    @jakarta.annotation.Nullable
    private String _60dYearlyInterestRate;

    public static final String SERIALIZED_NAME_MIN_LIMIT = "minLimit";

    @SerializedName(SERIALIZED_NAME_MIN_LIMIT)
    @jakarta.annotation.Nullable
    private String minLimit;

    public static final String SERIALIZED_NAME_MAX_LIMIT = "maxLimit";

    @SerializedName(SERIALIZED_NAME_MAX_LIMIT)
    @jakarta.annotation.Nullable
    private String maxLimit;

    public static final String SERIALIZED_NAME_VIP_LEVEL = "vipLevel";

    @SerializedName(SERIALIZED_NAME_VIP_LEVEL)
    @jakarta.annotation.Nullable
    private Long vipLevel;

    public GetLoanableAssetsDataResponseRowsInner() {}

    public GetLoanableAssetsDataResponseRowsInner loanCoin(
            @jakarta.annotation.Nullable String loanCoin) {
        this.loanCoin = loanCoin;
        return this;
    }

    /**
     * Get loanCoin
     *
     * @return loanCoin
     */
    @jakarta.annotation.Nullable
    public String getLoanCoin() {
        return loanCoin;
    }

    public void setLoanCoin(@jakarta.annotation.Nullable String loanCoin) {
        this.loanCoin = loanCoin;
    }

    public GetLoanableAssetsDataResponseRowsInner flexibleDailyInterestRate(
            @jakarta.annotation.Nullable String flexibleDailyInterestRate) {
        this.flexibleDailyInterestRate = flexibleDailyInterestRate;
        return this;
    }

    /**
     * Get flexibleDailyInterestRate
     *
     * @return flexibleDailyInterestRate
     */
    @jakarta.annotation.Nullable
    public String getFlexibleDailyInterestRate() {
        return flexibleDailyInterestRate;
    }

    public void setFlexibleDailyInterestRate(
            @jakarta.annotation.Nullable String flexibleDailyInterestRate) {
        this.flexibleDailyInterestRate = flexibleDailyInterestRate;
    }

    public GetLoanableAssetsDataResponseRowsInner flexibleYearlyInterestRate(
            @jakarta.annotation.Nullable String flexibleYearlyInterestRate) {
        this.flexibleYearlyInterestRate = flexibleYearlyInterestRate;
        return this;
    }

    /**
     * Get flexibleYearlyInterestRate
     *
     * @return flexibleYearlyInterestRate
     */
    @jakarta.annotation.Nullable
    public String getFlexibleYearlyInterestRate() {
        return flexibleYearlyInterestRate;
    }

    public void setFlexibleYearlyInterestRate(
            @jakarta.annotation.Nullable String flexibleYearlyInterestRate) {
        this.flexibleYearlyInterestRate = flexibleYearlyInterestRate;
    }

    public GetLoanableAssetsDataResponseRowsInner _30dDailyInterestRate(
            @jakarta.annotation.Nullable String _30dDailyInterestRate) {
        this._30dDailyInterestRate = _30dDailyInterestRate;
        return this;
    }

    /**
     * Get _30dDailyInterestRate
     *
     * @return _30dDailyInterestRate
     */
    @jakarta.annotation.Nullable
    public String get30dDailyInterestRate() {
        return _30dDailyInterestRate;
    }

    public void set30dDailyInterestRate(@jakarta.annotation.Nullable String _30dDailyInterestRate) {
        this._30dDailyInterestRate = _30dDailyInterestRate;
    }

    public GetLoanableAssetsDataResponseRowsInner _30dYearlyInterestRate(
            @jakarta.annotation.Nullable String _30dYearlyInterestRate) {
        this._30dYearlyInterestRate = _30dYearlyInterestRate;
        return this;
    }

    /**
     * Get _30dYearlyInterestRate
     *
     * @return _30dYearlyInterestRate
     */
    @jakarta.annotation.Nullable
    public String get30dYearlyInterestRate() {
        return _30dYearlyInterestRate;
    }

    public void set30dYearlyInterestRate(
            @jakarta.annotation.Nullable String _30dYearlyInterestRate) {
        this._30dYearlyInterestRate = _30dYearlyInterestRate;
    }

    public GetLoanableAssetsDataResponseRowsInner _60dDailyInterestRate(
            @jakarta.annotation.Nullable String _60dDailyInterestRate) {
        this._60dDailyInterestRate = _60dDailyInterestRate;
        return this;
    }

    /**
     * Get _60dDailyInterestRate
     *
     * @return _60dDailyInterestRate
     */
    @jakarta.annotation.Nullable
    public String get60dDailyInterestRate() {
        return _60dDailyInterestRate;
    }

    public void set60dDailyInterestRate(@jakarta.annotation.Nullable String _60dDailyInterestRate) {
        this._60dDailyInterestRate = _60dDailyInterestRate;
    }

    public GetLoanableAssetsDataResponseRowsInner _60dYearlyInterestRate(
            @jakarta.annotation.Nullable String _60dYearlyInterestRate) {
        this._60dYearlyInterestRate = _60dYearlyInterestRate;
        return this;
    }

    /**
     * Get _60dYearlyInterestRate
     *
     * @return _60dYearlyInterestRate
     */
    @jakarta.annotation.Nullable
    public String get60dYearlyInterestRate() {
        return _60dYearlyInterestRate;
    }

    public void set60dYearlyInterestRate(
            @jakarta.annotation.Nullable String _60dYearlyInterestRate) {
        this._60dYearlyInterestRate = _60dYearlyInterestRate;
    }

    public GetLoanableAssetsDataResponseRowsInner minLimit(
            @jakarta.annotation.Nullable String minLimit) {
        this.minLimit = minLimit;
        return this;
    }

    /**
     * Get minLimit
     *
     * @return minLimit
     */
    @jakarta.annotation.Nullable
    public String getMinLimit() {
        return minLimit;
    }

    public void setMinLimit(@jakarta.annotation.Nullable String minLimit) {
        this.minLimit = minLimit;
    }

    public GetLoanableAssetsDataResponseRowsInner maxLimit(
            @jakarta.annotation.Nullable String maxLimit) {
        this.maxLimit = maxLimit;
        return this;
    }

    /**
     * Get maxLimit
     *
     * @return maxLimit
     */
    @jakarta.annotation.Nullable
    public String getMaxLimit() {
        return maxLimit;
    }

    public void setMaxLimit(@jakarta.annotation.Nullable String maxLimit) {
        this.maxLimit = maxLimit;
    }

    public GetLoanableAssetsDataResponseRowsInner vipLevel(
            @jakarta.annotation.Nullable Long vipLevel) {
        this.vipLevel = vipLevel;
        return this;
    }

    /**
     * Get vipLevel
     *
     * @return vipLevel
     */
    @jakarta.annotation.Nullable
    public Long getVipLevel() {
        return vipLevel;
    }

    public void setVipLevel(@jakarta.annotation.Nullable Long vipLevel) {
        this.vipLevel = vipLevel;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetLoanableAssetsDataResponseRowsInner getLoanableAssetsDataResponseRowsInner =
                (GetLoanableAssetsDataResponseRowsInner) o;
        return Objects.equals(this.loanCoin, getLoanableAssetsDataResponseRowsInner.loanCoin)
                && Objects.equals(
                        this.flexibleDailyInterestRate,
                        getLoanableAssetsDataResponseRowsInner.flexibleDailyInterestRate)
                && Objects.equals(
                        this.flexibleYearlyInterestRate,
                        getLoanableAssetsDataResponseRowsInner.flexibleYearlyInterestRate)
                && Objects.equals(
                        this._30dDailyInterestRate,
                        getLoanableAssetsDataResponseRowsInner._30dDailyInterestRate)
                && Objects.equals(
                        this._30dYearlyInterestRate,
                        getLoanableAssetsDataResponseRowsInner._30dYearlyInterestRate)
                && Objects.equals(
                        this._60dDailyInterestRate,
                        getLoanableAssetsDataResponseRowsInner._60dDailyInterestRate)
                && Objects.equals(
                        this._60dYearlyInterestRate,
                        getLoanableAssetsDataResponseRowsInner._60dYearlyInterestRate)
                && Objects.equals(this.minLimit, getLoanableAssetsDataResponseRowsInner.minLimit)
                && Objects.equals(this.maxLimit, getLoanableAssetsDataResponseRowsInner.maxLimit)
                && Objects.equals(this.vipLevel, getLoanableAssetsDataResponseRowsInner.vipLevel);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                loanCoin,
                flexibleDailyInterestRate,
                flexibleYearlyInterestRate,
                _30dDailyInterestRate,
                _30dYearlyInterestRate,
                _60dDailyInterestRate,
                _60dYearlyInterestRate,
                minLimit,
                maxLimit,
                vipLevel);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetLoanableAssetsDataResponseRowsInner {\n");
        sb.append("		loanCoin: ").append(toIndentedString(loanCoin)).append("\n");
        sb.append("		flexibleDailyInterestRate: ")
                .append(toIndentedString(flexibleDailyInterestRate))
                .append("\n");
        sb.append("		flexibleYearlyInterestRate: ")
                .append(toIndentedString(flexibleYearlyInterestRate))
                .append("\n");
        sb.append("		_30dDailyInterestRate: ")
                .append(toIndentedString(_30dDailyInterestRate))
                .append("\n");
        sb.append("		_30dYearlyInterestRate: ")
                .append(toIndentedString(_30dYearlyInterestRate))
                .append("\n");
        sb.append("		_60dDailyInterestRate: ")
                .append(toIndentedString(_60dDailyInterestRate))
                .append("\n");
        sb.append("		_60dYearlyInterestRate: ")
                .append(toIndentedString(_60dYearlyInterestRate))
                .append("\n");
        sb.append("		minLimit: ").append(toIndentedString(minLimit)).append("\n");
        sb.append("		maxLimit: ").append(toIndentedString(maxLimit)).append("\n");
        sb.append("		vipLevel: ").append(toIndentedString(vipLevel)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object loanCoinValue = getLoanCoin();
        String loanCoinValueAsString = "";
        loanCoinValueAsString = loanCoinValue.toString();
        sb.append("loanCoin=").append(urlEncode(loanCoinValueAsString)).append("");
        Object flexibleDailyInterestRateValue = getFlexibleDailyInterestRate();
        String flexibleDailyInterestRateValueAsString = "";
        flexibleDailyInterestRateValueAsString = flexibleDailyInterestRateValue.toString();
        sb.append("flexibleDailyInterestRate=")
                .append(urlEncode(flexibleDailyInterestRateValueAsString))
                .append("");
        Object flexibleYearlyInterestRateValue = getFlexibleYearlyInterestRate();
        String flexibleYearlyInterestRateValueAsString = "";
        flexibleYearlyInterestRateValueAsString = flexibleYearlyInterestRateValue.toString();
        sb.append("flexibleYearlyInterestRate=")
                .append(urlEncode(flexibleYearlyInterestRateValueAsString))
                .append("");
        Object _30dDailyInterestRateValue = get30dDailyInterestRate();
        String _30dDailyInterestRateValueAsString = "";
        _30dDailyInterestRateValueAsString = _30dDailyInterestRateValue.toString();
        sb.append("_30dDailyInterestRate=")
                .append(urlEncode(_30dDailyInterestRateValueAsString))
                .append("");
        Object _30dYearlyInterestRateValue = get30dYearlyInterestRate();
        String _30dYearlyInterestRateValueAsString = "";
        _30dYearlyInterestRateValueAsString = _30dYearlyInterestRateValue.toString();
        sb.append("_30dYearlyInterestRate=")
                .append(urlEncode(_30dYearlyInterestRateValueAsString))
                .append("");
        Object _60dDailyInterestRateValue = get60dDailyInterestRate();
        String _60dDailyInterestRateValueAsString = "";
        _60dDailyInterestRateValueAsString = _60dDailyInterestRateValue.toString();
        sb.append("_60dDailyInterestRate=")
                .append(urlEncode(_60dDailyInterestRateValueAsString))
                .append("");
        Object _60dYearlyInterestRateValue = get60dYearlyInterestRate();
        String _60dYearlyInterestRateValueAsString = "";
        _60dYearlyInterestRateValueAsString = _60dYearlyInterestRateValue.toString();
        sb.append("_60dYearlyInterestRate=")
                .append(urlEncode(_60dYearlyInterestRateValueAsString))
                .append("");
        Object minLimitValue = getMinLimit();
        String minLimitValueAsString = "";
        minLimitValueAsString = minLimitValue.toString();
        sb.append("minLimit=").append(urlEncode(minLimitValueAsString)).append("");
        Object maxLimitValue = getMaxLimit();
        String maxLimitValueAsString = "";
        maxLimitValueAsString = maxLimitValue.toString();
        sb.append("maxLimit=").append(urlEncode(maxLimitValueAsString)).append("");
        Object vipLevelValue = getVipLevel();
        String vipLevelValueAsString = "";
        vipLevelValueAsString = vipLevelValue.toString();
        sb.append("vipLevel=").append(urlEncode(vipLevelValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("loanCoin");
        openapiFields.add("_flexibleDailyInterestRate");
        openapiFields.add("_flexibleYearlyInterestRate");
        openapiFields.add("_30dDailyInterestRate");
        openapiFields.add("_30dYearlyInterestRate");
        openapiFields.add("_60dDailyInterestRate");
        openapiFields.add("_60dYearlyInterestRate");
        openapiFields.add("minLimit");
        openapiFields.add("maxLimit");
        openapiFields.add("vipLevel");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetLoanableAssetsDataResponseRowsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetLoanableAssetsDataResponseRowsInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in GetLoanableAssetsDataResponseRowsInner"
                                        + " is not found in the empty JSON string",
                                GetLoanableAssetsDataResponseRowsInner.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetLoanableAssetsDataResponseRowsInner.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetLoanableAssetsDataResponseRowsInner` properties. JSON:"
                                    + " %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("loanCoin") != null && !jsonObj.get("loanCoin").isJsonNull())
                && !jsonObj.get("loanCoin").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `loanCoin` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("loanCoin").toString()));
        }
        if ((jsonObj.get("_flexibleDailyInterestRate") != null
                        && !jsonObj.get("_flexibleDailyInterestRate").isJsonNull())
                && !jsonObj.get("_flexibleDailyInterestRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `_flexibleDailyInterestRate` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("_flexibleDailyInterestRate").toString()));
        }
        if ((jsonObj.get("_flexibleYearlyInterestRate") != null
                        && !jsonObj.get("_flexibleYearlyInterestRate").isJsonNull())
                && !jsonObj.get("_flexibleYearlyInterestRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `_flexibleYearlyInterestRate` to be a primitive"
                                    + " type in the JSON string but got `%s`",
                            jsonObj.get("_flexibleYearlyInterestRate").toString()));
        }
        if ((jsonObj.get("_30dDailyInterestRate") != null
                        && !jsonObj.get("_30dDailyInterestRate").isJsonNull())
                && !jsonObj.get("_30dDailyInterestRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `_30dDailyInterestRate` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("_30dDailyInterestRate").toString()));
        }
        if ((jsonObj.get("_30dYearlyInterestRate") != null
                        && !jsonObj.get("_30dYearlyInterestRate").isJsonNull())
                && !jsonObj.get("_30dYearlyInterestRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `_30dYearlyInterestRate` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("_30dYearlyInterestRate").toString()));
        }
        if ((jsonObj.get("_60dDailyInterestRate") != null
                        && !jsonObj.get("_60dDailyInterestRate").isJsonNull())
                && !jsonObj.get("_60dDailyInterestRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `_60dDailyInterestRate` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("_60dDailyInterestRate").toString()));
        }
        if ((jsonObj.get("_60dYearlyInterestRate") != null
                        && !jsonObj.get("_60dYearlyInterestRate").isJsonNull())
                && !jsonObj.get("_60dYearlyInterestRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `_60dYearlyInterestRate` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("_60dYearlyInterestRate").toString()));
        }
        if ((jsonObj.get("minLimit") != null && !jsonObj.get("minLimit").isJsonNull())
                && !jsonObj.get("minLimit").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `minLimit` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("minLimit").toString()));
        }
        if ((jsonObj.get("maxLimit") != null && !jsonObj.get("maxLimit").isJsonNull())
                && !jsonObj.get("maxLimit").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `maxLimit` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("maxLimit").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetLoanableAssetsDataResponseRowsInner.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetLoanableAssetsDataResponseRowsInner'
                // and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetLoanableAssetsDataResponseRowsInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(GetLoanableAssetsDataResponseRowsInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetLoanableAssetsDataResponseRowsInner>() {
                        @Override
                        public void write(
                                JsonWriter out, GetLoanableAssetsDataResponseRowsInner value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetLoanableAssetsDataResponseRowsInner read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetLoanableAssetsDataResponseRowsInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetLoanableAssetsDataResponseRowsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetLoanableAssetsDataResponseRowsInner
     */
    public static GetLoanableAssetsDataResponseRowsInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson().fromJson(jsonString, GetLoanableAssetsDataResponseRowsInner.class);
    }

    /**
     * Convert an instance of GetLoanableAssetsDataResponseRowsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
