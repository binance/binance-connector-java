/*
 * Binance Auto Invest REST API
 * OpenAPI Specification for the Binance Auto Invest REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.auto_invest.rest.model;

import com.binance.connector.client.auto_invest.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner {
    public static final String SERIALIZED_NAME_SIMULATE_ROI = "simulateRoi";

    @SerializedName(SERIALIZED_NAME_SIMULATE_ROI)
    @jakarta.annotation.Nullable
    private String simulateRoi;

    public static final String SERIALIZED_NAME_DIMENSION_VALUE = "dimensionValue";

    @SerializedName(SERIALIZED_NAME_DIMENSION_VALUE)
    @jakarta.annotation.Nullable
    private String dimensionValue;

    public static final String SERIALIZED_NAME_DIMENSION_UNIT = "dimensionUnit";

    @SerializedName(SERIALIZED_NAME_DIMENSION_UNIT)
    @jakarta.annotation.Nullable
    private String dimensionUnit;

    public GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner() {}

    public GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
            simulateRoi(@jakarta.annotation.Nullable String simulateRoi) {
        this.simulateRoi = simulateRoi;
        return this;
    }

    /**
     * Get simulateRoi
     *
     * @return simulateRoi
     */
    @jakarta.annotation.Nullable
    public String getSimulateRoi() {
        return simulateRoi;
    }

    public void setSimulateRoi(@jakarta.annotation.Nullable String simulateRoi) {
        this.simulateRoi = simulateRoi;
    }

    public GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
            dimensionValue(@jakarta.annotation.Nullable String dimensionValue) {
        this.dimensionValue = dimensionValue;
        return this;
    }

    /**
     * Get dimensionValue
     *
     * @return dimensionValue
     */
    @jakarta.annotation.Nullable
    public String getDimensionValue() {
        return dimensionValue;
    }

    public void setDimensionValue(@jakarta.annotation.Nullable String dimensionValue) {
        this.dimensionValue = dimensionValue;
    }

    public GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
            dimensionUnit(@jakarta.annotation.Nullable String dimensionUnit) {
        this.dimensionUnit = dimensionUnit;
        return this;
    }

    /**
     * Get dimensionUnit
     *
     * @return dimensionUnit
     */
    @jakarta.annotation.Nullable
    public String getDimensionUnit() {
        return dimensionUnit;
    }

    public void setDimensionUnit(@jakarta.annotation.Nullable String dimensionUnit) {
        this.dimensionUnit = dimensionUnit;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                getTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner =
                        (GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner)
                                o;
        return Objects.equals(
                        this.simulateRoi,
                        getTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                .simulateRoi)
                && Objects.equals(
                        this.dimensionValue,
                        getTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                .dimensionValue)
                && Objects.equals(
                        this.dimensionUnit,
                        getTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                .dimensionUnit);
    }

    @Override
    public int hashCode() {
        return Objects.hash(simulateRoi, dimensionValue, dimensionUnit);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(
                "class"
                    + " GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner"
                    + " {\n");
        sb.append("		simulateRoi: ").append(toIndentedString(simulateRoi)).append("\n");
        sb.append("		dimensionValue: ").append(toIndentedString(dimensionValue)).append("\n");
        sb.append("		dimensionUnit: ").append(toIndentedString(dimensionUnit)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object simulateRoiValue = getSimulateRoi();
        String simulateRoiValueAsString = "";
        simulateRoiValueAsString = simulateRoiValue.toString();
        sb.append("simulateRoi=").append(urlEncode(simulateRoiValueAsString)).append("");
        Object dimensionValueValue = getDimensionValue();
        String dimensionValueValueAsString = "";
        dimensionValueValueAsString = dimensionValueValue.toString();
        sb.append("dimensionValue=").append(urlEncode(dimensionValueValueAsString)).append("");
        Object dimensionUnitValue = getDimensionUnit();
        String dimensionUnitValueAsString = "";
        dimensionUnitValueAsString = dimensionUnitValue.toString();
        sb.append("dimensionUnit=").append(urlEncode(dimensionUnitValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("simulateRoi");
        openapiFields.add("dimensionValue");
        openapiFields.add("dimensionUnit");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner"
                                    + " is not found in the empty JSON string",
                                GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                    .openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("simulateRoi") != null && !jsonObj.get("simulateRoi").isJsonNull())
                && !jsonObj.get("simulateRoi").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `simulateRoi` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("simulateRoi").toString()));
        }
        if ((jsonObj.get("dimensionValue") != null && !jsonObj.get("dimensionValue").isJsonNull())
                && !jsonObj.get("dimensionValue").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `dimensionValue` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("dimensionValue").toString()));
        }
        if ((jsonObj.get("dimensionUnit") != null && !jsonObj.get("dimensionUnit").isJsonNull())
                && !jsonObj.get("dimensionUnit").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `dimensionUnit` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("dimensionUnit").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                    .class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner'
                // and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<
                            GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public
                        GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of
     * GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner given an JSON
     * string
     *
     * @param jsonString JSON string
     * @return An instance of
     *     GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
     */
    public static GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
            fromJson(String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner
                                .class);
    }

    /**
     * Convert an instance of
     * GetTargetAssetListResponseAutoInvestAssetListInnerRoiAndDimensionTypeListInner to an JSON
     * string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
