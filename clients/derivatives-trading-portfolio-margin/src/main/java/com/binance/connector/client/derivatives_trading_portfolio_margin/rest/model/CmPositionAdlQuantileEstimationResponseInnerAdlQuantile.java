/*
 * Binance Derivatives Trading Portfolio Margin REST API
 * OpenAPI Specification for the Binance Derivatives Trading Portfolio Margin REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.derivatives_trading_portfolio_margin.rest.model;

import com.binance.connector.client.derivatives_trading_portfolio_margin.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** CmPositionAdlQuantileEstimationResponseInnerAdlQuantile */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class CmPositionAdlQuantileEstimationResponseInnerAdlQuantile {
    public static final String SERIALIZED_NAME_L_O_N_G = "LONG";

    @SerializedName(SERIALIZED_NAME_L_O_N_G)
    @jakarta.annotation.Nullable
    private Long LONG;

    public static final String SERIALIZED_NAME_S_H_O_R_T = "SHORT";

    @SerializedName(SERIALIZED_NAME_S_H_O_R_T)
    @jakarta.annotation.Nullable
    private Long SHORT;

    public static final String SERIALIZED_NAME_H_E_D_G_E = "HEDGE";

    @SerializedName(SERIALIZED_NAME_H_E_D_G_E)
    @jakarta.annotation.Nullable
    private Long HEDGE;

    public static final String SERIALIZED_NAME_B_O_T_H = "BOTH";

    @SerializedName(SERIALIZED_NAME_B_O_T_H)
    @jakarta.annotation.Nullable
    private Long BOTH;

    public CmPositionAdlQuantileEstimationResponseInnerAdlQuantile() {}

    public CmPositionAdlQuantileEstimationResponseInnerAdlQuantile LONG(
            @jakarta.annotation.Nullable Long LONG) {
        this.LONG = LONG;
        return this;
    }

    /**
     * Get LONG
     *
     * @return LONG
     */
    @jakarta.annotation.Nullable
    public Long getLONG() {
        return LONG;
    }

    public void setLONG(@jakarta.annotation.Nullable Long LONG) {
        this.LONG = LONG;
    }

    public CmPositionAdlQuantileEstimationResponseInnerAdlQuantile SHORT(
            @jakarta.annotation.Nullable Long SHORT) {
        this.SHORT = SHORT;
        return this;
    }

    /**
     * Get SHORT
     *
     * @return SHORT
     */
    @jakarta.annotation.Nullable
    public Long getSHORT() {
        return SHORT;
    }

    public void setSHORT(@jakarta.annotation.Nullable Long SHORT) {
        this.SHORT = SHORT;
    }

    public CmPositionAdlQuantileEstimationResponseInnerAdlQuantile HEDGE(
            @jakarta.annotation.Nullable Long HEDGE) {
        this.HEDGE = HEDGE;
        return this;
    }

    /**
     * Get HEDGE
     *
     * @return HEDGE
     */
    @jakarta.annotation.Nullable
    public Long getHEDGE() {
        return HEDGE;
    }

    public void setHEDGE(@jakarta.annotation.Nullable Long HEDGE) {
        this.HEDGE = HEDGE;
    }

    public CmPositionAdlQuantileEstimationResponseInnerAdlQuantile BOTH(
            @jakarta.annotation.Nullable Long BOTH) {
        this.BOTH = BOTH;
        return this;
    }

    /**
     * Get BOTH
     *
     * @return BOTH
     */
    @jakarta.annotation.Nullable
    public Long getBOTH() {
        return BOTH;
    }

    public void setBOTH(@jakarta.annotation.Nullable Long BOTH) {
        this.BOTH = BOTH;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CmPositionAdlQuantileEstimationResponseInnerAdlQuantile
                cmPositionAdlQuantileEstimationResponseInnerAdlQuantile =
                        (CmPositionAdlQuantileEstimationResponseInnerAdlQuantile) o;
        return Objects.equals(
                        this.LONG, cmPositionAdlQuantileEstimationResponseInnerAdlQuantile.LONG)
                && Objects.equals(
                        this.SHORT, cmPositionAdlQuantileEstimationResponseInnerAdlQuantile.SHORT)
                && Objects.equals(
                        this.HEDGE, cmPositionAdlQuantileEstimationResponseInnerAdlQuantile.HEDGE)
                && Objects.equals(
                        this.BOTH, cmPositionAdlQuantileEstimationResponseInnerAdlQuantile.BOTH);
    }

    @Override
    public int hashCode() {
        return Objects.hash(LONG, SHORT, HEDGE, BOTH);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CmPositionAdlQuantileEstimationResponseInnerAdlQuantile {\n");
        sb.append("		LONG: ").append(toIndentedString(LONG)).append("\n");
        sb.append("		SHORT: ").append(toIndentedString(SHORT)).append("\n");
        sb.append("		HEDGE: ").append(toIndentedString(HEDGE)).append("\n");
        sb.append("		BOTH: ").append(toIndentedString(BOTH)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object LONGValue = getLONG();
        String LONGValueAsString = "";
        LONGValueAsString = LONGValue.toString();
        sb.append("LONG=").append(urlEncode(LONGValueAsString)).append("");
        Object SHORTValue = getSHORT();
        String SHORTValueAsString = "";
        SHORTValueAsString = SHORTValue.toString();
        sb.append("SHORT=").append(urlEncode(SHORTValueAsString)).append("");
        Object HEDGEValue = getHEDGE();
        String HEDGEValueAsString = "";
        HEDGEValueAsString = HEDGEValue.toString();
        sb.append("HEDGE=").append(urlEncode(HEDGEValueAsString)).append("");
        Object BOTHValue = getBOTH();
        String BOTHValueAsString = "";
        BOTHValueAsString = BOTHValue.toString();
        sb.append("BOTH=").append(urlEncode(BOTHValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("LONG");
        openapiFields.add("SHORT");
        openapiFields.add("HEDGE");
        openapiFields.add("BOTH");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     CmPositionAdlQuantileEstimationResponseInnerAdlQuantile
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!CmPositionAdlQuantileEstimationResponseInnerAdlQuantile.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " CmPositionAdlQuantileEstimationResponseInnerAdlQuantile is"
                                    + " not found in the empty JSON string",
                                CmPositionAdlQuantileEstimationResponseInnerAdlQuantile
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!CmPositionAdlQuantileEstimationResponseInnerAdlQuantile.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `CmPositionAdlQuantileEstimationResponseInnerAdlQuantile`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!CmPositionAdlQuantileEstimationResponseInnerAdlQuantile.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'CmPositionAdlQuantileEstimationResponseInnerAdlQuantile' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<CmPositionAdlQuantileEstimationResponseInnerAdlQuantile> thisAdapter =
                    gson.getDelegateAdapter(
                            this,
                            TypeToken.get(
                                    CmPositionAdlQuantileEstimationResponseInnerAdlQuantile.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<CmPositionAdlQuantileEstimationResponseInnerAdlQuantile>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                CmPositionAdlQuantileEstimationResponseInnerAdlQuantile value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public CmPositionAdlQuantileEstimationResponseInnerAdlQuantile read(
                                JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of CmPositionAdlQuantileEstimationResponseInnerAdlQuantile given an JSON
     * string
     *
     * @param jsonString JSON string
     * @return An instance of CmPositionAdlQuantileEstimationResponseInnerAdlQuantile
     * @throws IOException if the JSON string is invalid with respect to
     *     CmPositionAdlQuantileEstimationResponseInnerAdlQuantile
     */
    public static CmPositionAdlQuantileEstimationResponseInnerAdlQuantile fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString, CmPositionAdlQuantileEstimationResponseInnerAdlQuantile.class);
    }

    /**
     * Convert an instance of CmPositionAdlQuantileEstimationResponseInnerAdlQuantile to an JSON
     * string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
