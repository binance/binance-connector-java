/*
 * Binance Derivatives Trading USDS Futures REST API
 * OpenAPI Specification for the Binance Derivatives Trading USDS Futures REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.derivatives_trading_usds_futures.rest.model;

import com.binance.connector.client.derivatives_trading_usds_futures.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** CompressedAggregateTradesListResponseInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class CompressedAggregateTradesListResponseInner {
    public static final String SERIALIZED_NAME_A_LOWER_CASE = "a";

    @SerializedName(SERIALIZED_NAME_A_LOWER_CASE)
    @jakarta.annotation.Nullable
    private Long aLowerCase;

    public static final String SERIALIZED_NAME_P_LOWER_CASE = "p";

    @SerializedName(SERIALIZED_NAME_P_LOWER_CASE)
    @jakarta.annotation.Nullable
    private String pLowerCase;

    public static final String SERIALIZED_NAME_Q_LOWER_CASE = "q";

    @SerializedName(SERIALIZED_NAME_Q_LOWER_CASE)
    @jakarta.annotation.Nullable
    private String qLowerCase;

    public static final String SERIALIZED_NAME_F_LOWER_CASE = "f";

    @SerializedName(SERIALIZED_NAME_F_LOWER_CASE)
    @jakarta.annotation.Nullable
    private Long fLowerCase;

    public static final String SERIALIZED_NAME_L_LOWER_CASE = "l";

    @SerializedName(SERIALIZED_NAME_L_LOWER_CASE)
    @jakarta.annotation.Nullable
    private Long lLowerCase;

    public static final String SERIALIZED_NAME_T = "T";

    @SerializedName(SERIALIZED_NAME_T)
    @jakarta.annotation.Nullable
    private Long T;

    public static final String SERIALIZED_NAME_M_LOWER_CASE = "m";

    @SerializedName(SERIALIZED_NAME_M_LOWER_CASE)
    @jakarta.annotation.Nullable
    private Boolean mLowerCase;

    public CompressedAggregateTradesListResponseInner() {}

    public CompressedAggregateTradesListResponseInner aLowerCase(
            @jakarta.annotation.Nullable Long aLowerCase) {
        this.aLowerCase = aLowerCase;
        return this;
    }

    /**
     * Get aLowerCase
     *
     * @return aLowerCase
     */
    @jakarta.annotation.Nullable
    public Long getaLowerCase() {
        return aLowerCase;
    }

    public void setaLowerCase(@jakarta.annotation.Nullable Long aLowerCase) {
        this.aLowerCase = aLowerCase;
    }

    public CompressedAggregateTradesListResponseInner pLowerCase(
            @jakarta.annotation.Nullable String pLowerCase) {
        this.pLowerCase = pLowerCase;
        return this;
    }

    /**
     * Get pLowerCase
     *
     * @return pLowerCase
     */
    @jakarta.annotation.Nullable
    public String getpLowerCase() {
        return pLowerCase;
    }

    public void setpLowerCase(@jakarta.annotation.Nullable String pLowerCase) {
        this.pLowerCase = pLowerCase;
    }

    public CompressedAggregateTradesListResponseInner qLowerCase(
            @jakarta.annotation.Nullable String qLowerCase) {
        this.qLowerCase = qLowerCase;
        return this;
    }

    /**
     * Get qLowerCase
     *
     * @return qLowerCase
     */
    @jakarta.annotation.Nullable
    public String getqLowerCase() {
        return qLowerCase;
    }

    public void setqLowerCase(@jakarta.annotation.Nullable String qLowerCase) {
        this.qLowerCase = qLowerCase;
    }

    public CompressedAggregateTradesListResponseInner fLowerCase(
            @jakarta.annotation.Nullable Long fLowerCase) {
        this.fLowerCase = fLowerCase;
        return this;
    }

    /**
     * Get fLowerCase
     *
     * @return fLowerCase
     */
    @jakarta.annotation.Nullable
    public Long getfLowerCase() {
        return fLowerCase;
    }

    public void setfLowerCase(@jakarta.annotation.Nullable Long fLowerCase) {
        this.fLowerCase = fLowerCase;
    }

    public CompressedAggregateTradesListResponseInner lLowerCase(
            @jakarta.annotation.Nullable Long lLowerCase) {
        this.lLowerCase = lLowerCase;
        return this;
    }

    /**
     * Get lLowerCase
     *
     * @return lLowerCase
     */
    @jakarta.annotation.Nullable
    public Long getlLowerCase() {
        return lLowerCase;
    }

    public void setlLowerCase(@jakarta.annotation.Nullable Long lLowerCase) {
        this.lLowerCase = lLowerCase;
    }

    public CompressedAggregateTradesListResponseInner T(@jakarta.annotation.Nullable Long T) {
        this.T = T;
        return this;
    }

    /**
     * Get T
     *
     * @return T
     */
    @jakarta.annotation.Nullable
    public Long getT() {
        return T;
    }

    public void setT(@jakarta.annotation.Nullable Long T) {
        this.T = T;
    }

    public CompressedAggregateTradesListResponseInner mLowerCase(
            @jakarta.annotation.Nullable Boolean mLowerCase) {
        this.mLowerCase = mLowerCase;
        return this;
    }

    /**
     * Get mLowerCase
     *
     * @return mLowerCase
     */
    @jakarta.annotation.Nullable
    public Boolean getmLowerCase() {
        return mLowerCase;
    }

    public void setmLowerCase(@jakarta.annotation.Nullable Boolean mLowerCase) {
        this.mLowerCase = mLowerCase;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CompressedAggregateTradesListResponseInner compressedAggregateTradesListResponseInner =
                (CompressedAggregateTradesListResponseInner) o;
        return Objects.equals(
                        this.aLowerCase, compressedAggregateTradesListResponseInner.aLowerCase)
                && Objects.equals(
                        this.pLowerCase, compressedAggregateTradesListResponseInner.pLowerCase)
                && Objects.equals(
                        this.qLowerCase, compressedAggregateTradesListResponseInner.qLowerCase)
                && Objects.equals(
                        this.fLowerCase, compressedAggregateTradesListResponseInner.fLowerCase)
                && Objects.equals(
                        this.lLowerCase, compressedAggregateTradesListResponseInner.lLowerCase)
                && Objects.equals(this.T, compressedAggregateTradesListResponseInner.T)
                && Objects.equals(
                        this.mLowerCase, compressedAggregateTradesListResponseInner.mLowerCase);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                aLowerCase, pLowerCase, qLowerCase, fLowerCase, lLowerCase, T, mLowerCase);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CompressedAggregateTradesListResponseInner {\n");
        sb.append("		aLowerCase: ").append(toIndentedString(aLowerCase)).append("\n");
        sb.append("		pLowerCase: ").append(toIndentedString(pLowerCase)).append("\n");
        sb.append("		qLowerCase: ").append(toIndentedString(qLowerCase)).append("\n");
        sb.append("		fLowerCase: ").append(toIndentedString(fLowerCase)).append("\n");
        sb.append("		lLowerCase: ").append(toIndentedString(lLowerCase)).append("\n");
        sb.append("		T: ").append(toIndentedString(T)).append("\n");
        sb.append("		mLowerCase: ").append(toIndentedString(mLowerCase)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object aLowerCaseValue = getaLowerCase();
        String aLowerCaseValueAsString = "";
        aLowerCaseValueAsString = aLowerCaseValue.toString();
        sb.append("aLowerCase=").append(urlEncode(aLowerCaseValueAsString)).append("");
        Object pLowerCaseValue = getpLowerCase();
        String pLowerCaseValueAsString = "";
        pLowerCaseValueAsString = pLowerCaseValue.toString();
        sb.append("pLowerCase=").append(urlEncode(pLowerCaseValueAsString)).append("");
        Object qLowerCaseValue = getqLowerCase();
        String qLowerCaseValueAsString = "";
        qLowerCaseValueAsString = qLowerCaseValue.toString();
        sb.append("qLowerCase=").append(urlEncode(qLowerCaseValueAsString)).append("");
        Object fLowerCaseValue = getfLowerCase();
        String fLowerCaseValueAsString = "";
        fLowerCaseValueAsString = fLowerCaseValue.toString();
        sb.append("fLowerCase=").append(urlEncode(fLowerCaseValueAsString)).append("");
        Object lLowerCaseValue = getlLowerCase();
        String lLowerCaseValueAsString = "";
        lLowerCaseValueAsString = lLowerCaseValue.toString();
        sb.append("lLowerCase=").append(urlEncode(lLowerCaseValueAsString)).append("");
        Object TValue = getT();
        String TValueAsString = "";
        TValueAsString = TValue.toString();
        sb.append("T=").append(urlEncode(TValueAsString)).append("");
        Object mLowerCaseValue = getmLowerCase();
        String mLowerCaseValueAsString = "";
        mLowerCaseValueAsString = mLowerCaseValue.toString();
        sb.append("mLowerCase=").append(urlEncode(mLowerCaseValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("a");
        openapiFields.add("p");
        openapiFields.add("q");
        openapiFields.add("f");
        openapiFields.add("l");
        openapiFields.add("T");
        openapiFields.add("m");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     CompressedAggregateTradesListResponseInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!CompressedAggregateTradesListResponseInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " CompressedAggregateTradesListResponseInner is not found in"
                                    + " the empty JSON string",
                                CompressedAggregateTradesListResponseInner.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!CompressedAggregateTradesListResponseInner.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `CompressedAggregateTradesListResponseInner` properties."
                                    + " JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("p") != null && !jsonObj.get("p").isJsonNull())
                && !jsonObj.get("p").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `p` to be a primitive type in the JSON string but"
                                    + " got `%s`",
                            jsonObj.get("p").toString()));
        }
        if ((jsonObj.get("q") != null && !jsonObj.get("q").isJsonNull())
                && !jsonObj.get("q").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `q` to be a primitive type in the JSON string but"
                                    + " got `%s`",
                            jsonObj.get("q").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!CompressedAggregateTradesListResponseInner.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'CompressedAggregateTradesListResponseInner' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<CompressedAggregateTradesListResponseInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(CompressedAggregateTradesListResponseInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<CompressedAggregateTradesListResponseInner>() {
                        @Override
                        public void write(
                                JsonWriter out, CompressedAggregateTradesListResponseInner value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public CompressedAggregateTradesListResponseInner read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of CompressedAggregateTradesListResponseInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of CompressedAggregateTradesListResponseInner
     * @throws IOException if the JSON string is invalid with respect to
     *     CompressedAggregateTradesListResponseInner
     */
    public static CompressedAggregateTradesListResponseInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, CompressedAggregateTradesListResponseInner.class);
    }

    /**
     * Convert an instance of CompressedAggregateTradesListResponseInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
