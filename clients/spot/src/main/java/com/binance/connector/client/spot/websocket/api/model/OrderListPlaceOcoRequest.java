/*
 * Binance Spot WebSocket API
 * OpenAPI Specifications for the Binance Spot WebSocket API  API documents:   - [Github web-socket-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md)   - [General API information for web-socket-api on website](https://developers.binance.com/docs/binance-spot-api-docs/web-socket-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.spot.websocket.api.model;

import com.binance.connector.client.common.DecimalFormatter;
import com.binance.connector.client.common.websocket.dtos.BaseDTO;
import com.binance.connector.client.spot.websocket.api.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.TreeMap;
import java.util.stream.Collectors;
import org.hibernate.validator.constraints.*;

/** OrderListPlaceOcoRequest */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class OrderListPlaceOcoRequest extends BaseDTO {
    public static final String SERIALIZED_NAME_SYMBOL = "symbol";

    @SerializedName(SERIALIZED_NAME_SYMBOL)
    @jakarta.annotation.Nonnull
    private String symbol;

    public static final String SERIALIZED_NAME_LIST_CLIENT_ORDER_ID = "listClientOrderId";

    @SerializedName(SERIALIZED_NAME_LIST_CLIENT_ORDER_ID)
    @jakarta.annotation.Nullable
    private String listClientOrderId;

    public static final String SERIALIZED_NAME_SIDE = "side";

    @SerializedName(SERIALIZED_NAME_SIDE)
    @jakarta.annotation.Nonnull
    private Side side;

    public static final String SERIALIZED_NAME_QUANTITY = "quantity";

    @SerializedName(SERIALIZED_NAME_QUANTITY)
    @jakarta.annotation.Nonnull
    private Double quantity;

    public static final String SERIALIZED_NAME_ABOVE_TYPE = "aboveType";

    @SerializedName(SERIALIZED_NAME_ABOVE_TYPE)
    @jakarta.annotation.Nonnull
    private AboveType aboveType;

    public static final String SERIALIZED_NAME_ABOVE_CLIENT_ORDER_ID = "aboveClientOrderId";

    @SerializedName(SERIALIZED_NAME_ABOVE_CLIENT_ORDER_ID)
    @jakarta.annotation.Nullable
    private String aboveClientOrderId;

    public static final String SERIALIZED_NAME_ABOVE_ICEBERG_QTY = "aboveIcebergQty";

    @SerializedName(SERIALIZED_NAME_ABOVE_ICEBERG_QTY)
    @jakarta.annotation.Nullable
    private Long aboveIcebergQty;

    public static final String SERIALIZED_NAME_ABOVE_PRICE = "abovePrice";

    @SerializedName(SERIALIZED_NAME_ABOVE_PRICE)
    @jakarta.annotation.Nullable
    private Double abovePrice;

    public static final String SERIALIZED_NAME_ABOVE_STOP_PRICE = "aboveStopPrice";

    @SerializedName(SERIALIZED_NAME_ABOVE_STOP_PRICE)
    @jakarta.annotation.Nullable
    private Double aboveStopPrice;

    public static final String SERIALIZED_NAME_ABOVE_TRAILING_DELTA = "aboveTrailingDelta";

    @SerializedName(SERIALIZED_NAME_ABOVE_TRAILING_DELTA)
    @jakarta.annotation.Nullable
    private Long aboveTrailingDelta;

    public static final String SERIALIZED_NAME_ABOVE_TIME_IN_FORCE = "aboveTimeInForce";

    @SerializedName(SERIALIZED_NAME_ABOVE_TIME_IN_FORCE)
    @jakarta.annotation.Nullable
    private Double aboveTimeInForce;

    public static final String SERIALIZED_NAME_ABOVE_STRATEGY_ID = "aboveStrategyId";

    @SerializedName(SERIALIZED_NAME_ABOVE_STRATEGY_ID)
    @jakarta.annotation.Nullable
    private Long aboveStrategyId;

    public static final String SERIALIZED_NAME_ABOVE_STRATEGY_TYPE = "aboveStrategyType";

    @SerializedName(SERIALIZED_NAME_ABOVE_STRATEGY_TYPE)
    @jakarta.annotation.Nullable
    private Integer aboveStrategyType;

    public static final String SERIALIZED_NAME_BELOW_TYPE = "belowType";

    @SerializedName(SERIALIZED_NAME_BELOW_TYPE)
    @jakarta.annotation.Nonnull
    private BelowType belowType;

    public static final String SERIALIZED_NAME_BELOW_CLIENT_ORDER_ID = "belowClientOrderId";

    @SerializedName(SERIALIZED_NAME_BELOW_CLIENT_ORDER_ID)
    @jakarta.annotation.Nullable
    private String belowClientOrderId;

    public static final String SERIALIZED_NAME_BELOW_ICEBERG_QTY = "belowIcebergQty";

    @SerializedName(SERIALIZED_NAME_BELOW_ICEBERG_QTY)
    @jakarta.annotation.Nullable
    private Long belowIcebergQty;

    public static final String SERIALIZED_NAME_BELOW_PRICE = "belowPrice";

    @SerializedName(SERIALIZED_NAME_BELOW_PRICE)
    @jakarta.annotation.Nullable
    private Double belowPrice;

    public static final String SERIALIZED_NAME_BELOW_STOP_PRICE = "belowStopPrice";

    @SerializedName(SERIALIZED_NAME_BELOW_STOP_PRICE)
    @jakarta.annotation.Nullable
    private Double belowStopPrice;

    public static final String SERIALIZED_NAME_BELOW_TRAILING_DELTA = "belowTrailingDelta";

    @SerializedName(SERIALIZED_NAME_BELOW_TRAILING_DELTA)
    @jakarta.annotation.Nullable
    private Long belowTrailingDelta;

    public static final String SERIALIZED_NAME_BELOW_TIME_IN_FORCE = "belowTimeInForce";

    @SerializedName(SERIALIZED_NAME_BELOW_TIME_IN_FORCE)
    @jakarta.annotation.Nullable
    private BelowTimeInForce belowTimeInForce;

    public static final String SERIALIZED_NAME_BELOW_STRATEGY_ID = "belowStrategyId";

    @SerializedName(SERIALIZED_NAME_BELOW_STRATEGY_ID)
    @jakarta.annotation.Nullable
    private Long belowStrategyId;

    public static final String SERIALIZED_NAME_BELOW_STRATEGY_TYPE = "belowStrategyType";

    @SerializedName(SERIALIZED_NAME_BELOW_STRATEGY_TYPE)
    @jakarta.annotation.Nullable
    private Integer belowStrategyType;

    public static final String SERIALIZED_NAME_NEW_ORDER_RESP_TYPE = "newOrderRespType";

    @SerializedName(SERIALIZED_NAME_NEW_ORDER_RESP_TYPE)
    @jakarta.annotation.Nullable
    private NewOrderRespType newOrderRespType;

    public static final String SERIALIZED_NAME_SELF_TRADE_PREVENTION_MODE =
            "selfTradePreventionMode";

    @SerializedName(SERIALIZED_NAME_SELF_TRADE_PREVENTION_MODE)
    @jakarta.annotation.Nullable
    private SelfTradePreventionMode selfTradePreventionMode;

    public static final String SERIALIZED_NAME_RECV_WINDOW = "recvWindow";

    @SerializedName(SERIALIZED_NAME_RECV_WINDOW)
    @jakarta.annotation.Nullable
    private Long recvWindow;

    public OrderListPlaceOcoRequest() {}

    public OrderListPlaceOcoRequest symbol(@jakarta.annotation.Nonnull String symbol) {
        this.symbol = symbol;
        return this;
    }

    /**
     * Get symbol
     *
     * @return symbol
     */
    @jakarta.annotation.Nonnull
    @NotNull
    public String getSymbol() {
        return symbol;
    }

    public void setSymbol(@jakarta.annotation.Nonnull String symbol) {
        this.symbol = symbol;
    }

    public OrderListPlaceOcoRequest listClientOrderId(
            @jakarta.annotation.Nullable String listClientOrderId) {
        this.listClientOrderId = listClientOrderId;
        return this;
    }

    /**
     * Get listClientOrderId
     *
     * @return listClientOrderId
     */
    @jakarta.annotation.Nullable
    public String getListClientOrderId() {
        return listClientOrderId;
    }

    public void setListClientOrderId(@jakarta.annotation.Nullable String listClientOrderId) {
        this.listClientOrderId = listClientOrderId;
    }

    public OrderListPlaceOcoRequest side(@jakarta.annotation.Nonnull Side side) {
        this.side = side;
        return this;
    }

    /**
     * Get side
     *
     * @return side
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @Valid
    public Side getSide() {
        return side;
    }

    public void setSide(@jakarta.annotation.Nonnull Side side) {
        this.side = side;
    }

    public OrderListPlaceOcoRequest quantity(@jakarta.annotation.Nonnull Double quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Get quantity
     *
     * @return quantity
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @Valid
    public Double getQuantity() {
        return quantity;
    }

    public void setQuantity(@jakarta.annotation.Nonnull Double quantity) {
        this.quantity = quantity;
    }

    public OrderListPlaceOcoRequest aboveType(@jakarta.annotation.Nonnull AboveType aboveType) {
        this.aboveType = aboveType;
        return this;
    }

    /**
     * Get aboveType
     *
     * @return aboveType
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @Valid
    public AboveType getAboveType() {
        return aboveType;
    }

    public void setAboveType(@jakarta.annotation.Nonnull AboveType aboveType) {
        this.aboveType = aboveType;
    }

    public OrderListPlaceOcoRequest aboveClientOrderId(
            @jakarta.annotation.Nullable String aboveClientOrderId) {
        this.aboveClientOrderId = aboveClientOrderId;
        return this;
    }

    /**
     * Get aboveClientOrderId
     *
     * @return aboveClientOrderId
     */
    @jakarta.annotation.Nullable
    public String getAboveClientOrderId() {
        return aboveClientOrderId;
    }

    public void setAboveClientOrderId(@jakarta.annotation.Nullable String aboveClientOrderId) {
        this.aboveClientOrderId = aboveClientOrderId;
    }

    public OrderListPlaceOcoRequest aboveIcebergQty(
            @jakarta.annotation.Nullable Long aboveIcebergQty) {
        this.aboveIcebergQty = aboveIcebergQty;
        return this;
    }

    /**
     * Get aboveIcebergQty
     *
     * @return aboveIcebergQty
     */
    @jakarta.annotation.Nullable
    public Long getAboveIcebergQty() {
        return aboveIcebergQty;
    }

    public void setAboveIcebergQty(@jakarta.annotation.Nullable Long aboveIcebergQty) {
        this.aboveIcebergQty = aboveIcebergQty;
    }

    public OrderListPlaceOcoRequest abovePrice(@jakarta.annotation.Nullable Double abovePrice) {
        this.abovePrice = abovePrice;
        return this;
    }

    /**
     * Get abovePrice
     *
     * @return abovePrice
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double getAbovePrice() {
        return abovePrice;
    }

    public void setAbovePrice(@jakarta.annotation.Nullable Double abovePrice) {
        this.abovePrice = abovePrice;
    }

    public OrderListPlaceOcoRequest aboveStopPrice(
            @jakarta.annotation.Nullable Double aboveStopPrice) {
        this.aboveStopPrice = aboveStopPrice;
        return this;
    }

    /**
     * Get aboveStopPrice
     *
     * @return aboveStopPrice
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double getAboveStopPrice() {
        return aboveStopPrice;
    }

    public void setAboveStopPrice(@jakarta.annotation.Nullable Double aboveStopPrice) {
        this.aboveStopPrice = aboveStopPrice;
    }

    public OrderListPlaceOcoRequest aboveTrailingDelta(
            @jakarta.annotation.Nullable Long aboveTrailingDelta) {
        this.aboveTrailingDelta = aboveTrailingDelta;
        return this;
    }

    /**
     * Get aboveTrailingDelta
     *
     * @return aboveTrailingDelta
     */
    @jakarta.annotation.Nullable
    public Long getAboveTrailingDelta() {
        return aboveTrailingDelta;
    }

    public void setAboveTrailingDelta(@jakarta.annotation.Nullable Long aboveTrailingDelta) {
        this.aboveTrailingDelta = aboveTrailingDelta;
    }

    public OrderListPlaceOcoRequest aboveTimeInForce(
            @jakarta.annotation.Nullable Double aboveTimeInForce) {
        this.aboveTimeInForce = aboveTimeInForce;
        return this;
    }

    /**
     * Get aboveTimeInForce
     *
     * @return aboveTimeInForce
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double getAboveTimeInForce() {
        return aboveTimeInForce;
    }

    public void setAboveTimeInForce(@jakarta.annotation.Nullable Double aboveTimeInForce) {
        this.aboveTimeInForce = aboveTimeInForce;
    }

    public OrderListPlaceOcoRequest aboveStrategyId(
            @jakarta.annotation.Nullable Long aboveStrategyId) {
        this.aboveStrategyId = aboveStrategyId;
        return this;
    }

    /**
     * Get aboveStrategyId
     *
     * @return aboveStrategyId
     */
    @jakarta.annotation.Nullable
    public Long getAboveStrategyId() {
        return aboveStrategyId;
    }

    public void setAboveStrategyId(@jakarta.annotation.Nullable Long aboveStrategyId) {
        this.aboveStrategyId = aboveStrategyId;
    }

    public OrderListPlaceOcoRequest aboveStrategyType(
            @jakarta.annotation.Nullable Integer aboveStrategyType) {
        this.aboveStrategyType = aboveStrategyType;
        return this;
    }

    /**
     * Get aboveStrategyType
     *
     * @return aboveStrategyType
     */
    @jakarta.annotation.Nullable
    public Integer getAboveStrategyType() {
        return aboveStrategyType;
    }

    public void setAboveStrategyType(@jakarta.annotation.Nullable Integer aboveStrategyType) {
        this.aboveStrategyType = aboveStrategyType;
    }

    public OrderListPlaceOcoRequest belowType(@jakarta.annotation.Nonnull BelowType belowType) {
        this.belowType = belowType;
        return this;
    }

    /**
     * Get belowType
     *
     * @return belowType
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @Valid
    public BelowType getBelowType() {
        return belowType;
    }

    public void setBelowType(@jakarta.annotation.Nonnull BelowType belowType) {
        this.belowType = belowType;
    }

    public OrderListPlaceOcoRequest belowClientOrderId(
            @jakarta.annotation.Nullable String belowClientOrderId) {
        this.belowClientOrderId = belowClientOrderId;
        return this;
    }

    /**
     * Get belowClientOrderId
     *
     * @return belowClientOrderId
     */
    @jakarta.annotation.Nullable
    public String getBelowClientOrderId() {
        return belowClientOrderId;
    }

    public void setBelowClientOrderId(@jakarta.annotation.Nullable String belowClientOrderId) {
        this.belowClientOrderId = belowClientOrderId;
    }

    public OrderListPlaceOcoRequest belowIcebergQty(
            @jakarta.annotation.Nullable Long belowIcebergQty) {
        this.belowIcebergQty = belowIcebergQty;
        return this;
    }

    /**
     * Get belowIcebergQty
     *
     * @return belowIcebergQty
     */
    @jakarta.annotation.Nullable
    public Long getBelowIcebergQty() {
        return belowIcebergQty;
    }

    public void setBelowIcebergQty(@jakarta.annotation.Nullable Long belowIcebergQty) {
        this.belowIcebergQty = belowIcebergQty;
    }

    public OrderListPlaceOcoRequest belowPrice(@jakarta.annotation.Nullable Double belowPrice) {
        this.belowPrice = belowPrice;
        return this;
    }

    /**
     * Get belowPrice
     *
     * @return belowPrice
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double getBelowPrice() {
        return belowPrice;
    }

    public void setBelowPrice(@jakarta.annotation.Nullable Double belowPrice) {
        this.belowPrice = belowPrice;
    }

    public OrderListPlaceOcoRequest belowStopPrice(
            @jakarta.annotation.Nullable Double belowStopPrice) {
        this.belowStopPrice = belowStopPrice;
        return this;
    }

    /**
     * Get belowStopPrice
     *
     * @return belowStopPrice
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double getBelowStopPrice() {
        return belowStopPrice;
    }

    public void setBelowStopPrice(@jakarta.annotation.Nullable Double belowStopPrice) {
        this.belowStopPrice = belowStopPrice;
    }

    public OrderListPlaceOcoRequest belowTrailingDelta(
            @jakarta.annotation.Nullable Long belowTrailingDelta) {
        this.belowTrailingDelta = belowTrailingDelta;
        return this;
    }

    /**
     * Get belowTrailingDelta
     *
     * @return belowTrailingDelta
     */
    @jakarta.annotation.Nullable
    public Long getBelowTrailingDelta() {
        return belowTrailingDelta;
    }

    public void setBelowTrailingDelta(@jakarta.annotation.Nullable Long belowTrailingDelta) {
        this.belowTrailingDelta = belowTrailingDelta;
    }

    public OrderListPlaceOcoRequest belowTimeInForce(
            @jakarta.annotation.Nullable BelowTimeInForce belowTimeInForce) {
        this.belowTimeInForce = belowTimeInForce;
        return this;
    }

    /**
     * Get belowTimeInForce
     *
     * @return belowTimeInForce
     */
    @jakarta.annotation.Nullable
    @Valid
    public BelowTimeInForce getBelowTimeInForce() {
        return belowTimeInForce;
    }

    public void setBelowTimeInForce(
            @jakarta.annotation.Nullable BelowTimeInForce belowTimeInForce) {
        this.belowTimeInForce = belowTimeInForce;
    }

    public OrderListPlaceOcoRequest belowStrategyId(
            @jakarta.annotation.Nullable Long belowStrategyId) {
        this.belowStrategyId = belowStrategyId;
        return this;
    }

    /**
     * Get belowStrategyId
     *
     * @return belowStrategyId
     */
    @jakarta.annotation.Nullable
    public Long getBelowStrategyId() {
        return belowStrategyId;
    }

    public void setBelowStrategyId(@jakarta.annotation.Nullable Long belowStrategyId) {
        this.belowStrategyId = belowStrategyId;
    }

    public OrderListPlaceOcoRequest belowStrategyType(
            @jakarta.annotation.Nullable Integer belowStrategyType) {
        this.belowStrategyType = belowStrategyType;
        return this;
    }

    /**
     * Get belowStrategyType
     *
     * @return belowStrategyType
     */
    @jakarta.annotation.Nullable
    public Integer getBelowStrategyType() {
        return belowStrategyType;
    }

    public void setBelowStrategyType(@jakarta.annotation.Nullable Integer belowStrategyType) {
        this.belowStrategyType = belowStrategyType;
    }

    public OrderListPlaceOcoRequest newOrderRespType(
            @jakarta.annotation.Nullable NewOrderRespType newOrderRespType) {
        this.newOrderRespType = newOrderRespType;
        return this;
    }

    /**
     * Get newOrderRespType
     *
     * @return newOrderRespType
     */
    @jakarta.annotation.Nullable
    @Valid
    public NewOrderRespType getNewOrderRespType() {
        return newOrderRespType;
    }

    public void setNewOrderRespType(
            @jakarta.annotation.Nullable NewOrderRespType newOrderRespType) {
        this.newOrderRespType = newOrderRespType;
    }

    public OrderListPlaceOcoRequest selfTradePreventionMode(
            @jakarta.annotation.Nullable SelfTradePreventionMode selfTradePreventionMode) {
        this.selfTradePreventionMode = selfTradePreventionMode;
        return this;
    }

    /**
     * Get selfTradePreventionMode
     *
     * @return selfTradePreventionMode
     */
    @jakarta.annotation.Nullable
    @Valid
    public SelfTradePreventionMode getSelfTradePreventionMode() {
        return selfTradePreventionMode;
    }

    public void setSelfTradePreventionMode(
            @jakarta.annotation.Nullable SelfTradePreventionMode selfTradePreventionMode) {
        this.selfTradePreventionMode = selfTradePreventionMode;
    }

    public OrderListPlaceOcoRequest recvWindow(@jakarta.annotation.Nullable Long recvWindow) {
        this.recvWindow = recvWindow;
        return this;
    }

    /**
     * Get recvWindow
     *
     * @return recvWindow
     */
    @jakarta.annotation.Nullable
    public Long getRecvWindow() {
        return recvWindow;
    }

    public void setRecvWindow(@jakarta.annotation.Nullable Long recvWindow) {
        this.recvWindow = recvWindow;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderListPlaceOcoRequest orderListPlaceOcoRequest = (OrderListPlaceOcoRequest) o;
        return Objects.equals(this.symbol, orderListPlaceOcoRequest.symbol)
                && Objects.equals(
                        this.listClientOrderId, orderListPlaceOcoRequest.listClientOrderId)
                && Objects.equals(this.side, orderListPlaceOcoRequest.side)
                && Objects.equals(this.quantity, orderListPlaceOcoRequest.quantity)
                && Objects.equals(this.aboveType, orderListPlaceOcoRequest.aboveType)
                && Objects.equals(
                        this.aboveClientOrderId, orderListPlaceOcoRequest.aboveClientOrderId)
                && Objects.equals(this.aboveIcebergQty, orderListPlaceOcoRequest.aboveIcebergQty)
                && Objects.equals(this.abovePrice, orderListPlaceOcoRequest.abovePrice)
                && Objects.equals(this.aboveStopPrice, orderListPlaceOcoRequest.aboveStopPrice)
                && Objects.equals(
                        this.aboveTrailingDelta, orderListPlaceOcoRequest.aboveTrailingDelta)
                && Objects.equals(this.aboveTimeInForce, orderListPlaceOcoRequest.aboveTimeInForce)
                && Objects.equals(this.aboveStrategyId, orderListPlaceOcoRequest.aboveStrategyId)
                && Objects.equals(
                        this.aboveStrategyType, orderListPlaceOcoRequest.aboveStrategyType)
                && Objects.equals(this.belowType, orderListPlaceOcoRequest.belowType)
                && Objects.equals(
                        this.belowClientOrderId, orderListPlaceOcoRequest.belowClientOrderId)
                && Objects.equals(this.belowIcebergQty, orderListPlaceOcoRequest.belowIcebergQty)
                && Objects.equals(this.belowPrice, orderListPlaceOcoRequest.belowPrice)
                && Objects.equals(this.belowStopPrice, orderListPlaceOcoRequest.belowStopPrice)
                && Objects.equals(
                        this.belowTrailingDelta, orderListPlaceOcoRequest.belowTrailingDelta)
                && Objects.equals(this.belowTimeInForce, orderListPlaceOcoRequest.belowTimeInForce)
                && Objects.equals(this.belowStrategyId, orderListPlaceOcoRequest.belowStrategyId)
                && Objects.equals(
                        this.belowStrategyType, orderListPlaceOcoRequest.belowStrategyType)
                && Objects.equals(this.newOrderRespType, orderListPlaceOcoRequest.newOrderRespType)
                && Objects.equals(
                        this.selfTradePreventionMode,
                        orderListPlaceOcoRequest.selfTradePreventionMode)
                && Objects.equals(this.recvWindow, orderListPlaceOcoRequest.recvWindow);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                symbol,
                listClientOrderId,
                side,
                quantity,
                aboveType,
                aboveClientOrderId,
                aboveIcebergQty,
                abovePrice,
                aboveStopPrice,
                aboveTrailingDelta,
                aboveTimeInForce,
                aboveStrategyId,
                aboveStrategyType,
                belowType,
                belowClientOrderId,
                belowIcebergQty,
                belowPrice,
                belowStopPrice,
                belowTrailingDelta,
                belowTimeInForce,
                belowStrategyId,
                belowStrategyType,
                newOrderRespType,
                selfTradePreventionMode,
                recvWindow);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderListPlaceOcoRequest {\n");
        sb.append("		symbol: ").append(toIndentedString(symbol)).append("\n");
        sb.append("		listClientOrderId: ").append(toIndentedString(listClientOrderId)).append("\n");
        sb.append("		side: ").append(toIndentedString(side)).append("\n");
        sb.append("		quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("		aboveType: ").append(toIndentedString(aboveType)).append("\n");
        sb.append("		aboveClientOrderId: ")
                .append(toIndentedString(aboveClientOrderId))
                .append("\n");
        sb.append("		aboveIcebergQty: ").append(toIndentedString(aboveIcebergQty)).append("\n");
        sb.append("		abovePrice: ").append(toIndentedString(abovePrice)).append("\n");
        sb.append("		aboveStopPrice: ").append(toIndentedString(aboveStopPrice)).append("\n");
        sb.append("		aboveTrailingDelta: ")
                .append(toIndentedString(aboveTrailingDelta))
                .append("\n");
        sb.append("		aboveTimeInForce: ").append(toIndentedString(aboveTimeInForce)).append("\n");
        sb.append("		aboveStrategyId: ").append(toIndentedString(aboveStrategyId)).append("\n");
        sb.append("		aboveStrategyType: ").append(toIndentedString(aboveStrategyType)).append("\n");
        sb.append("		belowType: ").append(toIndentedString(belowType)).append("\n");
        sb.append("		belowClientOrderId: ")
                .append(toIndentedString(belowClientOrderId))
                .append("\n");
        sb.append("		belowIcebergQty: ").append(toIndentedString(belowIcebergQty)).append("\n");
        sb.append("		belowPrice: ").append(toIndentedString(belowPrice)).append("\n");
        sb.append("		belowStopPrice: ").append(toIndentedString(belowStopPrice)).append("\n");
        sb.append("		belowTrailingDelta: ")
                .append(toIndentedString(belowTrailingDelta))
                .append("\n");
        sb.append("		belowTimeInForce: ").append(toIndentedString(belowTimeInForce)).append("\n");
        sb.append("		belowStrategyId: ").append(toIndentedString(belowStrategyId)).append("\n");
        sb.append("		belowStrategyType: ").append(toIndentedString(belowStrategyType)).append("\n");
        sb.append("		newOrderRespType: ").append(toIndentedString(newOrderRespType)).append("\n");
        sb.append("		selfTradePreventionMode: ")
                .append(toIndentedString(selfTradePreventionMode))
                .append("\n");
        sb.append("		recvWindow: ").append(toIndentedString(recvWindow)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();
        Map<String, String> valMap = new TreeMap<String, String>();
        valMap.put("apiKey", getApiKey());
        String symbolValue = getSymbol();
        if (symbolValue != null) {
            String symbolValueAsString = symbolValue.toString();
            valMap.put("symbol", symbolValueAsString);
        }
        String listClientOrderIdValue = getListClientOrderId();
        if (listClientOrderIdValue != null) {
            String listClientOrderIdValueAsString = listClientOrderIdValue.toString();
            valMap.put("listClientOrderId", listClientOrderIdValueAsString);
        }
        Side sideValue = getSide();
        if (sideValue != null) {
            String sideValueAsString = sideValue.toString();
            valMap.put("side", sideValueAsString);
        }
        Double quantityValue = getQuantity();
        if (quantityValue != null) {
            String quantityValueAsString = DecimalFormatter.getFormatter().format(quantityValue);
            valMap.put("quantity", quantityValueAsString);
        }
        AboveType aboveTypeValue = getAboveType();
        if (aboveTypeValue != null) {
            String aboveTypeValueAsString = aboveTypeValue.toString();
            valMap.put("aboveType", aboveTypeValueAsString);
        }
        String aboveClientOrderIdValue = getAboveClientOrderId();
        if (aboveClientOrderIdValue != null) {
            String aboveClientOrderIdValueAsString = aboveClientOrderIdValue.toString();
            valMap.put("aboveClientOrderId", aboveClientOrderIdValueAsString);
        }
        Long aboveIcebergQtyValue = getAboveIcebergQty();
        if (aboveIcebergQtyValue != null) {
            String aboveIcebergQtyValueAsString = aboveIcebergQtyValue.toString();
            valMap.put("aboveIcebergQty", aboveIcebergQtyValueAsString);
        }
        Double abovePriceValue = getAbovePrice();
        if (abovePriceValue != null) {
            String abovePriceValueAsString =
                    DecimalFormatter.getFormatter().format(abovePriceValue);
            valMap.put("abovePrice", abovePriceValueAsString);
        }
        Double aboveStopPriceValue = getAboveStopPrice();
        if (aboveStopPriceValue != null) {
            String aboveStopPriceValueAsString =
                    DecimalFormatter.getFormatter().format(aboveStopPriceValue);
            valMap.put("aboveStopPrice", aboveStopPriceValueAsString);
        }
        Long aboveTrailingDeltaValue = getAboveTrailingDelta();
        if (aboveTrailingDeltaValue != null) {
            String aboveTrailingDeltaValueAsString = aboveTrailingDeltaValue.toString();
            valMap.put("aboveTrailingDelta", aboveTrailingDeltaValueAsString);
        }
        Double aboveTimeInForceValue = getAboveTimeInForce();
        if (aboveTimeInForceValue != null) {
            String aboveTimeInForceValueAsString =
                    DecimalFormatter.getFormatter().format(aboveTimeInForceValue);
            valMap.put("aboveTimeInForce", aboveTimeInForceValueAsString);
        }
        Long aboveStrategyIdValue = getAboveStrategyId();
        if (aboveStrategyIdValue != null) {
            String aboveStrategyIdValueAsString = aboveStrategyIdValue.toString();
            valMap.put("aboveStrategyId", aboveStrategyIdValueAsString);
        }
        Integer aboveStrategyTypeValue = getAboveStrategyType();
        if (aboveStrategyTypeValue != null) {
            String aboveStrategyTypeValueAsString = aboveStrategyTypeValue.toString();
            valMap.put("aboveStrategyType", aboveStrategyTypeValueAsString);
        }
        BelowType belowTypeValue = getBelowType();
        if (belowTypeValue != null) {
            String belowTypeValueAsString = belowTypeValue.toString();
            valMap.put("belowType", belowTypeValueAsString);
        }
        String belowClientOrderIdValue = getBelowClientOrderId();
        if (belowClientOrderIdValue != null) {
            String belowClientOrderIdValueAsString = belowClientOrderIdValue.toString();
            valMap.put("belowClientOrderId", belowClientOrderIdValueAsString);
        }
        Long belowIcebergQtyValue = getBelowIcebergQty();
        if (belowIcebergQtyValue != null) {
            String belowIcebergQtyValueAsString = belowIcebergQtyValue.toString();
            valMap.put("belowIcebergQty", belowIcebergQtyValueAsString);
        }
        Double belowPriceValue = getBelowPrice();
        if (belowPriceValue != null) {
            String belowPriceValueAsString =
                    DecimalFormatter.getFormatter().format(belowPriceValue);
            valMap.put("belowPrice", belowPriceValueAsString);
        }
        Double belowStopPriceValue = getBelowStopPrice();
        if (belowStopPriceValue != null) {
            String belowStopPriceValueAsString =
                    DecimalFormatter.getFormatter().format(belowStopPriceValue);
            valMap.put("belowStopPrice", belowStopPriceValueAsString);
        }
        Long belowTrailingDeltaValue = getBelowTrailingDelta();
        if (belowTrailingDeltaValue != null) {
            String belowTrailingDeltaValueAsString = belowTrailingDeltaValue.toString();
            valMap.put("belowTrailingDelta", belowTrailingDeltaValueAsString);
        }
        BelowTimeInForce belowTimeInForceValue = getBelowTimeInForce();
        if (belowTimeInForceValue != null) {
            String belowTimeInForceValueAsString = belowTimeInForceValue.toString();
            valMap.put("belowTimeInForce", belowTimeInForceValueAsString);
        }
        Long belowStrategyIdValue = getBelowStrategyId();
        if (belowStrategyIdValue != null) {
            String belowStrategyIdValueAsString = belowStrategyIdValue.toString();
            valMap.put("belowStrategyId", belowStrategyIdValueAsString);
        }
        Integer belowStrategyTypeValue = getBelowStrategyType();
        if (belowStrategyTypeValue != null) {
            String belowStrategyTypeValueAsString = belowStrategyTypeValue.toString();
            valMap.put("belowStrategyType", belowStrategyTypeValueAsString);
        }
        NewOrderRespType newOrderRespTypeValue = getNewOrderRespType();
        if (newOrderRespTypeValue != null) {
            String newOrderRespTypeValueAsString = newOrderRespTypeValue.toString();
            valMap.put("newOrderRespType", newOrderRespTypeValueAsString);
        }
        SelfTradePreventionMode selfTradePreventionModeValue = getSelfTradePreventionMode();
        if (selfTradePreventionModeValue != null) {
            String selfTradePreventionModeValueAsString = selfTradePreventionModeValue.toString();
            valMap.put("selfTradePreventionMode", selfTradePreventionModeValueAsString);
        }
        Long recvWindowValue = getRecvWindow();
        if (recvWindowValue != null) {
            String recvWindowValueAsString = recvWindowValue.toString();
            valMap.put("recvWindow", recvWindowValueAsString);
        }

        valMap.put("timestamp", getTimestamp());
        return asciiEncode(
                valMap.keySet().stream()
                        .map(key -> key + "=" + valMap.get(key))
                        .collect(Collectors.joining("&")));
    }

    public Map<String, Object> toMap() {
        Map<String, Object> valMap = new TreeMap<String, Object>();
        valMap.put("apiKey", getApiKey());
        Object symbolValue = getSymbol();
        if (symbolValue != null) {
            valMap.put("symbol", symbolValue);
        }
        Object listClientOrderIdValue = getListClientOrderId();
        if (listClientOrderIdValue != null) {
            valMap.put("listClientOrderId", listClientOrderIdValue);
        }
        Object sideValue = getSide();
        if (sideValue != null) {
            valMap.put("side", sideValue);
        }
        Object quantityValue = getQuantity();
        if (quantityValue != null) {
            valMap.put("quantity", quantityValue);
        }
        Object aboveTypeValue = getAboveType();
        if (aboveTypeValue != null) {
            valMap.put("aboveType", aboveTypeValue);
        }
        Object aboveClientOrderIdValue = getAboveClientOrderId();
        if (aboveClientOrderIdValue != null) {
            valMap.put("aboveClientOrderId", aboveClientOrderIdValue);
        }
        Object aboveIcebergQtyValue = getAboveIcebergQty();
        if (aboveIcebergQtyValue != null) {
            valMap.put("aboveIcebergQty", aboveIcebergQtyValue);
        }
        Object abovePriceValue = getAbovePrice();
        if (abovePriceValue != null) {
            valMap.put("abovePrice", abovePriceValue);
        }
        Object aboveStopPriceValue = getAboveStopPrice();
        if (aboveStopPriceValue != null) {
            valMap.put("aboveStopPrice", aboveStopPriceValue);
        }
        Object aboveTrailingDeltaValue = getAboveTrailingDelta();
        if (aboveTrailingDeltaValue != null) {
            valMap.put("aboveTrailingDelta", aboveTrailingDeltaValue);
        }
        Object aboveTimeInForceValue = getAboveTimeInForce();
        if (aboveTimeInForceValue != null) {
            valMap.put("aboveTimeInForce", aboveTimeInForceValue);
        }
        Object aboveStrategyIdValue = getAboveStrategyId();
        if (aboveStrategyIdValue != null) {
            valMap.put("aboveStrategyId", aboveStrategyIdValue);
        }
        Object aboveStrategyTypeValue = getAboveStrategyType();
        if (aboveStrategyTypeValue != null) {
            valMap.put("aboveStrategyType", aboveStrategyTypeValue);
        }
        Object belowTypeValue = getBelowType();
        if (belowTypeValue != null) {
            valMap.put("belowType", belowTypeValue);
        }
        Object belowClientOrderIdValue = getBelowClientOrderId();
        if (belowClientOrderIdValue != null) {
            valMap.put("belowClientOrderId", belowClientOrderIdValue);
        }
        Object belowIcebergQtyValue = getBelowIcebergQty();
        if (belowIcebergQtyValue != null) {
            valMap.put("belowIcebergQty", belowIcebergQtyValue);
        }
        Object belowPriceValue = getBelowPrice();
        if (belowPriceValue != null) {
            valMap.put("belowPrice", belowPriceValue);
        }
        Object belowStopPriceValue = getBelowStopPrice();
        if (belowStopPriceValue != null) {
            valMap.put("belowStopPrice", belowStopPriceValue);
        }
        Object belowTrailingDeltaValue = getBelowTrailingDelta();
        if (belowTrailingDeltaValue != null) {
            valMap.put("belowTrailingDelta", belowTrailingDeltaValue);
        }
        Object belowTimeInForceValue = getBelowTimeInForce();
        if (belowTimeInForceValue != null) {
            valMap.put("belowTimeInForce", belowTimeInForceValue);
        }
        Object belowStrategyIdValue = getBelowStrategyId();
        if (belowStrategyIdValue != null) {
            valMap.put("belowStrategyId", belowStrategyIdValue);
        }
        Object belowStrategyTypeValue = getBelowStrategyType();
        if (belowStrategyTypeValue != null) {
            valMap.put("belowStrategyType", belowStrategyTypeValue);
        }
        Object newOrderRespTypeValue = getNewOrderRespType();
        if (newOrderRespTypeValue != null) {
            valMap.put("newOrderRespType", newOrderRespTypeValue);
        }
        Object selfTradePreventionModeValue = getSelfTradePreventionMode();
        if (selfTradePreventionModeValue != null) {
            valMap.put("selfTradePreventionMode", selfTradePreventionModeValue);
        }
        Object recvWindowValue = getRecvWindow();
        if (recvWindowValue != null) {
            valMap.put("recvWindow", recvWindowValue);
        }

        valMap.put("timestamp", getTimestamp());
        return valMap;
    }

    public static String asciiEncode(String s) {
        return new String(s.getBytes(), StandardCharsets.US_ASCII);
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("symbol");
        openapiFields.add("listClientOrderId");
        openapiFields.add("side");
        openapiFields.add("quantity");
        openapiFields.add("aboveType");
        openapiFields.add("aboveClientOrderId");
        openapiFields.add("aboveIcebergQty");
        openapiFields.add("abovePrice");
        openapiFields.add("aboveStopPrice");
        openapiFields.add("aboveTrailingDelta");
        openapiFields.add("aboveTimeInForce");
        openapiFields.add("aboveStrategyId");
        openapiFields.add("aboveStrategyType");
        openapiFields.add("belowType");
        openapiFields.add("belowClientOrderId");
        openapiFields.add("belowIcebergQty");
        openapiFields.add("belowPrice");
        openapiFields.add("belowStopPrice");
        openapiFields.add("belowTrailingDelta");
        openapiFields.add("belowTimeInForce");
        openapiFields.add("belowStrategyId");
        openapiFields.add("belowStrategyType");
        openapiFields.add("newOrderRespType");
        openapiFields.add("selfTradePreventionMode");
        openapiFields.add("recvWindow");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("symbol");
        openapiRequiredFields.add("side");
        openapiRequiredFields.add("quantity");
        openapiRequiredFields.add("aboveType");
        openapiRequiredFields.add("belowType");
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to OrderListPlaceOcoRequest
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!OrderListPlaceOcoRequest.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in OrderListPlaceOcoRequest is not found"
                                        + " in the empty JSON string",
                                OrderListPlaceOcoRequest.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!OrderListPlaceOcoRequest.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                        + " `OrderListPlaceOcoRequest` properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }

        // check to make sure all required properties/fields are present in the JSON string
        for (String requiredField : OrderListPlaceOcoRequest.openapiRequiredFields) {
            if (jsonElement.getAsJsonObject().get(requiredField) == null) {
                throw new IllegalArgumentException(
                        String.format(
                                "The required field `%s` is not found in the JSON string: %s",
                                requiredField, jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if (!jsonObj.get("symbol").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `symbol` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("symbol").toString()));
        }
        if ((jsonObj.get("listClientOrderId") != null
                        && !jsonObj.get("listClientOrderId").isJsonNull())
                && !jsonObj.get("listClientOrderId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `listClientOrderId` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("listClientOrderId").toString()));
        }
        // validate the required field `side`
        Side.validateJsonElement(jsonObj.get("side"));
        // validate the required field `aboveType`
        AboveType.validateJsonElement(jsonObj.get("aboveType"));
        if ((jsonObj.get("aboveClientOrderId") != null
                        && !jsonObj.get("aboveClientOrderId").isJsonNull())
                && !jsonObj.get("aboveClientOrderId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `aboveClientOrderId` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("aboveClientOrderId").toString()));
        }
        // validate the required field `belowType`
        BelowType.validateJsonElement(jsonObj.get("belowType"));
        if ((jsonObj.get("belowClientOrderId") != null
                        && !jsonObj.get("belowClientOrderId").isJsonNull())
                && !jsonObj.get("belowClientOrderId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `belowClientOrderId` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("belowClientOrderId").toString()));
        }
        // validate the optional field `belowTimeInForce`
        if (jsonObj.get("belowTimeInForce") != null
                && !jsonObj.get("belowTimeInForce").isJsonNull()) {
            BelowTimeInForce.validateJsonElement(jsonObj.get("belowTimeInForce"));
        }
        // validate the optional field `newOrderRespType`
        if (jsonObj.get("newOrderRespType") != null
                && !jsonObj.get("newOrderRespType").isJsonNull()) {
            NewOrderRespType.validateJsonElement(jsonObj.get("newOrderRespType"));
        }
        // validate the optional field `selfTradePreventionMode`
        if (jsonObj.get("selfTradePreventionMode") != null
                && !jsonObj.get("selfTradePreventionMode").isJsonNull()) {
            SelfTradePreventionMode.validateJsonElement(jsonObj.get("selfTradePreventionMode"));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!OrderListPlaceOcoRequest.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'OrderListPlaceOcoRequest' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<OrderListPlaceOcoRequest> thisAdapter =
                    gson.getDelegateAdapter(this, TypeToken.get(OrderListPlaceOcoRequest.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<OrderListPlaceOcoRequest>() {
                        @Override
                        public void write(JsonWriter out, OrderListPlaceOcoRequest value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public OrderListPlaceOcoRequest read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of OrderListPlaceOcoRequest given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of OrderListPlaceOcoRequest
     * @throws IOException if the JSON string is invalid with respect to OrderListPlaceOcoRequest
     */
    public static OrderListPlaceOcoRequest fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, OrderListPlaceOcoRequest.class);
    }

    /**
     * Convert an instance of OrderListPlaceOcoRequest to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
