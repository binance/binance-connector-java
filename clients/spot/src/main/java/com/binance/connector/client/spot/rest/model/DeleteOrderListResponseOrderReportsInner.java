/*
 * Binance Spot REST API
 * OpenAPI Specifications for the Binance Spot REST API  API documents:   - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)   - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.spot.rest.model;

import com.binance.connector.client.spot.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** DeleteOrderListResponseOrderReportsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class DeleteOrderListResponseOrderReportsInner {
    public static final String SERIALIZED_NAME_SYMBOL = "symbol";

    @SerializedName(SERIALIZED_NAME_SYMBOL)
    @jakarta.annotation.Nullable
    private String symbol;

    public static final String SERIALIZED_NAME_ORIG_CLIENT_ORDER_ID = "origClientOrderId";

    @SerializedName(SERIALIZED_NAME_ORIG_CLIENT_ORDER_ID)
    @jakarta.annotation.Nullable
    private String origClientOrderId;

    public static final String SERIALIZED_NAME_ORDER_ID = "orderId";

    @SerializedName(SERIALIZED_NAME_ORDER_ID)
    @jakarta.annotation.Nullable
    private Long orderId;

    public static final String SERIALIZED_NAME_ORDER_LIST_ID = "orderListId";

    @SerializedName(SERIALIZED_NAME_ORDER_LIST_ID)
    @jakarta.annotation.Nullable
    private Long orderListId;

    public static final String SERIALIZED_NAME_CLIENT_ORDER_ID = "clientOrderId";

    @SerializedName(SERIALIZED_NAME_CLIENT_ORDER_ID)
    @jakarta.annotation.Nullable
    private String clientOrderId;

    public static final String SERIALIZED_NAME_TRANSACT_TIME = "transactTime";

    @SerializedName(SERIALIZED_NAME_TRANSACT_TIME)
    @jakarta.annotation.Nullable
    private Long transactTime;

    public static final String SERIALIZED_NAME_PRICE = "price";

    @SerializedName(SERIALIZED_NAME_PRICE)
    @jakarta.annotation.Nullable
    private String price;

    public static final String SERIALIZED_NAME_ORIG_QTY = "origQty";

    @SerializedName(SERIALIZED_NAME_ORIG_QTY)
    @jakarta.annotation.Nullable
    private String origQty;

    public static final String SERIALIZED_NAME_EXECUTED_QTY = "executedQty";

    @SerializedName(SERIALIZED_NAME_EXECUTED_QTY)
    @jakarta.annotation.Nullable
    private String executedQty;

    public static final String SERIALIZED_NAME_ORIG_QUOTE_ORDER_QTY = "origQuoteOrderQty";

    @SerializedName(SERIALIZED_NAME_ORIG_QUOTE_ORDER_QTY)
    @jakarta.annotation.Nullable
    private String origQuoteOrderQty;

    public static final String SERIALIZED_NAME_CUMMULATIVE_QUOTE_QTY = "cummulativeQuoteQty";

    @SerializedName(SERIALIZED_NAME_CUMMULATIVE_QUOTE_QTY)
    @jakarta.annotation.Nullable
    private String cummulativeQuoteQty;

    public static final String SERIALIZED_NAME_STATUS = "status";

    @SerializedName(SERIALIZED_NAME_STATUS)
    @jakarta.annotation.Nullable
    private String status;

    public static final String SERIALIZED_NAME_TIME_IN_FORCE = "timeInForce";

    @SerializedName(SERIALIZED_NAME_TIME_IN_FORCE)
    @jakarta.annotation.Nullable
    private String timeInForce;

    public static final String SERIALIZED_NAME_TYPE = "type";

    @SerializedName(SERIALIZED_NAME_TYPE)
    @jakarta.annotation.Nullable
    private String type;

    public static final String SERIALIZED_NAME_SIDE = "side";

    @SerializedName(SERIALIZED_NAME_SIDE)
    @jakarta.annotation.Nullable
    private String side;

    public static final String SERIALIZED_NAME_STOP_PRICE = "stopPrice";

    @SerializedName(SERIALIZED_NAME_STOP_PRICE)
    @jakarta.annotation.Nullable
    private String stopPrice;

    public static final String SERIALIZED_NAME_SELF_TRADE_PREVENTION_MODE =
            "selfTradePreventionMode";

    @SerializedName(SERIALIZED_NAME_SELF_TRADE_PREVENTION_MODE)
    @jakarta.annotation.Nullable
    private String selfTradePreventionMode;

    public DeleteOrderListResponseOrderReportsInner() {}

    public DeleteOrderListResponseOrderReportsInner symbol(
            @jakarta.annotation.Nullable String symbol) {
        this.symbol = symbol;
        return this;
    }

    /**
     * Get symbol
     *
     * @return symbol
     */
    @jakarta.annotation.Nullable
    public String getSymbol() {
        return symbol;
    }

    public void setSymbol(@jakarta.annotation.Nullable String symbol) {
        this.symbol = symbol;
    }

    public DeleteOrderListResponseOrderReportsInner origClientOrderId(
            @jakarta.annotation.Nullable String origClientOrderId) {
        this.origClientOrderId = origClientOrderId;
        return this;
    }

    /**
     * Get origClientOrderId
     *
     * @return origClientOrderId
     */
    @jakarta.annotation.Nullable
    public String getOrigClientOrderId() {
        return origClientOrderId;
    }

    public void setOrigClientOrderId(@jakarta.annotation.Nullable String origClientOrderId) {
        this.origClientOrderId = origClientOrderId;
    }

    public DeleteOrderListResponseOrderReportsInner orderId(
            @jakarta.annotation.Nullable Long orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * Get orderId
     *
     * @return orderId
     */
    @jakarta.annotation.Nullable
    public Long getOrderId() {
        return orderId;
    }

    public void setOrderId(@jakarta.annotation.Nullable Long orderId) {
        this.orderId = orderId;
    }

    public DeleteOrderListResponseOrderReportsInner orderListId(
            @jakarta.annotation.Nullable Long orderListId) {
        this.orderListId = orderListId;
        return this;
    }

    /**
     * Get orderListId
     *
     * @return orderListId
     */
    @jakarta.annotation.Nullable
    public Long getOrderListId() {
        return orderListId;
    }

    public void setOrderListId(@jakarta.annotation.Nullable Long orderListId) {
        this.orderListId = orderListId;
    }

    public DeleteOrderListResponseOrderReportsInner clientOrderId(
            @jakarta.annotation.Nullable String clientOrderId) {
        this.clientOrderId = clientOrderId;
        return this;
    }

    /**
     * Get clientOrderId
     *
     * @return clientOrderId
     */
    @jakarta.annotation.Nullable
    public String getClientOrderId() {
        return clientOrderId;
    }

    public void setClientOrderId(@jakarta.annotation.Nullable String clientOrderId) {
        this.clientOrderId = clientOrderId;
    }

    public DeleteOrderListResponseOrderReportsInner transactTime(
            @jakarta.annotation.Nullable Long transactTime) {
        this.transactTime = transactTime;
        return this;
    }

    /**
     * Get transactTime
     *
     * @return transactTime
     */
    @jakarta.annotation.Nullable
    public Long getTransactTime() {
        return transactTime;
    }

    public void setTransactTime(@jakarta.annotation.Nullable Long transactTime) {
        this.transactTime = transactTime;
    }

    public DeleteOrderListResponseOrderReportsInner price(
            @jakarta.annotation.Nullable String price) {
        this.price = price;
        return this;
    }

    /**
     * Get price
     *
     * @return price
     */
    @jakarta.annotation.Nullable
    public String getPrice() {
        return price;
    }

    public void setPrice(@jakarta.annotation.Nullable String price) {
        this.price = price;
    }

    public DeleteOrderListResponseOrderReportsInner origQty(
            @jakarta.annotation.Nullable String origQty) {
        this.origQty = origQty;
        return this;
    }

    /**
     * Get origQty
     *
     * @return origQty
     */
    @jakarta.annotation.Nullable
    public String getOrigQty() {
        return origQty;
    }

    public void setOrigQty(@jakarta.annotation.Nullable String origQty) {
        this.origQty = origQty;
    }

    public DeleteOrderListResponseOrderReportsInner executedQty(
            @jakarta.annotation.Nullable String executedQty) {
        this.executedQty = executedQty;
        return this;
    }

    /**
     * Get executedQty
     *
     * @return executedQty
     */
    @jakarta.annotation.Nullable
    public String getExecutedQty() {
        return executedQty;
    }

    public void setExecutedQty(@jakarta.annotation.Nullable String executedQty) {
        this.executedQty = executedQty;
    }

    public DeleteOrderListResponseOrderReportsInner origQuoteOrderQty(
            @jakarta.annotation.Nullable String origQuoteOrderQty) {
        this.origQuoteOrderQty = origQuoteOrderQty;
        return this;
    }

    /**
     * Get origQuoteOrderQty
     *
     * @return origQuoteOrderQty
     */
    @jakarta.annotation.Nullable
    public String getOrigQuoteOrderQty() {
        return origQuoteOrderQty;
    }

    public void setOrigQuoteOrderQty(@jakarta.annotation.Nullable String origQuoteOrderQty) {
        this.origQuoteOrderQty = origQuoteOrderQty;
    }

    public DeleteOrderListResponseOrderReportsInner cummulativeQuoteQty(
            @jakarta.annotation.Nullable String cummulativeQuoteQty) {
        this.cummulativeQuoteQty = cummulativeQuoteQty;
        return this;
    }

    /**
     * Get cummulativeQuoteQty
     *
     * @return cummulativeQuoteQty
     */
    @jakarta.annotation.Nullable
    public String getCummulativeQuoteQty() {
        return cummulativeQuoteQty;
    }

    public void setCummulativeQuoteQty(@jakarta.annotation.Nullable String cummulativeQuoteQty) {
        this.cummulativeQuoteQty = cummulativeQuoteQty;
    }

    public DeleteOrderListResponseOrderReportsInner status(
            @jakarta.annotation.Nullable String status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nullable
    public String getStatus() {
        return status;
    }

    public void setStatus(@jakarta.annotation.Nullable String status) {
        this.status = status;
    }

    public DeleteOrderListResponseOrderReportsInner timeInForce(
            @jakarta.annotation.Nullable String timeInForce) {
        this.timeInForce = timeInForce;
        return this;
    }

    /**
     * Get timeInForce
     *
     * @return timeInForce
     */
    @jakarta.annotation.Nullable
    public String getTimeInForce() {
        return timeInForce;
    }

    public void setTimeInForce(@jakarta.annotation.Nullable String timeInForce) {
        this.timeInForce = timeInForce;
    }

    public DeleteOrderListResponseOrderReportsInner type(@jakarta.annotation.Nullable String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nullable
    public String getType() {
        return type;
    }

    public void setType(@jakarta.annotation.Nullable String type) {
        this.type = type;
    }

    public DeleteOrderListResponseOrderReportsInner side(@jakarta.annotation.Nullable String side) {
        this.side = side;
        return this;
    }

    /**
     * Get side
     *
     * @return side
     */
    @jakarta.annotation.Nullable
    public String getSide() {
        return side;
    }

    public void setSide(@jakarta.annotation.Nullable String side) {
        this.side = side;
    }

    public DeleteOrderListResponseOrderReportsInner stopPrice(
            @jakarta.annotation.Nullable String stopPrice) {
        this.stopPrice = stopPrice;
        return this;
    }

    /**
     * Get stopPrice
     *
     * @return stopPrice
     */
    @jakarta.annotation.Nullable
    public String getStopPrice() {
        return stopPrice;
    }

    public void setStopPrice(@jakarta.annotation.Nullable String stopPrice) {
        this.stopPrice = stopPrice;
    }

    public DeleteOrderListResponseOrderReportsInner selfTradePreventionMode(
            @jakarta.annotation.Nullable String selfTradePreventionMode) {
        this.selfTradePreventionMode = selfTradePreventionMode;
        return this;
    }

    /**
     * Get selfTradePreventionMode
     *
     * @return selfTradePreventionMode
     */
    @jakarta.annotation.Nullable
    public String getSelfTradePreventionMode() {
        return selfTradePreventionMode;
    }

    public void setSelfTradePreventionMode(
            @jakarta.annotation.Nullable String selfTradePreventionMode) {
        this.selfTradePreventionMode = selfTradePreventionMode;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteOrderListResponseOrderReportsInner deleteOrderListResponseOrderReportsInner =
                (DeleteOrderListResponseOrderReportsInner) o;
        return Objects.equals(this.symbol, deleteOrderListResponseOrderReportsInner.symbol)
                && Objects.equals(
                        this.origClientOrderId,
                        deleteOrderListResponseOrderReportsInner.origClientOrderId)
                && Objects.equals(this.orderId, deleteOrderListResponseOrderReportsInner.orderId)
                && Objects.equals(
                        this.orderListId, deleteOrderListResponseOrderReportsInner.orderListId)
                && Objects.equals(
                        this.clientOrderId, deleteOrderListResponseOrderReportsInner.clientOrderId)
                && Objects.equals(
                        this.transactTime, deleteOrderListResponseOrderReportsInner.transactTime)
                && Objects.equals(this.price, deleteOrderListResponseOrderReportsInner.price)
                && Objects.equals(this.origQty, deleteOrderListResponseOrderReportsInner.origQty)
                && Objects.equals(
                        this.executedQty, deleteOrderListResponseOrderReportsInner.executedQty)
                && Objects.equals(
                        this.origQuoteOrderQty,
                        deleteOrderListResponseOrderReportsInner.origQuoteOrderQty)
                && Objects.equals(
                        this.cummulativeQuoteQty,
                        deleteOrderListResponseOrderReportsInner.cummulativeQuoteQty)
                && Objects.equals(this.status, deleteOrderListResponseOrderReportsInner.status)
                && Objects.equals(
                        this.timeInForce, deleteOrderListResponseOrderReportsInner.timeInForce)
                && Objects.equals(this.type, deleteOrderListResponseOrderReportsInner.type)
                && Objects.equals(this.side, deleteOrderListResponseOrderReportsInner.side)
                && Objects.equals(
                        this.stopPrice, deleteOrderListResponseOrderReportsInner.stopPrice)
                && Objects.equals(
                        this.selfTradePreventionMode,
                        deleteOrderListResponseOrderReportsInner.selfTradePreventionMode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                symbol,
                origClientOrderId,
                orderId,
                orderListId,
                clientOrderId,
                transactTime,
                price,
                origQty,
                executedQty,
                origQuoteOrderQty,
                cummulativeQuoteQty,
                status,
                timeInForce,
                type,
                side,
                stopPrice,
                selfTradePreventionMode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeleteOrderListResponseOrderReportsInner {\n");
        sb.append("		symbol: ").append(toIndentedString(symbol)).append("\n");
        sb.append("		origClientOrderId: ").append(toIndentedString(origClientOrderId)).append("\n");
        sb.append("		orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("		orderListId: ").append(toIndentedString(orderListId)).append("\n");
        sb.append("		clientOrderId: ").append(toIndentedString(clientOrderId)).append("\n");
        sb.append("		transactTime: ").append(toIndentedString(transactTime)).append("\n");
        sb.append("		price: ").append(toIndentedString(price)).append("\n");
        sb.append("		origQty: ").append(toIndentedString(origQty)).append("\n");
        sb.append("		executedQty: ").append(toIndentedString(executedQty)).append("\n");
        sb.append("		origQuoteOrderQty: ").append(toIndentedString(origQuoteOrderQty)).append("\n");
        sb.append("		cummulativeQuoteQty: ")
                .append(toIndentedString(cummulativeQuoteQty))
                .append("\n");
        sb.append("		status: ").append(toIndentedString(status)).append("\n");
        sb.append("		timeInForce: ").append(toIndentedString(timeInForce)).append("\n");
        sb.append("		type: ").append(toIndentedString(type)).append("\n");
        sb.append("		side: ").append(toIndentedString(side)).append("\n");
        sb.append("		stopPrice: ").append(toIndentedString(stopPrice)).append("\n");
        sb.append("		selfTradePreventionMode: ")
                .append(toIndentedString(selfTradePreventionMode))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object symbolValue = getSymbol();
        String symbolValueAsString = "";
        symbolValueAsString = symbolValue.toString();
        sb.append("symbol=").append(urlEncode(symbolValueAsString)).append("");
        Object origClientOrderIdValue = getOrigClientOrderId();
        String origClientOrderIdValueAsString = "";
        origClientOrderIdValueAsString = origClientOrderIdValue.toString();
        sb.append("origClientOrderId=")
                .append(urlEncode(origClientOrderIdValueAsString))
                .append("");
        Object orderIdValue = getOrderId();
        String orderIdValueAsString = "";
        orderIdValueAsString = orderIdValue.toString();
        sb.append("orderId=").append(urlEncode(orderIdValueAsString)).append("");
        Object orderListIdValue = getOrderListId();
        String orderListIdValueAsString = "";
        orderListIdValueAsString = orderListIdValue.toString();
        sb.append("orderListId=").append(urlEncode(orderListIdValueAsString)).append("");
        Object clientOrderIdValue = getClientOrderId();
        String clientOrderIdValueAsString = "";
        clientOrderIdValueAsString = clientOrderIdValue.toString();
        sb.append("clientOrderId=").append(urlEncode(clientOrderIdValueAsString)).append("");
        Object transactTimeValue = getTransactTime();
        String transactTimeValueAsString = "";
        transactTimeValueAsString = transactTimeValue.toString();
        sb.append("transactTime=").append(urlEncode(transactTimeValueAsString)).append("");
        Object priceValue = getPrice();
        String priceValueAsString = "";
        priceValueAsString = priceValue.toString();
        sb.append("price=").append(urlEncode(priceValueAsString)).append("");
        Object origQtyValue = getOrigQty();
        String origQtyValueAsString = "";
        origQtyValueAsString = origQtyValue.toString();
        sb.append("origQty=").append(urlEncode(origQtyValueAsString)).append("");
        Object executedQtyValue = getExecutedQty();
        String executedQtyValueAsString = "";
        executedQtyValueAsString = executedQtyValue.toString();
        sb.append("executedQty=").append(urlEncode(executedQtyValueAsString)).append("");
        Object origQuoteOrderQtyValue = getOrigQuoteOrderQty();
        String origQuoteOrderQtyValueAsString = "";
        origQuoteOrderQtyValueAsString = origQuoteOrderQtyValue.toString();
        sb.append("origQuoteOrderQty=")
                .append(urlEncode(origQuoteOrderQtyValueAsString))
                .append("");
        Object cummulativeQuoteQtyValue = getCummulativeQuoteQty();
        String cummulativeQuoteQtyValueAsString = "";
        cummulativeQuoteQtyValueAsString = cummulativeQuoteQtyValue.toString();
        sb.append("cummulativeQuoteQty=")
                .append(urlEncode(cummulativeQuoteQtyValueAsString))
                .append("");
        Object statusValue = getStatus();
        String statusValueAsString = "";
        statusValueAsString = statusValue.toString();
        sb.append("status=").append(urlEncode(statusValueAsString)).append("");
        Object timeInForceValue = getTimeInForce();
        String timeInForceValueAsString = "";
        timeInForceValueAsString = timeInForceValue.toString();
        sb.append("timeInForce=").append(urlEncode(timeInForceValueAsString)).append("");
        Object typeValue = getType();
        String typeValueAsString = "";
        typeValueAsString = typeValue.toString();
        sb.append("type=").append(urlEncode(typeValueAsString)).append("");
        Object sideValue = getSide();
        String sideValueAsString = "";
        sideValueAsString = sideValue.toString();
        sb.append("side=").append(urlEncode(sideValueAsString)).append("");
        Object stopPriceValue = getStopPrice();
        String stopPriceValueAsString = "";
        stopPriceValueAsString = stopPriceValue.toString();
        sb.append("stopPrice=").append(urlEncode(stopPriceValueAsString)).append("");
        Object selfTradePreventionModeValue = getSelfTradePreventionMode();
        String selfTradePreventionModeValueAsString = "";
        selfTradePreventionModeValueAsString = selfTradePreventionModeValue.toString();
        sb.append("selfTradePreventionMode=")
                .append(urlEncode(selfTradePreventionModeValueAsString))
                .append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("symbol");
        openapiFields.add("origClientOrderId");
        openapiFields.add("orderId");
        openapiFields.add("orderListId");
        openapiFields.add("clientOrderId");
        openapiFields.add("transactTime");
        openapiFields.add("price");
        openapiFields.add("origQty");
        openapiFields.add("executedQty");
        openapiFields.add("origQuoteOrderQty");
        openapiFields.add("cummulativeQuoteQty");
        openapiFields.add("status");
        openapiFields.add("timeInForce");
        openapiFields.add("type");
        openapiFields.add("side");
        openapiFields.add("stopPrice");
        openapiFields.add("selfTradePreventionMode");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     DeleteOrderListResponseOrderReportsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!DeleteOrderListResponseOrderReportsInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " DeleteOrderListResponseOrderReportsInner is not found in"
                                    + " the empty JSON string",
                                DeleteOrderListResponseOrderReportsInner.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!DeleteOrderListResponseOrderReportsInner.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                        + " `DeleteOrderListResponseOrderReportsInner` properties."
                                        + " JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull())
                && !jsonObj.get("symbol").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `symbol` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("symbol").toString()));
        }
        if ((jsonObj.get("origClientOrderId") != null
                        && !jsonObj.get("origClientOrderId").isJsonNull())
                && !jsonObj.get("origClientOrderId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `origClientOrderId` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("origClientOrderId").toString()));
        }
        if ((jsonObj.get("clientOrderId") != null && !jsonObj.get("clientOrderId").isJsonNull())
                && !jsonObj.get("clientOrderId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `clientOrderId` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("clientOrderId").toString()));
        }
        if ((jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull())
                && !jsonObj.get("price").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `price` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("price").toString()));
        }
        if ((jsonObj.get("origQty") != null && !jsonObj.get("origQty").isJsonNull())
                && !jsonObj.get("origQty").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `origQty` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("origQty").toString()));
        }
        if ((jsonObj.get("executedQty") != null && !jsonObj.get("executedQty").isJsonNull())
                && !jsonObj.get("executedQty").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `executedQty` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("executedQty").toString()));
        }
        if ((jsonObj.get("origQuoteOrderQty") != null
                        && !jsonObj.get("origQuoteOrderQty").isJsonNull())
                && !jsonObj.get("origQuoteOrderQty").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `origQuoteOrderQty` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("origQuoteOrderQty").toString()));
        }
        if ((jsonObj.get("cummulativeQuoteQty") != null
                        && !jsonObj.get("cummulativeQuoteQty").isJsonNull())
                && !jsonObj.get("cummulativeQuoteQty").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `cummulativeQuoteQty` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("cummulativeQuoteQty").toString()));
        }
        if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull())
                && !jsonObj.get("status").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `status` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("status").toString()));
        }
        if ((jsonObj.get("timeInForce") != null && !jsonObj.get("timeInForce").isJsonNull())
                && !jsonObj.get("timeInForce").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `timeInForce` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("timeInForce").toString()));
        }
        if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull())
                && !jsonObj.get("type").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `type` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("type").toString()));
        }
        if ((jsonObj.get("side") != null && !jsonObj.get("side").isJsonNull())
                && !jsonObj.get("side").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `side` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("side").toString()));
        }
        if ((jsonObj.get("stopPrice") != null && !jsonObj.get("stopPrice").isJsonNull())
                && !jsonObj.get("stopPrice").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `stopPrice` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("stopPrice").toString()));
        }
        if ((jsonObj.get("selfTradePreventionMode") != null
                        && !jsonObj.get("selfTradePreventionMode").isJsonNull())
                && !jsonObj.get("selfTradePreventionMode").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `selfTradePreventionMode` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("selfTradePreventionMode").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!DeleteOrderListResponseOrderReportsInner.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'DeleteOrderListResponseOrderReportsInner' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<DeleteOrderListResponseOrderReportsInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(DeleteOrderListResponseOrderReportsInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<DeleteOrderListResponseOrderReportsInner>() {
                        @Override
                        public void write(
                                JsonWriter out, DeleteOrderListResponseOrderReportsInner value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public DeleteOrderListResponseOrderReportsInner read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of DeleteOrderListResponseOrderReportsInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of DeleteOrderListResponseOrderReportsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     DeleteOrderListResponseOrderReportsInner
     */
    public static DeleteOrderListResponseOrderReportsInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson().fromJson(jsonString, DeleteOrderListResponseOrderReportsInner.class);
    }

    /**
     * Convert an instance of DeleteOrderListResponseOrderReportsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
