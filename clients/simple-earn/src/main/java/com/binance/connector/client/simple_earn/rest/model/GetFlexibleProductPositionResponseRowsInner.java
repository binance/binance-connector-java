/*
 * Binance Simple Earn REST API
 * OpenAPI Specification for the Binance Simple Earn REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.simple_earn.rest.model;

import com.binance.connector.client.simple_earn.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetFlexibleProductPositionResponseRowsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetFlexibleProductPositionResponseRowsInner {
    public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "totalAmount";

    @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
    @jakarta.annotation.Nullable
    private String totalAmount;

    public static final String SERIALIZED_NAME_TIER_ANNUAL_PERCENTAGE_RATE =
            "tierAnnualPercentageRate";

    @SerializedName(SERIALIZED_NAME_TIER_ANNUAL_PERCENTAGE_RATE)
    @jakarta.annotation.Nullable
    private GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
            tierAnnualPercentageRate;

    public static final String SERIALIZED_NAME_LATEST_ANNUAL_PERCENTAGE_RATE =
            "latestAnnualPercentageRate";

    @SerializedName(SERIALIZED_NAME_LATEST_ANNUAL_PERCENTAGE_RATE)
    @jakarta.annotation.Nullable
    private String latestAnnualPercentageRate;

    public static final String SERIALIZED_NAME_YESTERDAY_AIRDROP_PERCENTAGE_RATE =
            "yesterdayAirdropPercentageRate";

    @SerializedName(SERIALIZED_NAME_YESTERDAY_AIRDROP_PERCENTAGE_RATE)
    @jakarta.annotation.Nullable
    private String yesterdayAirdropPercentageRate;

    public static final String SERIALIZED_NAME_ASSET = "asset";

    @SerializedName(SERIALIZED_NAME_ASSET)
    @jakarta.annotation.Nullable
    private String asset;

    public static final String SERIALIZED_NAME_AIR_DROP_ASSET = "airDropAsset";

    @SerializedName(SERIALIZED_NAME_AIR_DROP_ASSET)
    @jakarta.annotation.Nullable
    private String airDropAsset;

    public static final String SERIALIZED_NAME_CAN_REDEEM = "canRedeem";

    @SerializedName(SERIALIZED_NAME_CAN_REDEEM)
    @jakarta.annotation.Nullable
    private Boolean canRedeem;

    public static final String SERIALIZED_NAME_COLLATERAL_AMOUNT = "collateralAmount";

    @SerializedName(SERIALIZED_NAME_COLLATERAL_AMOUNT)
    @jakarta.annotation.Nullable
    private String collateralAmount;

    public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";

    @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
    @jakarta.annotation.Nullable
    private String productId;

    public static final String SERIALIZED_NAME_YESTERDAY_REAL_TIME_REWARDS =
            "yesterdayRealTimeRewards";

    @SerializedName(SERIALIZED_NAME_YESTERDAY_REAL_TIME_REWARDS)
    @jakarta.annotation.Nullable
    private String yesterdayRealTimeRewards;

    public static final String SERIALIZED_NAME_CUMULATIVE_BONUS_REWARDS = "cumulativeBonusRewards";

    @SerializedName(SERIALIZED_NAME_CUMULATIVE_BONUS_REWARDS)
    @jakarta.annotation.Nullable
    private String cumulativeBonusRewards;

    public static final String SERIALIZED_NAME_CUMULATIVE_REAL_TIME_REWARDS =
            "cumulativeRealTimeRewards";

    @SerializedName(SERIALIZED_NAME_CUMULATIVE_REAL_TIME_REWARDS)
    @jakarta.annotation.Nullable
    private String cumulativeRealTimeRewards;

    public static final String SERIALIZED_NAME_CUMULATIVE_TOTAL_REWARDS = "cumulativeTotalRewards";

    @SerializedName(SERIALIZED_NAME_CUMULATIVE_TOTAL_REWARDS)
    @jakarta.annotation.Nullable
    private String cumulativeTotalRewards;

    public static final String SERIALIZED_NAME_AUTO_SUBSCRIBE = "autoSubscribe";

    @SerializedName(SERIALIZED_NAME_AUTO_SUBSCRIBE)
    @jakarta.annotation.Nullable
    private Boolean autoSubscribe;

    public GetFlexibleProductPositionResponseRowsInner() {}

    public GetFlexibleProductPositionResponseRowsInner totalAmount(
            @jakarta.annotation.Nullable String totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }

    /**
     * Get totalAmount
     *
     * @return totalAmount
     */
    @jakarta.annotation.Nullable
    public String getTotalAmount() {
        return totalAmount;
    }

    public void setTotalAmount(@jakarta.annotation.Nullable String totalAmount) {
        this.totalAmount = totalAmount;
    }

    public GetFlexibleProductPositionResponseRowsInner tierAnnualPercentageRate(
            @jakarta.annotation.Nullable
                    GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                            tierAnnualPercentageRate) {
        this.tierAnnualPercentageRate = tierAnnualPercentageRate;
        return this;
    }

    /**
     * Get tierAnnualPercentageRate
     *
     * @return tierAnnualPercentageRate
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
            getTierAnnualPercentageRate() {
        return tierAnnualPercentageRate;
    }

    public void setTierAnnualPercentageRate(
            @jakarta.annotation.Nullable
                    GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                            tierAnnualPercentageRate) {
        this.tierAnnualPercentageRate = tierAnnualPercentageRate;
    }

    public GetFlexibleProductPositionResponseRowsInner latestAnnualPercentageRate(
            @jakarta.annotation.Nullable String latestAnnualPercentageRate) {
        this.latestAnnualPercentageRate = latestAnnualPercentageRate;
        return this;
    }

    /**
     * Get latestAnnualPercentageRate
     *
     * @return latestAnnualPercentageRate
     */
    @jakarta.annotation.Nullable
    public String getLatestAnnualPercentageRate() {
        return latestAnnualPercentageRate;
    }

    public void setLatestAnnualPercentageRate(
            @jakarta.annotation.Nullable String latestAnnualPercentageRate) {
        this.latestAnnualPercentageRate = latestAnnualPercentageRate;
    }

    public GetFlexibleProductPositionResponseRowsInner yesterdayAirdropPercentageRate(
            @jakarta.annotation.Nullable String yesterdayAirdropPercentageRate) {
        this.yesterdayAirdropPercentageRate = yesterdayAirdropPercentageRate;
        return this;
    }

    /**
     * Get yesterdayAirdropPercentageRate
     *
     * @return yesterdayAirdropPercentageRate
     */
    @jakarta.annotation.Nullable
    public String getYesterdayAirdropPercentageRate() {
        return yesterdayAirdropPercentageRate;
    }

    public void setYesterdayAirdropPercentageRate(
            @jakarta.annotation.Nullable String yesterdayAirdropPercentageRate) {
        this.yesterdayAirdropPercentageRate = yesterdayAirdropPercentageRate;
    }

    public GetFlexibleProductPositionResponseRowsInner asset(
            @jakarta.annotation.Nullable String asset) {
        this.asset = asset;
        return this;
    }

    /**
     * Get asset
     *
     * @return asset
     */
    @jakarta.annotation.Nullable
    public String getAsset() {
        return asset;
    }

    public void setAsset(@jakarta.annotation.Nullable String asset) {
        this.asset = asset;
    }

    public GetFlexibleProductPositionResponseRowsInner airDropAsset(
            @jakarta.annotation.Nullable String airDropAsset) {
        this.airDropAsset = airDropAsset;
        return this;
    }

    /**
     * Get airDropAsset
     *
     * @return airDropAsset
     */
    @jakarta.annotation.Nullable
    public String getAirDropAsset() {
        return airDropAsset;
    }

    public void setAirDropAsset(@jakarta.annotation.Nullable String airDropAsset) {
        this.airDropAsset = airDropAsset;
    }

    public GetFlexibleProductPositionResponseRowsInner canRedeem(
            @jakarta.annotation.Nullable Boolean canRedeem) {
        this.canRedeem = canRedeem;
        return this;
    }

    /**
     * Get canRedeem
     *
     * @return canRedeem
     */
    @jakarta.annotation.Nullable
    public Boolean getCanRedeem() {
        return canRedeem;
    }

    public void setCanRedeem(@jakarta.annotation.Nullable Boolean canRedeem) {
        this.canRedeem = canRedeem;
    }

    public GetFlexibleProductPositionResponseRowsInner collateralAmount(
            @jakarta.annotation.Nullable String collateralAmount) {
        this.collateralAmount = collateralAmount;
        return this;
    }

    /**
     * Get collateralAmount
     *
     * @return collateralAmount
     */
    @jakarta.annotation.Nullable
    public String getCollateralAmount() {
        return collateralAmount;
    }

    public void setCollateralAmount(@jakarta.annotation.Nullable String collateralAmount) {
        this.collateralAmount = collateralAmount;
    }

    public GetFlexibleProductPositionResponseRowsInner productId(
            @jakarta.annotation.Nullable String productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Get productId
     *
     * @return productId
     */
    @jakarta.annotation.Nullable
    public String getProductId() {
        return productId;
    }

    public void setProductId(@jakarta.annotation.Nullable String productId) {
        this.productId = productId;
    }

    public GetFlexibleProductPositionResponseRowsInner yesterdayRealTimeRewards(
            @jakarta.annotation.Nullable String yesterdayRealTimeRewards) {
        this.yesterdayRealTimeRewards = yesterdayRealTimeRewards;
        return this;
    }

    /**
     * Get yesterdayRealTimeRewards
     *
     * @return yesterdayRealTimeRewards
     */
    @jakarta.annotation.Nullable
    public String getYesterdayRealTimeRewards() {
        return yesterdayRealTimeRewards;
    }

    public void setYesterdayRealTimeRewards(
            @jakarta.annotation.Nullable String yesterdayRealTimeRewards) {
        this.yesterdayRealTimeRewards = yesterdayRealTimeRewards;
    }

    public GetFlexibleProductPositionResponseRowsInner cumulativeBonusRewards(
            @jakarta.annotation.Nullable String cumulativeBonusRewards) {
        this.cumulativeBonusRewards = cumulativeBonusRewards;
        return this;
    }

    /**
     * Get cumulativeBonusRewards
     *
     * @return cumulativeBonusRewards
     */
    @jakarta.annotation.Nullable
    public String getCumulativeBonusRewards() {
        return cumulativeBonusRewards;
    }

    public void setCumulativeBonusRewards(
            @jakarta.annotation.Nullable String cumulativeBonusRewards) {
        this.cumulativeBonusRewards = cumulativeBonusRewards;
    }

    public GetFlexibleProductPositionResponseRowsInner cumulativeRealTimeRewards(
            @jakarta.annotation.Nullable String cumulativeRealTimeRewards) {
        this.cumulativeRealTimeRewards = cumulativeRealTimeRewards;
        return this;
    }

    /**
     * Get cumulativeRealTimeRewards
     *
     * @return cumulativeRealTimeRewards
     */
    @jakarta.annotation.Nullable
    public String getCumulativeRealTimeRewards() {
        return cumulativeRealTimeRewards;
    }

    public void setCumulativeRealTimeRewards(
            @jakarta.annotation.Nullable String cumulativeRealTimeRewards) {
        this.cumulativeRealTimeRewards = cumulativeRealTimeRewards;
    }

    public GetFlexibleProductPositionResponseRowsInner cumulativeTotalRewards(
            @jakarta.annotation.Nullable String cumulativeTotalRewards) {
        this.cumulativeTotalRewards = cumulativeTotalRewards;
        return this;
    }

    /**
     * Get cumulativeTotalRewards
     *
     * @return cumulativeTotalRewards
     */
    @jakarta.annotation.Nullable
    public String getCumulativeTotalRewards() {
        return cumulativeTotalRewards;
    }

    public void setCumulativeTotalRewards(
            @jakarta.annotation.Nullable String cumulativeTotalRewards) {
        this.cumulativeTotalRewards = cumulativeTotalRewards;
    }

    public GetFlexibleProductPositionResponseRowsInner autoSubscribe(
            @jakarta.annotation.Nullable Boolean autoSubscribe) {
        this.autoSubscribe = autoSubscribe;
        return this;
    }

    /**
     * Get autoSubscribe
     *
     * @return autoSubscribe
     */
    @jakarta.annotation.Nullable
    public Boolean getAutoSubscribe() {
        return autoSubscribe;
    }

    public void setAutoSubscribe(@jakarta.annotation.Nullable Boolean autoSubscribe) {
        this.autoSubscribe = autoSubscribe;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetFlexibleProductPositionResponseRowsInner getFlexibleProductPositionResponseRowsInner =
                (GetFlexibleProductPositionResponseRowsInner) o;
        return Objects.equals(
                        this.totalAmount, getFlexibleProductPositionResponseRowsInner.totalAmount)
                && Objects.equals(
                        this.tierAnnualPercentageRate,
                        getFlexibleProductPositionResponseRowsInner.tierAnnualPercentageRate)
                && Objects.equals(
                        this.latestAnnualPercentageRate,
                        getFlexibleProductPositionResponseRowsInner.latestAnnualPercentageRate)
                && Objects.equals(
                        this.yesterdayAirdropPercentageRate,
                        getFlexibleProductPositionResponseRowsInner.yesterdayAirdropPercentageRate)
                && Objects.equals(this.asset, getFlexibleProductPositionResponseRowsInner.asset)
                && Objects.equals(
                        this.airDropAsset, getFlexibleProductPositionResponseRowsInner.airDropAsset)
                && Objects.equals(
                        this.canRedeem, getFlexibleProductPositionResponseRowsInner.canRedeem)
                && Objects.equals(
                        this.collateralAmount,
                        getFlexibleProductPositionResponseRowsInner.collateralAmount)
                && Objects.equals(
                        this.productId, getFlexibleProductPositionResponseRowsInner.productId)
                && Objects.equals(
                        this.yesterdayRealTimeRewards,
                        getFlexibleProductPositionResponseRowsInner.yesterdayRealTimeRewards)
                && Objects.equals(
                        this.cumulativeBonusRewards,
                        getFlexibleProductPositionResponseRowsInner.cumulativeBonusRewards)
                && Objects.equals(
                        this.cumulativeRealTimeRewards,
                        getFlexibleProductPositionResponseRowsInner.cumulativeRealTimeRewards)
                && Objects.equals(
                        this.cumulativeTotalRewards,
                        getFlexibleProductPositionResponseRowsInner.cumulativeTotalRewards)
                && Objects.equals(
                        this.autoSubscribe,
                        getFlexibleProductPositionResponseRowsInner.autoSubscribe);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                totalAmount,
                tierAnnualPercentageRate,
                latestAnnualPercentageRate,
                yesterdayAirdropPercentageRate,
                asset,
                airDropAsset,
                canRedeem,
                collateralAmount,
                productId,
                yesterdayRealTimeRewards,
                cumulativeBonusRewards,
                cumulativeRealTimeRewards,
                cumulativeTotalRewards,
                autoSubscribe);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetFlexibleProductPositionResponseRowsInner {\n");
        sb.append("		totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
        sb.append("		tierAnnualPercentageRate: ")
                .append(toIndentedString(tierAnnualPercentageRate))
                .append("\n");
        sb.append("		latestAnnualPercentageRate: ")
                .append(toIndentedString(latestAnnualPercentageRate))
                .append("\n");
        sb.append("		yesterdayAirdropPercentageRate: ")
                .append(toIndentedString(yesterdayAirdropPercentageRate))
                .append("\n");
        sb.append("		asset: ").append(toIndentedString(asset)).append("\n");
        sb.append("		airDropAsset: ").append(toIndentedString(airDropAsset)).append("\n");
        sb.append("		canRedeem: ").append(toIndentedString(canRedeem)).append("\n");
        sb.append("		collateralAmount: ").append(toIndentedString(collateralAmount)).append("\n");
        sb.append("		productId: ").append(toIndentedString(productId)).append("\n");
        sb.append("		yesterdayRealTimeRewards: ")
                .append(toIndentedString(yesterdayRealTimeRewards))
                .append("\n");
        sb.append("		cumulativeBonusRewards: ")
                .append(toIndentedString(cumulativeBonusRewards))
                .append("\n");
        sb.append("		cumulativeRealTimeRewards: ")
                .append(toIndentedString(cumulativeRealTimeRewards))
                .append("\n");
        sb.append("		cumulativeTotalRewards: ")
                .append(toIndentedString(cumulativeTotalRewards))
                .append("\n");
        sb.append("		autoSubscribe: ").append(toIndentedString(autoSubscribe)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object totalAmountValue = getTotalAmount();
        String totalAmountValueAsString = "";
        totalAmountValueAsString = totalAmountValue.toString();
        sb.append("totalAmount=").append(urlEncode(totalAmountValueAsString)).append("");
        Object tierAnnualPercentageRateValue = getTierAnnualPercentageRate();
        String tierAnnualPercentageRateValueAsString = "";
        tierAnnualPercentageRateValueAsString = tierAnnualPercentageRateValue.toString();
        sb.append("tierAnnualPercentageRate=")
                .append(urlEncode(tierAnnualPercentageRateValueAsString))
                .append("");
        Object latestAnnualPercentageRateValue = getLatestAnnualPercentageRate();
        String latestAnnualPercentageRateValueAsString = "";
        latestAnnualPercentageRateValueAsString = latestAnnualPercentageRateValue.toString();
        sb.append("latestAnnualPercentageRate=")
                .append(urlEncode(latestAnnualPercentageRateValueAsString))
                .append("");
        Object yesterdayAirdropPercentageRateValue = getYesterdayAirdropPercentageRate();
        String yesterdayAirdropPercentageRateValueAsString = "";
        yesterdayAirdropPercentageRateValueAsString =
                yesterdayAirdropPercentageRateValue.toString();
        sb.append("yesterdayAirdropPercentageRate=")
                .append(urlEncode(yesterdayAirdropPercentageRateValueAsString))
                .append("");
        Object assetValue = getAsset();
        String assetValueAsString = "";
        assetValueAsString = assetValue.toString();
        sb.append("asset=").append(urlEncode(assetValueAsString)).append("");
        Object airDropAssetValue = getAirDropAsset();
        String airDropAssetValueAsString = "";
        airDropAssetValueAsString = airDropAssetValue.toString();
        sb.append("airDropAsset=").append(urlEncode(airDropAssetValueAsString)).append("");
        Object canRedeemValue = getCanRedeem();
        String canRedeemValueAsString = "";
        canRedeemValueAsString = canRedeemValue.toString();
        sb.append("canRedeem=").append(urlEncode(canRedeemValueAsString)).append("");
        Object collateralAmountValue = getCollateralAmount();
        String collateralAmountValueAsString = "";
        collateralAmountValueAsString = collateralAmountValue.toString();
        sb.append("collateralAmount=").append(urlEncode(collateralAmountValueAsString)).append("");
        Object productIdValue = getProductId();
        String productIdValueAsString = "";
        productIdValueAsString = productIdValue.toString();
        sb.append("productId=").append(urlEncode(productIdValueAsString)).append("");
        Object yesterdayRealTimeRewardsValue = getYesterdayRealTimeRewards();
        String yesterdayRealTimeRewardsValueAsString = "";
        yesterdayRealTimeRewardsValueAsString = yesterdayRealTimeRewardsValue.toString();
        sb.append("yesterdayRealTimeRewards=")
                .append(urlEncode(yesterdayRealTimeRewardsValueAsString))
                .append("");
        Object cumulativeBonusRewardsValue = getCumulativeBonusRewards();
        String cumulativeBonusRewardsValueAsString = "";
        cumulativeBonusRewardsValueAsString = cumulativeBonusRewardsValue.toString();
        sb.append("cumulativeBonusRewards=")
                .append(urlEncode(cumulativeBonusRewardsValueAsString))
                .append("");
        Object cumulativeRealTimeRewardsValue = getCumulativeRealTimeRewards();
        String cumulativeRealTimeRewardsValueAsString = "";
        cumulativeRealTimeRewardsValueAsString = cumulativeRealTimeRewardsValue.toString();
        sb.append("cumulativeRealTimeRewards=")
                .append(urlEncode(cumulativeRealTimeRewardsValueAsString))
                .append("");
        Object cumulativeTotalRewardsValue = getCumulativeTotalRewards();
        String cumulativeTotalRewardsValueAsString = "";
        cumulativeTotalRewardsValueAsString = cumulativeTotalRewardsValue.toString();
        sb.append("cumulativeTotalRewards=")
                .append(urlEncode(cumulativeTotalRewardsValueAsString))
                .append("");
        Object autoSubscribeValue = getAutoSubscribe();
        String autoSubscribeValueAsString = "";
        autoSubscribeValueAsString = autoSubscribeValue.toString();
        sb.append("autoSubscribe=").append(urlEncode(autoSubscribeValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("totalAmount");
        openapiFields.add("tierAnnualPercentageRate");
        openapiFields.add("latestAnnualPercentageRate");
        openapiFields.add("yesterdayAirdropPercentageRate");
        openapiFields.add("asset");
        openapiFields.add("airDropAsset");
        openapiFields.add("canRedeem");
        openapiFields.add("collateralAmount");
        openapiFields.add("productId");
        openapiFields.add("yesterdayRealTimeRewards");
        openapiFields.add("cumulativeBonusRewards");
        openapiFields.add("cumulativeRealTimeRewards");
        openapiFields.add("cumulativeTotalRewards");
        openapiFields.add("autoSubscribe");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetFlexibleProductPositionResponseRowsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetFlexibleProductPositionResponseRowsInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetFlexibleProductPositionResponseRowsInner is not found in"
                                    + " the empty JSON string",
                                GetFlexibleProductPositionResponseRowsInner.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetFlexibleProductPositionResponseRowsInner.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetFlexibleProductPositionResponseRowsInner` properties."
                                    + " JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("totalAmount") != null && !jsonObj.get("totalAmount").isJsonNull())
                && !jsonObj.get("totalAmount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `totalAmount` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("totalAmount").toString()));
        }
        // validate the optional field `tierAnnualPercentageRate`
        if (jsonObj.get("tierAnnualPercentageRate") != null
                && !jsonObj.get("tierAnnualPercentageRate").isJsonNull()) {
            GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate.validateJsonElement(
                    jsonObj.get("tierAnnualPercentageRate"));
        }
        if ((jsonObj.get("latestAnnualPercentageRate") != null
                        && !jsonObj.get("latestAnnualPercentageRate").isJsonNull())
                && !jsonObj.get("latestAnnualPercentageRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `latestAnnualPercentageRate` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("latestAnnualPercentageRate").toString()));
        }
        if ((jsonObj.get("yesterdayAirdropPercentageRate") != null
                        && !jsonObj.get("yesterdayAirdropPercentageRate").isJsonNull())
                && !jsonObj.get("yesterdayAirdropPercentageRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `yesterdayAirdropPercentageRate` to be a primitive"
                                    + " type in the JSON string but got `%s`",
                            jsonObj.get("yesterdayAirdropPercentageRate").toString()));
        }
        if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull())
                && !jsonObj.get("asset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `asset` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("asset").toString()));
        }
        if ((jsonObj.get("airDropAsset") != null && !jsonObj.get("airDropAsset").isJsonNull())
                && !jsonObj.get("airDropAsset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `airDropAsset` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("airDropAsset").toString()));
        }
        if ((jsonObj.get("collateralAmount") != null
                        && !jsonObj.get("collateralAmount").isJsonNull())
                && !jsonObj.get("collateralAmount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `collateralAmount` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("collateralAmount").toString()));
        }
        if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull())
                && !jsonObj.get("productId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `productId` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("productId").toString()));
        }
        if ((jsonObj.get("yesterdayRealTimeRewards") != null
                        && !jsonObj.get("yesterdayRealTimeRewards").isJsonNull())
                && !jsonObj.get("yesterdayRealTimeRewards").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `yesterdayRealTimeRewards` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("yesterdayRealTimeRewards").toString()));
        }
        if ((jsonObj.get("cumulativeBonusRewards") != null
                        && !jsonObj.get("cumulativeBonusRewards").isJsonNull())
                && !jsonObj.get("cumulativeBonusRewards").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `cumulativeBonusRewards` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("cumulativeBonusRewards").toString()));
        }
        if ((jsonObj.get("cumulativeRealTimeRewards") != null
                        && !jsonObj.get("cumulativeRealTimeRewards").isJsonNull())
                && !jsonObj.get("cumulativeRealTimeRewards").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `cumulativeRealTimeRewards` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("cumulativeRealTimeRewards").toString()));
        }
        if ((jsonObj.get("cumulativeTotalRewards") != null
                        && !jsonObj.get("cumulativeTotalRewards").isJsonNull())
                && !jsonObj.get("cumulativeTotalRewards").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `cumulativeTotalRewards` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("cumulativeTotalRewards").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetFlexibleProductPositionResponseRowsInner.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'GetFlexibleProductPositionResponseRowsInner' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetFlexibleProductPositionResponseRowsInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(GetFlexibleProductPositionResponseRowsInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetFlexibleProductPositionResponseRowsInner>() {
                        @Override
                        public void write(
                                JsonWriter out, GetFlexibleProductPositionResponseRowsInner value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetFlexibleProductPositionResponseRowsInner read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetFlexibleProductPositionResponseRowsInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetFlexibleProductPositionResponseRowsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetFlexibleProductPositionResponseRowsInner
     */
    public static GetFlexibleProductPositionResponseRowsInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, GetFlexibleProductPositionResponseRowsInner.class);
    }

    /**
     * Convert an instance of GetFlexibleProductPositionResponseRowsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
