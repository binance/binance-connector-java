/*
 * Binance Simple Earn REST API
 * OpenAPI Specification for the Binance Simple Earn REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.simple_earn.rest.model;

import com.binance.connector.client.simple_earn.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate {
    public static final String SERIALIZED_NAME_05_B_T_C = "0-5BTC";

    @SerializedName(SERIALIZED_NAME_05_B_T_C)
    @jakarta.annotation.Nullable
    private Double _0_5BTC;

    public static final String SERIALIZED_NAME_510_B_T_C = "5-10BTC";

    @SerializedName(SERIALIZED_NAME_510_B_T_C)
    @jakarta.annotation.Nullable
    private Double _5_10BTC;

    public GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate() {}

    public GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate _0_5BTC(
            @jakarta.annotation.Nullable Double _0_5BTC) {
        this._0_5BTC = _0_5BTC;
        return this;
    }

    /**
     * Get _0_5BTC
     *
     * @return _0_5BTC
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double get05BTC() {
        return _0_5BTC;
    }

    public void set05BTC(@jakarta.annotation.Nullable Double _0_5BTC) {
        this._0_5BTC = _0_5BTC;
    }

    public GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate _5_10BTC(
            @jakarta.annotation.Nullable Double _5_10BTC) {
        this._5_10BTC = _5_10BTC;
        return this;
    }

    /**
     * Get _5_10BTC
     *
     * @return _5_10BTC
     */
    @jakarta.annotation.Nullable
    @Valid
    public Double get510BTC() {
        return _5_10BTC;
    }

    public void set510BTC(@jakarta.annotation.Nullable Double _5_10BTC) {
        this._5_10BTC = _5_10BTC;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                getFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate =
                        (GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate) o;
        return Objects.equals(
                        this._0_5BTC,
                        getFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate._0_5BTC)
                && Objects.equals(
                        this._5_10BTC,
                        getFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                                ._5_10BTC);
    }

    @Override
    public int hashCode() {
        return Objects.hash(_0_5BTC, _5_10BTC);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate {\n");
        sb.append("		_0_5BTC: ").append(toIndentedString(_0_5BTC)).append("\n");
        sb.append("		_5_10BTC: ").append(toIndentedString(_5_10BTC)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object _0_5BTCValue = get05BTC();
        String _0_5BTCValueAsString = "";
        _0_5BTCValueAsString = _0_5BTCValue.toString();
        sb.append("_0_5BTC=").append(urlEncode(_0_5BTCValueAsString)).append("");
        Object _5_10BTCValue = get510BTC();
        String _5_10BTCValueAsString = "";
        _5_10BTCValueAsString = _5_10BTCValue.toString();
        sb.append("_5_10BTC=").append(urlEncode(_5_10BTCValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("0-5BTC");
        openapiFields.add("5-10BTC");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                    .openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate"
                                    + " is not found in the empty JSON string",
                                GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate.openapiFields
                    .contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate`"
                                    + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate.class
                    .isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes
                // 'GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate>
                    thisAdapter =
                            gson.getDelegateAdapter(
                                    this,
                                    TypeToken.get(
                                            GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                                                    .class));

            return (TypeAdapter<T>)
                    new TypeAdapter<
                            GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                                        value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                                read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
     * given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
     * @throws IOException if the JSON string is invalid with respect to
     *     GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
     */
    public static GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate fromJson(
            String jsonString) throws IOException {
        return JSON.getGson()
                .fromJson(
                        jsonString,
                        GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate.class);
    }

    /**
     * Convert an instance of GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate to
     * an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
