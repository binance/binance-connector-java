/*
 * Binance Simple Earn REST API
 * OpenAPI Specification for the Binance Simple Earn REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.simple_earn.rest.model;

import com.binance.connector.client.simple_earn.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetLockedRedemptionRecordResponseRowsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetLockedRedemptionRecordResponseRowsInner {
    public static final String SERIALIZED_NAME_POSITION_ID = "positionId";

    @SerializedName(SERIALIZED_NAME_POSITION_ID)
    @jakarta.annotation.Nullable
    private Long positionId;

    public static final String SERIALIZED_NAME_REDEEM_ID = "redeemId";

    @SerializedName(SERIALIZED_NAME_REDEEM_ID)
    @jakarta.annotation.Nullable
    private Long redeemId;

    public static final String SERIALIZED_NAME_TIME = "time";

    @SerializedName(SERIALIZED_NAME_TIME)
    @jakarta.annotation.Nullable
    private Long time;

    public static final String SERIALIZED_NAME_ASSET = "asset";

    @SerializedName(SERIALIZED_NAME_ASSET)
    @jakarta.annotation.Nullable
    private String asset;

    public static final String SERIALIZED_NAME_LOCK_PERIOD = "lockPeriod";

    @SerializedName(SERIALIZED_NAME_LOCK_PERIOD)
    @jakarta.annotation.Nullable
    private String lockPeriod;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";

    @SerializedName(SERIALIZED_NAME_AMOUNT)
    @jakarta.annotation.Nullable
    private String amount;

    public static final String SERIALIZED_NAME_ORIGINAL_AMOUNT = "originalAmount";

    @SerializedName(SERIALIZED_NAME_ORIGINAL_AMOUNT)
    @jakarta.annotation.Nullable
    private String originalAmount;

    public static final String SERIALIZED_NAME_TYPE = "type";

    @SerializedName(SERIALIZED_NAME_TYPE)
    @jakarta.annotation.Nullable
    private String type;

    public static final String SERIALIZED_NAME_DELIVER_DATE = "deliverDate";

    @SerializedName(SERIALIZED_NAME_DELIVER_DATE)
    @jakarta.annotation.Nullable
    private String deliverDate;

    public static final String SERIALIZED_NAME_LOSS_AMOUNT = "lossAmount";

    @SerializedName(SERIALIZED_NAME_LOSS_AMOUNT)
    @jakarta.annotation.Nullable
    private String lossAmount;

    public static final String SERIALIZED_NAME_IS_COMPLETE = "isComplete";

    @SerializedName(SERIALIZED_NAME_IS_COMPLETE)
    @jakarta.annotation.Nullable
    private Boolean isComplete;

    public static final String SERIALIZED_NAME_REWARD_ASSET = "rewardAsset";

    @SerializedName(SERIALIZED_NAME_REWARD_ASSET)
    @jakarta.annotation.Nullable
    private String rewardAsset;

    public static final String SERIALIZED_NAME_REWARD_AMT = "rewardAmt";

    @SerializedName(SERIALIZED_NAME_REWARD_AMT)
    @jakarta.annotation.Nullable
    private String rewardAmt;

    public static final String SERIALIZED_NAME_EXTRA_REWARD_ASSET = "extraRewardAsset";

    @SerializedName(SERIALIZED_NAME_EXTRA_REWARD_ASSET)
    @jakarta.annotation.Nullable
    private String extraRewardAsset;

    public static final String SERIALIZED_NAME_EST_EXTRA_REWARD_AMT = "estExtraRewardAmt";

    @SerializedName(SERIALIZED_NAME_EST_EXTRA_REWARD_AMT)
    @jakarta.annotation.Nullable
    private String estExtraRewardAmt;

    public static final String SERIALIZED_NAME_STATUS = "status";

    @SerializedName(SERIALIZED_NAME_STATUS)
    @jakarta.annotation.Nullable
    private String status;

    public GetLockedRedemptionRecordResponseRowsInner() {}

    public GetLockedRedemptionRecordResponseRowsInner positionId(
            @jakarta.annotation.Nullable Long positionId) {
        this.positionId = positionId;
        return this;
    }

    /**
     * Get positionId
     *
     * @return positionId
     */
    @jakarta.annotation.Nullable
    public Long getPositionId() {
        return positionId;
    }

    public void setPositionId(@jakarta.annotation.Nullable Long positionId) {
        this.positionId = positionId;
    }

    public GetLockedRedemptionRecordResponseRowsInner redeemId(
            @jakarta.annotation.Nullable Long redeemId) {
        this.redeemId = redeemId;
        return this;
    }

    /**
     * Get redeemId
     *
     * @return redeemId
     */
    @jakarta.annotation.Nullable
    public Long getRedeemId() {
        return redeemId;
    }

    public void setRedeemId(@jakarta.annotation.Nullable Long redeemId) {
        this.redeemId = redeemId;
    }

    public GetLockedRedemptionRecordResponseRowsInner time(@jakarta.annotation.Nullable Long time) {
        this.time = time;
        return this;
    }

    /**
     * Get time
     *
     * @return time
     */
    @jakarta.annotation.Nullable
    public Long getTime() {
        return time;
    }

    public void setTime(@jakarta.annotation.Nullable Long time) {
        this.time = time;
    }

    public GetLockedRedemptionRecordResponseRowsInner asset(
            @jakarta.annotation.Nullable String asset) {
        this.asset = asset;
        return this;
    }

    /**
     * Get asset
     *
     * @return asset
     */
    @jakarta.annotation.Nullable
    public String getAsset() {
        return asset;
    }

    public void setAsset(@jakarta.annotation.Nullable String asset) {
        this.asset = asset;
    }

    public GetLockedRedemptionRecordResponseRowsInner lockPeriod(
            @jakarta.annotation.Nullable String lockPeriod) {
        this.lockPeriod = lockPeriod;
        return this;
    }

    /**
     * Get lockPeriod
     *
     * @return lockPeriod
     */
    @jakarta.annotation.Nullable
    public String getLockPeriod() {
        return lockPeriod;
    }

    public void setLockPeriod(@jakarta.annotation.Nullable String lockPeriod) {
        this.lockPeriod = lockPeriod;
    }

    public GetLockedRedemptionRecordResponseRowsInner amount(
            @jakarta.annotation.Nullable String amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Get amount
     *
     * @return amount
     */
    @jakarta.annotation.Nullable
    public String getAmount() {
        return amount;
    }

    public void setAmount(@jakarta.annotation.Nullable String amount) {
        this.amount = amount;
    }

    public GetLockedRedemptionRecordResponseRowsInner originalAmount(
            @jakarta.annotation.Nullable String originalAmount) {
        this.originalAmount = originalAmount;
        return this;
    }

    /**
     * Get originalAmount
     *
     * @return originalAmount
     */
    @jakarta.annotation.Nullable
    public String getOriginalAmount() {
        return originalAmount;
    }

    public void setOriginalAmount(@jakarta.annotation.Nullable String originalAmount) {
        this.originalAmount = originalAmount;
    }

    public GetLockedRedemptionRecordResponseRowsInner type(
            @jakarta.annotation.Nullable String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nullable
    public String getType() {
        return type;
    }

    public void setType(@jakarta.annotation.Nullable String type) {
        this.type = type;
    }

    public GetLockedRedemptionRecordResponseRowsInner deliverDate(
            @jakarta.annotation.Nullable String deliverDate) {
        this.deliverDate = deliverDate;
        return this;
    }

    /**
     * Get deliverDate
     *
     * @return deliverDate
     */
    @jakarta.annotation.Nullable
    public String getDeliverDate() {
        return deliverDate;
    }

    public void setDeliverDate(@jakarta.annotation.Nullable String deliverDate) {
        this.deliverDate = deliverDate;
    }

    public GetLockedRedemptionRecordResponseRowsInner lossAmount(
            @jakarta.annotation.Nullable String lossAmount) {
        this.lossAmount = lossAmount;
        return this;
    }

    /**
     * Get lossAmount
     *
     * @return lossAmount
     */
    @jakarta.annotation.Nullable
    public String getLossAmount() {
        return lossAmount;
    }

    public void setLossAmount(@jakarta.annotation.Nullable String lossAmount) {
        this.lossAmount = lossAmount;
    }

    public GetLockedRedemptionRecordResponseRowsInner isComplete(
            @jakarta.annotation.Nullable Boolean isComplete) {
        this.isComplete = isComplete;
        return this;
    }

    /**
     * Get isComplete
     *
     * @return isComplete
     */
    @jakarta.annotation.Nullable
    public Boolean getIsComplete() {
        return isComplete;
    }

    public void setIsComplete(@jakarta.annotation.Nullable Boolean isComplete) {
        this.isComplete = isComplete;
    }

    public GetLockedRedemptionRecordResponseRowsInner rewardAsset(
            @jakarta.annotation.Nullable String rewardAsset) {
        this.rewardAsset = rewardAsset;
        return this;
    }

    /**
     * Get rewardAsset
     *
     * @return rewardAsset
     */
    @jakarta.annotation.Nullable
    public String getRewardAsset() {
        return rewardAsset;
    }

    public void setRewardAsset(@jakarta.annotation.Nullable String rewardAsset) {
        this.rewardAsset = rewardAsset;
    }

    public GetLockedRedemptionRecordResponseRowsInner rewardAmt(
            @jakarta.annotation.Nullable String rewardAmt) {
        this.rewardAmt = rewardAmt;
        return this;
    }

    /**
     * Get rewardAmt
     *
     * @return rewardAmt
     */
    @jakarta.annotation.Nullable
    public String getRewardAmt() {
        return rewardAmt;
    }

    public void setRewardAmt(@jakarta.annotation.Nullable String rewardAmt) {
        this.rewardAmt = rewardAmt;
    }

    public GetLockedRedemptionRecordResponseRowsInner extraRewardAsset(
            @jakarta.annotation.Nullable String extraRewardAsset) {
        this.extraRewardAsset = extraRewardAsset;
        return this;
    }

    /**
     * Get extraRewardAsset
     *
     * @return extraRewardAsset
     */
    @jakarta.annotation.Nullable
    public String getExtraRewardAsset() {
        return extraRewardAsset;
    }

    public void setExtraRewardAsset(@jakarta.annotation.Nullable String extraRewardAsset) {
        this.extraRewardAsset = extraRewardAsset;
    }

    public GetLockedRedemptionRecordResponseRowsInner estExtraRewardAmt(
            @jakarta.annotation.Nullable String estExtraRewardAmt) {
        this.estExtraRewardAmt = estExtraRewardAmt;
        return this;
    }

    /**
     * Get estExtraRewardAmt
     *
     * @return estExtraRewardAmt
     */
    @jakarta.annotation.Nullable
    public String getEstExtraRewardAmt() {
        return estExtraRewardAmt;
    }

    public void setEstExtraRewardAmt(@jakarta.annotation.Nullable String estExtraRewardAmt) {
        this.estExtraRewardAmt = estExtraRewardAmt;
    }

    public GetLockedRedemptionRecordResponseRowsInner status(
            @jakarta.annotation.Nullable String status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nullable
    public String getStatus() {
        return status;
    }

    public void setStatus(@jakarta.annotation.Nullable String status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetLockedRedemptionRecordResponseRowsInner getLockedRedemptionRecordResponseRowsInner =
                (GetLockedRedemptionRecordResponseRowsInner) o;
        return Objects.equals(
                        this.positionId, getLockedRedemptionRecordResponseRowsInner.positionId)
                && Objects.equals(
                        this.redeemId, getLockedRedemptionRecordResponseRowsInner.redeemId)
                && Objects.equals(this.time, getLockedRedemptionRecordResponseRowsInner.time)
                && Objects.equals(this.asset, getLockedRedemptionRecordResponseRowsInner.asset)
                && Objects.equals(
                        this.lockPeriod, getLockedRedemptionRecordResponseRowsInner.lockPeriod)
                && Objects.equals(this.amount, getLockedRedemptionRecordResponseRowsInner.amount)
                && Objects.equals(
                        this.originalAmount,
                        getLockedRedemptionRecordResponseRowsInner.originalAmount)
                && Objects.equals(this.type, getLockedRedemptionRecordResponseRowsInner.type)
                && Objects.equals(
                        this.deliverDate, getLockedRedemptionRecordResponseRowsInner.deliverDate)
                && Objects.equals(
                        this.lossAmount, getLockedRedemptionRecordResponseRowsInner.lossAmount)
                && Objects.equals(
                        this.isComplete, getLockedRedemptionRecordResponseRowsInner.isComplete)
                && Objects.equals(
                        this.rewardAsset, getLockedRedemptionRecordResponseRowsInner.rewardAsset)
                && Objects.equals(
                        this.rewardAmt, getLockedRedemptionRecordResponseRowsInner.rewardAmt)
                && Objects.equals(
                        this.extraRewardAsset,
                        getLockedRedemptionRecordResponseRowsInner.extraRewardAsset)
                && Objects.equals(
                        this.estExtraRewardAmt,
                        getLockedRedemptionRecordResponseRowsInner.estExtraRewardAmt)
                && Objects.equals(this.status, getLockedRedemptionRecordResponseRowsInner.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                positionId,
                redeemId,
                time,
                asset,
                lockPeriod,
                amount,
                originalAmount,
                type,
                deliverDate,
                lossAmount,
                isComplete,
                rewardAsset,
                rewardAmt,
                extraRewardAsset,
                estExtraRewardAmt,
                status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetLockedRedemptionRecordResponseRowsInner {\n");
        sb.append("		positionId: ").append(toIndentedString(positionId)).append("\n");
        sb.append("		redeemId: ").append(toIndentedString(redeemId)).append("\n");
        sb.append("		time: ").append(toIndentedString(time)).append("\n");
        sb.append("		asset: ").append(toIndentedString(asset)).append("\n");
        sb.append("		lockPeriod: ").append(toIndentedString(lockPeriod)).append("\n");
        sb.append("		amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("		originalAmount: ").append(toIndentedString(originalAmount)).append("\n");
        sb.append("		type: ").append(toIndentedString(type)).append("\n");
        sb.append("		deliverDate: ").append(toIndentedString(deliverDate)).append("\n");
        sb.append("		lossAmount: ").append(toIndentedString(lossAmount)).append("\n");
        sb.append("		isComplete: ").append(toIndentedString(isComplete)).append("\n");
        sb.append("		rewardAsset: ").append(toIndentedString(rewardAsset)).append("\n");
        sb.append("		rewardAmt: ").append(toIndentedString(rewardAmt)).append("\n");
        sb.append("		extraRewardAsset: ").append(toIndentedString(extraRewardAsset)).append("\n");
        sb.append("		estExtraRewardAmt: ").append(toIndentedString(estExtraRewardAmt)).append("\n");
        sb.append("		status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object positionIdValue = getPositionId();
        String positionIdValueAsString = "";
        positionIdValueAsString = positionIdValue.toString();
        sb.append("positionId=").append(urlEncode(positionIdValueAsString)).append("");
        Object redeemIdValue = getRedeemId();
        String redeemIdValueAsString = "";
        redeemIdValueAsString = redeemIdValue.toString();
        sb.append("redeemId=").append(urlEncode(redeemIdValueAsString)).append("");
        Object timeValue = getTime();
        String timeValueAsString = "";
        timeValueAsString = timeValue.toString();
        sb.append("time=").append(urlEncode(timeValueAsString)).append("");
        Object assetValue = getAsset();
        String assetValueAsString = "";
        assetValueAsString = assetValue.toString();
        sb.append("asset=").append(urlEncode(assetValueAsString)).append("");
        Object lockPeriodValue = getLockPeriod();
        String lockPeriodValueAsString = "";
        lockPeriodValueAsString = lockPeriodValue.toString();
        sb.append("lockPeriod=").append(urlEncode(lockPeriodValueAsString)).append("");
        Object amountValue = getAmount();
        String amountValueAsString = "";
        amountValueAsString = amountValue.toString();
        sb.append("amount=").append(urlEncode(amountValueAsString)).append("");
        Object originalAmountValue = getOriginalAmount();
        String originalAmountValueAsString = "";
        originalAmountValueAsString = originalAmountValue.toString();
        sb.append("originalAmount=").append(urlEncode(originalAmountValueAsString)).append("");
        Object typeValue = getType();
        String typeValueAsString = "";
        typeValueAsString = typeValue.toString();
        sb.append("type=").append(urlEncode(typeValueAsString)).append("");
        Object deliverDateValue = getDeliverDate();
        String deliverDateValueAsString = "";
        deliverDateValueAsString = deliverDateValue.toString();
        sb.append("deliverDate=").append(urlEncode(deliverDateValueAsString)).append("");
        Object lossAmountValue = getLossAmount();
        String lossAmountValueAsString = "";
        lossAmountValueAsString = lossAmountValue.toString();
        sb.append("lossAmount=").append(urlEncode(lossAmountValueAsString)).append("");
        Object isCompleteValue = getIsComplete();
        String isCompleteValueAsString = "";
        isCompleteValueAsString = isCompleteValue.toString();
        sb.append("isComplete=").append(urlEncode(isCompleteValueAsString)).append("");
        Object rewardAssetValue = getRewardAsset();
        String rewardAssetValueAsString = "";
        rewardAssetValueAsString = rewardAssetValue.toString();
        sb.append("rewardAsset=").append(urlEncode(rewardAssetValueAsString)).append("");
        Object rewardAmtValue = getRewardAmt();
        String rewardAmtValueAsString = "";
        rewardAmtValueAsString = rewardAmtValue.toString();
        sb.append("rewardAmt=").append(urlEncode(rewardAmtValueAsString)).append("");
        Object extraRewardAssetValue = getExtraRewardAsset();
        String extraRewardAssetValueAsString = "";
        extraRewardAssetValueAsString = extraRewardAssetValue.toString();
        sb.append("extraRewardAsset=").append(urlEncode(extraRewardAssetValueAsString)).append("");
        Object estExtraRewardAmtValue = getEstExtraRewardAmt();
        String estExtraRewardAmtValueAsString = "";
        estExtraRewardAmtValueAsString = estExtraRewardAmtValue.toString();
        sb.append("estExtraRewardAmt=")
                .append(urlEncode(estExtraRewardAmtValueAsString))
                .append("");
        Object statusValue = getStatus();
        String statusValueAsString = "";
        statusValueAsString = statusValue.toString();
        sb.append("status=").append(urlEncode(statusValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("positionId");
        openapiFields.add("redeemId");
        openapiFields.add("time");
        openapiFields.add("asset");
        openapiFields.add("lockPeriod");
        openapiFields.add("amount");
        openapiFields.add("originalAmount");
        openapiFields.add("type");
        openapiFields.add("deliverDate");
        openapiFields.add("lossAmount");
        openapiFields.add("isComplete");
        openapiFields.add("rewardAsset");
        openapiFields.add("rewardAmt");
        openapiFields.add("extraRewardAsset");
        openapiFields.add("estExtraRewardAmt");
        openapiFields.add("status");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetLockedRedemptionRecordResponseRowsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetLockedRedemptionRecordResponseRowsInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetLockedRedemptionRecordResponseRowsInner is not found in"
                                    + " the empty JSON string",
                                GetLockedRedemptionRecordResponseRowsInner.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetLockedRedemptionRecordResponseRowsInner.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetLockedRedemptionRecordResponseRowsInner` properties."
                                    + " JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull())
                && !jsonObj.get("asset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `asset` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("asset").toString()));
        }
        if ((jsonObj.get("lockPeriod") != null && !jsonObj.get("lockPeriod").isJsonNull())
                && !jsonObj.get("lockPeriod").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `lockPeriod` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("lockPeriod").toString()));
        }
        if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull())
                && !jsonObj.get("amount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `amount` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("amount").toString()));
        }
        if ((jsonObj.get("originalAmount") != null && !jsonObj.get("originalAmount").isJsonNull())
                && !jsonObj.get("originalAmount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `originalAmount` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("originalAmount").toString()));
        }
        if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull())
                && !jsonObj.get("type").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `type` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("type").toString()));
        }
        if ((jsonObj.get("deliverDate") != null && !jsonObj.get("deliverDate").isJsonNull())
                && !jsonObj.get("deliverDate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `deliverDate` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("deliverDate").toString()));
        }
        if ((jsonObj.get("lossAmount") != null && !jsonObj.get("lossAmount").isJsonNull())
                && !jsonObj.get("lossAmount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `lossAmount` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("lossAmount").toString()));
        }
        if ((jsonObj.get("rewardAsset") != null && !jsonObj.get("rewardAsset").isJsonNull())
                && !jsonObj.get("rewardAsset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `rewardAsset` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("rewardAsset").toString()));
        }
        if ((jsonObj.get("rewardAmt") != null && !jsonObj.get("rewardAmt").isJsonNull())
                && !jsonObj.get("rewardAmt").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `rewardAmt` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("rewardAmt").toString()));
        }
        if ((jsonObj.get("extraRewardAsset") != null
                        && !jsonObj.get("extraRewardAsset").isJsonNull())
                && !jsonObj.get("extraRewardAsset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `extraRewardAsset` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("extraRewardAsset").toString()));
        }
        if ((jsonObj.get("estExtraRewardAmt") != null
                        && !jsonObj.get("estExtraRewardAmt").isJsonNull())
                && !jsonObj.get("estExtraRewardAmt").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `estExtraRewardAmt` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("estExtraRewardAmt").toString()));
        }
        if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull())
                && !jsonObj.get("status").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `status` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("status").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetLockedRedemptionRecordResponseRowsInner.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'GetLockedRedemptionRecordResponseRowsInner' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetLockedRedemptionRecordResponseRowsInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(GetLockedRedemptionRecordResponseRowsInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetLockedRedemptionRecordResponseRowsInner>() {
                        @Override
                        public void write(
                                JsonWriter out, GetLockedRedemptionRecordResponseRowsInner value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetLockedRedemptionRecordResponseRowsInner read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetLockedRedemptionRecordResponseRowsInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetLockedRedemptionRecordResponseRowsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetLockedRedemptionRecordResponseRowsInner
     */
    public static GetLockedRedemptionRecordResponseRowsInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, GetLockedRedemptionRecordResponseRowsInner.class);
    }

    /**
     * Convert an instance of GetLockedRedemptionRecordResponseRowsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
