/*
 * Binance Simple Earn REST API
 * OpenAPI Specification for the Binance Simple Earn REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.simple_earn.rest.model;

import com.binance.connector.client.simple_earn.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.hibernate.validator.constraints.*;

/** GetSimpleEarnFlexibleProductListResponseRowsInner */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetSimpleEarnFlexibleProductListResponseRowsInner {
    public static final String SERIALIZED_NAME_ASSET = "asset";

    @SerializedName(SERIALIZED_NAME_ASSET)
    @jakarta.annotation.Nullable
    private String asset;

    public static final String SERIALIZED_NAME_LATEST_ANNUAL_PERCENTAGE_RATE =
            "latestAnnualPercentageRate";

    @SerializedName(SERIALIZED_NAME_LATEST_ANNUAL_PERCENTAGE_RATE)
    @jakarta.annotation.Nullable
    private String latestAnnualPercentageRate;

    public static final String SERIALIZED_NAME_TIER_ANNUAL_PERCENTAGE_RATE =
            "tierAnnualPercentageRate";

    @SerializedName(SERIALIZED_NAME_TIER_ANNUAL_PERCENTAGE_RATE)
    @jakarta.annotation.Nullable
    private GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
            tierAnnualPercentageRate;

    public static final String SERIALIZED_NAME_AIR_DROP_PERCENTAGE_RATE = "airDropPercentageRate";

    @SerializedName(SERIALIZED_NAME_AIR_DROP_PERCENTAGE_RATE)
    @jakarta.annotation.Nullable
    private String airDropPercentageRate;

    public static final String SERIALIZED_NAME_CAN_PURCHASE = "canPurchase";

    @SerializedName(SERIALIZED_NAME_CAN_PURCHASE)
    @jakarta.annotation.Nullable
    private Boolean canPurchase;

    public static final String SERIALIZED_NAME_CAN_REDEEM = "canRedeem";

    @SerializedName(SERIALIZED_NAME_CAN_REDEEM)
    @jakarta.annotation.Nullable
    private Boolean canRedeem;

    public static final String SERIALIZED_NAME_IS_SOLD_OUT = "isSoldOut";

    @SerializedName(SERIALIZED_NAME_IS_SOLD_OUT)
    @jakarta.annotation.Nullable
    private Boolean isSoldOut;

    public static final String SERIALIZED_NAME_HOT = "hot";

    @SerializedName(SERIALIZED_NAME_HOT)
    @jakarta.annotation.Nullable
    private Boolean hot;

    public static final String SERIALIZED_NAME_MIN_PURCHASE_AMOUNT = "minPurchaseAmount";

    @SerializedName(SERIALIZED_NAME_MIN_PURCHASE_AMOUNT)
    @jakarta.annotation.Nullable
    private String minPurchaseAmount;

    public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";

    @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
    @jakarta.annotation.Nullable
    private String productId;

    public static final String SERIALIZED_NAME_SUBSCRIPTION_START_TIME = "subscriptionStartTime";

    @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_START_TIME)
    @jakarta.annotation.Nullable
    private String subscriptionStartTime;

    public static final String SERIALIZED_NAME_STATUS = "status";

    @SerializedName(SERIALIZED_NAME_STATUS)
    @jakarta.annotation.Nullable
    private String status;

    public GetSimpleEarnFlexibleProductListResponseRowsInner() {}

    public GetSimpleEarnFlexibleProductListResponseRowsInner asset(
            @jakarta.annotation.Nullable String asset) {
        this.asset = asset;
        return this;
    }

    /**
     * Get asset
     *
     * @return asset
     */
    @jakarta.annotation.Nullable
    public String getAsset() {
        return asset;
    }

    public void setAsset(@jakarta.annotation.Nullable String asset) {
        this.asset = asset;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner latestAnnualPercentageRate(
            @jakarta.annotation.Nullable String latestAnnualPercentageRate) {
        this.latestAnnualPercentageRate = latestAnnualPercentageRate;
        return this;
    }

    /**
     * Get latestAnnualPercentageRate
     *
     * @return latestAnnualPercentageRate
     */
    @jakarta.annotation.Nullable
    public String getLatestAnnualPercentageRate() {
        return latestAnnualPercentageRate;
    }

    public void setLatestAnnualPercentageRate(
            @jakarta.annotation.Nullable String latestAnnualPercentageRate) {
        this.latestAnnualPercentageRate = latestAnnualPercentageRate;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner tierAnnualPercentageRate(
            @jakarta.annotation.Nullable
                    GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                            tierAnnualPercentageRate) {
        this.tierAnnualPercentageRate = tierAnnualPercentageRate;
        return this;
    }

    /**
     * Get tierAnnualPercentageRate
     *
     * @return tierAnnualPercentageRate
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
            getTierAnnualPercentageRate() {
        return tierAnnualPercentageRate;
    }

    public void setTierAnnualPercentageRate(
            @jakarta.annotation.Nullable
                    GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate
                            tierAnnualPercentageRate) {
        this.tierAnnualPercentageRate = tierAnnualPercentageRate;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner airDropPercentageRate(
            @jakarta.annotation.Nullable String airDropPercentageRate) {
        this.airDropPercentageRate = airDropPercentageRate;
        return this;
    }

    /**
     * Get airDropPercentageRate
     *
     * @return airDropPercentageRate
     */
    @jakarta.annotation.Nullable
    public String getAirDropPercentageRate() {
        return airDropPercentageRate;
    }

    public void setAirDropPercentageRate(
            @jakarta.annotation.Nullable String airDropPercentageRate) {
        this.airDropPercentageRate = airDropPercentageRate;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner canPurchase(
            @jakarta.annotation.Nullable Boolean canPurchase) {
        this.canPurchase = canPurchase;
        return this;
    }

    /**
     * Get canPurchase
     *
     * @return canPurchase
     */
    @jakarta.annotation.Nullable
    public Boolean getCanPurchase() {
        return canPurchase;
    }

    public void setCanPurchase(@jakarta.annotation.Nullable Boolean canPurchase) {
        this.canPurchase = canPurchase;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner canRedeem(
            @jakarta.annotation.Nullable Boolean canRedeem) {
        this.canRedeem = canRedeem;
        return this;
    }

    /**
     * Get canRedeem
     *
     * @return canRedeem
     */
    @jakarta.annotation.Nullable
    public Boolean getCanRedeem() {
        return canRedeem;
    }

    public void setCanRedeem(@jakarta.annotation.Nullable Boolean canRedeem) {
        this.canRedeem = canRedeem;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner isSoldOut(
            @jakarta.annotation.Nullable Boolean isSoldOut) {
        this.isSoldOut = isSoldOut;
        return this;
    }

    /**
     * Get isSoldOut
     *
     * @return isSoldOut
     */
    @jakarta.annotation.Nullable
    public Boolean getIsSoldOut() {
        return isSoldOut;
    }

    public void setIsSoldOut(@jakarta.annotation.Nullable Boolean isSoldOut) {
        this.isSoldOut = isSoldOut;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner hot(
            @jakarta.annotation.Nullable Boolean hot) {
        this.hot = hot;
        return this;
    }

    /**
     * Get hot
     *
     * @return hot
     */
    @jakarta.annotation.Nullable
    public Boolean getHot() {
        return hot;
    }

    public void setHot(@jakarta.annotation.Nullable Boolean hot) {
        this.hot = hot;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner minPurchaseAmount(
            @jakarta.annotation.Nullable String minPurchaseAmount) {
        this.minPurchaseAmount = minPurchaseAmount;
        return this;
    }

    /**
     * Get minPurchaseAmount
     *
     * @return minPurchaseAmount
     */
    @jakarta.annotation.Nullable
    public String getMinPurchaseAmount() {
        return minPurchaseAmount;
    }

    public void setMinPurchaseAmount(@jakarta.annotation.Nullable String minPurchaseAmount) {
        this.minPurchaseAmount = minPurchaseAmount;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner productId(
            @jakarta.annotation.Nullable String productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Get productId
     *
     * @return productId
     */
    @jakarta.annotation.Nullable
    public String getProductId() {
        return productId;
    }

    public void setProductId(@jakarta.annotation.Nullable String productId) {
        this.productId = productId;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner subscriptionStartTime(
            @jakarta.annotation.Nullable String subscriptionStartTime) {
        this.subscriptionStartTime = subscriptionStartTime;
        return this;
    }

    /**
     * Get subscriptionStartTime
     *
     * @return subscriptionStartTime
     */
    @jakarta.annotation.Nullable
    public String getSubscriptionStartTime() {
        return subscriptionStartTime;
    }

    public void setSubscriptionStartTime(
            @jakarta.annotation.Nullable String subscriptionStartTime) {
        this.subscriptionStartTime = subscriptionStartTime;
    }

    public GetSimpleEarnFlexibleProductListResponseRowsInner status(
            @jakarta.annotation.Nullable String status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nullable
    public String getStatus() {
        return status;
    }

    public void setStatus(@jakarta.annotation.Nullable String status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSimpleEarnFlexibleProductListResponseRowsInner
                getSimpleEarnFlexibleProductListResponseRowsInner =
                        (GetSimpleEarnFlexibleProductListResponseRowsInner) o;
        return Objects.equals(this.asset, getSimpleEarnFlexibleProductListResponseRowsInner.asset)
                && Objects.equals(
                        this.latestAnnualPercentageRate,
                        getSimpleEarnFlexibleProductListResponseRowsInner
                                .latestAnnualPercentageRate)
                && Objects.equals(
                        this.tierAnnualPercentageRate,
                        getSimpleEarnFlexibleProductListResponseRowsInner.tierAnnualPercentageRate)
                && Objects.equals(
                        this.airDropPercentageRate,
                        getSimpleEarnFlexibleProductListResponseRowsInner.airDropPercentageRate)
                && Objects.equals(
                        this.canPurchase,
                        getSimpleEarnFlexibleProductListResponseRowsInner.canPurchase)
                && Objects.equals(
                        this.canRedeem, getSimpleEarnFlexibleProductListResponseRowsInner.canRedeem)
                && Objects.equals(
                        this.isSoldOut, getSimpleEarnFlexibleProductListResponseRowsInner.isSoldOut)
                && Objects.equals(this.hot, getSimpleEarnFlexibleProductListResponseRowsInner.hot)
                && Objects.equals(
                        this.minPurchaseAmount,
                        getSimpleEarnFlexibleProductListResponseRowsInner.minPurchaseAmount)
                && Objects.equals(
                        this.productId, getSimpleEarnFlexibleProductListResponseRowsInner.productId)
                && Objects.equals(
                        this.subscriptionStartTime,
                        getSimpleEarnFlexibleProductListResponseRowsInner.subscriptionStartTime)
                && Objects.equals(
                        this.status, getSimpleEarnFlexibleProductListResponseRowsInner.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                asset,
                latestAnnualPercentageRate,
                tierAnnualPercentageRate,
                airDropPercentageRate,
                canPurchase,
                canRedeem,
                isSoldOut,
                hot,
                minPurchaseAmount,
                productId,
                subscriptionStartTime,
                status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetSimpleEarnFlexibleProductListResponseRowsInner {\n");
        sb.append("		asset: ").append(toIndentedString(asset)).append("\n");
        sb.append("		latestAnnualPercentageRate: ")
                .append(toIndentedString(latestAnnualPercentageRate))
                .append("\n");
        sb.append("		tierAnnualPercentageRate: ")
                .append(toIndentedString(tierAnnualPercentageRate))
                .append("\n");
        sb.append("		airDropPercentageRate: ")
                .append(toIndentedString(airDropPercentageRate))
                .append("\n");
        sb.append("		canPurchase: ").append(toIndentedString(canPurchase)).append("\n");
        sb.append("		canRedeem: ").append(toIndentedString(canRedeem)).append("\n");
        sb.append("		isSoldOut: ").append(toIndentedString(isSoldOut)).append("\n");
        sb.append("		hot: ").append(toIndentedString(hot)).append("\n");
        sb.append("		minPurchaseAmount: ").append(toIndentedString(minPurchaseAmount)).append("\n");
        sb.append("		productId: ").append(toIndentedString(productId)).append("\n");
        sb.append("		subscriptionStartTime: ")
                .append(toIndentedString(subscriptionStartTime))
                .append("\n");
        sb.append("		status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object assetValue = getAsset();
        String assetValueAsString = "";
        assetValueAsString = assetValue.toString();
        sb.append("asset=").append(urlEncode(assetValueAsString)).append("");
        Object latestAnnualPercentageRateValue = getLatestAnnualPercentageRate();
        String latestAnnualPercentageRateValueAsString = "";
        latestAnnualPercentageRateValueAsString = latestAnnualPercentageRateValue.toString();
        sb.append("latestAnnualPercentageRate=")
                .append(urlEncode(latestAnnualPercentageRateValueAsString))
                .append("");
        Object tierAnnualPercentageRateValue = getTierAnnualPercentageRate();
        String tierAnnualPercentageRateValueAsString = "";
        tierAnnualPercentageRateValueAsString = tierAnnualPercentageRateValue.toString();
        sb.append("tierAnnualPercentageRate=")
                .append(urlEncode(tierAnnualPercentageRateValueAsString))
                .append("");
        Object airDropPercentageRateValue = getAirDropPercentageRate();
        String airDropPercentageRateValueAsString = "";
        airDropPercentageRateValueAsString = airDropPercentageRateValue.toString();
        sb.append("airDropPercentageRate=")
                .append(urlEncode(airDropPercentageRateValueAsString))
                .append("");
        Object canPurchaseValue = getCanPurchase();
        String canPurchaseValueAsString = "";
        canPurchaseValueAsString = canPurchaseValue.toString();
        sb.append("canPurchase=").append(urlEncode(canPurchaseValueAsString)).append("");
        Object canRedeemValue = getCanRedeem();
        String canRedeemValueAsString = "";
        canRedeemValueAsString = canRedeemValue.toString();
        sb.append("canRedeem=").append(urlEncode(canRedeemValueAsString)).append("");
        Object isSoldOutValue = getIsSoldOut();
        String isSoldOutValueAsString = "";
        isSoldOutValueAsString = isSoldOutValue.toString();
        sb.append("isSoldOut=").append(urlEncode(isSoldOutValueAsString)).append("");
        Object hotValue = getHot();
        String hotValueAsString = "";
        hotValueAsString = hotValue.toString();
        sb.append("hot=").append(urlEncode(hotValueAsString)).append("");
        Object minPurchaseAmountValue = getMinPurchaseAmount();
        String minPurchaseAmountValueAsString = "";
        minPurchaseAmountValueAsString = minPurchaseAmountValue.toString();
        sb.append("minPurchaseAmount=")
                .append(urlEncode(minPurchaseAmountValueAsString))
                .append("");
        Object productIdValue = getProductId();
        String productIdValueAsString = "";
        productIdValueAsString = productIdValue.toString();
        sb.append("productId=").append(urlEncode(productIdValueAsString)).append("");
        Object subscriptionStartTimeValue = getSubscriptionStartTime();
        String subscriptionStartTimeValueAsString = "";
        subscriptionStartTimeValueAsString = subscriptionStartTimeValue.toString();
        sb.append("subscriptionStartTime=")
                .append(urlEncode(subscriptionStartTimeValueAsString))
                .append("");
        Object statusValue = getStatus();
        String statusValueAsString = "";
        statusValueAsString = statusValue.toString();
        sb.append("status=").append(urlEncode(statusValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("asset");
        openapiFields.add("latestAnnualPercentageRate");
        openapiFields.add("tierAnnualPercentageRate");
        openapiFields.add("airDropPercentageRate");
        openapiFields.add("canPurchase");
        openapiFields.add("canRedeem");
        openapiFields.add("isSoldOut");
        openapiFields.add("hot");
        openapiFields.add("minPurchaseAmount");
        openapiFields.add("productId");
        openapiFields.add("subscriptionStartTime");
        openapiFields.add("status");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetSimpleEarnFlexibleProductListResponseRowsInner
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetSimpleEarnFlexibleProductListResponseRowsInner.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " GetSimpleEarnFlexibleProductListResponseRowsInner is not"
                                    + " found in the empty JSON string",
                                GetSimpleEarnFlexibleProductListResponseRowsInner
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetSimpleEarnFlexibleProductListResponseRowsInner.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                        + " `GetSimpleEarnFlexibleProductListResponseRowsInner`"
                                        + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull())
                && !jsonObj.get("asset").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `asset` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("asset").toString()));
        }
        if ((jsonObj.get("latestAnnualPercentageRate") != null
                        && !jsonObj.get("latestAnnualPercentageRate").isJsonNull())
                && !jsonObj.get("latestAnnualPercentageRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `latestAnnualPercentageRate` to be a primitive type"
                                    + " in the JSON string but got `%s`",
                            jsonObj.get("latestAnnualPercentageRate").toString()));
        }
        // validate the optional field `tierAnnualPercentageRate`
        if (jsonObj.get("tierAnnualPercentageRate") != null
                && !jsonObj.get("tierAnnualPercentageRate").isJsonNull()) {
            GetFlexibleProductPositionResponseRowsInnerTierAnnualPercentageRate.validateJsonElement(
                    jsonObj.get("tierAnnualPercentageRate"));
        }
        if ((jsonObj.get("airDropPercentageRate") != null
                        && !jsonObj.get("airDropPercentageRate").isJsonNull())
                && !jsonObj.get("airDropPercentageRate").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `airDropPercentageRate` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("airDropPercentageRate").toString()));
        }
        if ((jsonObj.get("minPurchaseAmount") != null
                        && !jsonObj.get("minPurchaseAmount").isJsonNull())
                && !jsonObj.get("minPurchaseAmount").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `minPurchaseAmount` to be a primitive type in the"
                                    + " JSON string but got `%s`",
                            jsonObj.get("minPurchaseAmount").toString()));
        }
        if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull())
                && !jsonObj.get("productId").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `productId` to be a primitive type in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("productId").toString()));
        }
        if ((jsonObj.get("subscriptionStartTime") != null
                        && !jsonObj.get("subscriptionStartTime").isJsonNull())
                && !jsonObj.get("subscriptionStartTime").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `subscriptionStartTime` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("subscriptionStartTime").toString()));
        }
        if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull())
                && !jsonObj.get("status").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `status` to be a primitive type in the JSON string"
                                    + " but got `%s`",
                            jsonObj.get("status").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetSimpleEarnFlexibleProductListResponseRowsInner.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'GetSimpleEarnFlexibleProductListResponseRowsInner' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetSimpleEarnFlexibleProductListResponseRowsInner> thisAdapter =
                    gson.getDelegateAdapter(
                            this,
                            TypeToken.get(GetSimpleEarnFlexibleProductListResponseRowsInner.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetSimpleEarnFlexibleProductListResponseRowsInner>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                GetSimpleEarnFlexibleProductListResponseRowsInner value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetSimpleEarnFlexibleProductListResponseRowsInner read(JsonReader in)
                                throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetSimpleEarnFlexibleProductListResponseRowsInner given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetSimpleEarnFlexibleProductListResponseRowsInner
     * @throws IOException if the JSON string is invalid with respect to
     *     GetSimpleEarnFlexibleProductListResponseRowsInner
     */
    public static GetSimpleEarnFlexibleProductListResponseRowsInner fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, GetSimpleEarnFlexibleProductListResponseRowsInner.class);
    }

    /**
     * Convert an instance of GetSimpleEarnFlexibleProductListResponseRowsInner to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
