/*
 * Binance Simple Earn REST API
 * OpenAPI Specification for the Binance Simple Earn REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.binance.connector.client.simple_earn.rest.model;

import com.binance.connector.client.simple_earn.rest.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashSet;
import java.util.Objects;
import org.hibernate.validator.constraints.*;

/** GetBfusdQuotaDetailsResponse */
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.12.0")
public class GetBfusdQuotaDetailsResponse {
    public static final String SERIALIZED_NAME_FAST_REDEMPTION_QUOTA = "fastRedemptionQuota";

    @SerializedName(SERIALIZED_NAME_FAST_REDEMPTION_QUOTA)
    @jakarta.annotation.Nullable
    private GetBfusdQuotaDetailsResponseFastRedemptionQuota fastRedemptionQuota;

    public static final String SERIALIZED_NAME_STANDARD_REDEMPTION_QUOTA =
            "standardRedemptionQuota";

    @SerializedName(SERIALIZED_NAME_STANDARD_REDEMPTION_QUOTA)
    @jakarta.annotation.Nullable
    private GetBfusdQuotaDetailsResponseStandardRedemptionQuota standardRedemptionQuota;

    public static final String SERIALIZED_NAME_SUBSCRIBE_ENABLE = "subscribeEnable";

    @SerializedName(SERIALIZED_NAME_SUBSCRIBE_ENABLE)
    @jakarta.annotation.Nullable
    private Boolean subscribeEnable;

    public static final String SERIALIZED_NAME_REDEEM_ENABLE = "redeemEnable";

    @SerializedName(SERIALIZED_NAME_REDEEM_ENABLE)
    @jakarta.annotation.Nullable
    private Boolean redeemEnable;

    public GetBfusdQuotaDetailsResponse() {}

    public GetBfusdQuotaDetailsResponse fastRedemptionQuota(
            @jakarta.annotation.Nullable
                    GetBfusdQuotaDetailsResponseFastRedemptionQuota fastRedemptionQuota) {
        this.fastRedemptionQuota = fastRedemptionQuota;
        return this;
    }

    /**
     * Get fastRedemptionQuota
     *
     * @return fastRedemptionQuota
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetBfusdQuotaDetailsResponseFastRedemptionQuota getFastRedemptionQuota() {
        return fastRedemptionQuota;
    }

    public void setFastRedemptionQuota(
            @jakarta.annotation.Nullable
                    GetBfusdQuotaDetailsResponseFastRedemptionQuota fastRedemptionQuota) {
        this.fastRedemptionQuota = fastRedemptionQuota;
    }

    public GetBfusdQuotaDetailsResponse standardRedemptionQuota(
            @jakarta.annotation.Nullable
                    GetBfusdQuotaDetailsResponseStandardRedemptionQuota standardRedemptionQuota) {
        this.standardRedemptionQuota = standardRedemptionQuota;
        return this;
    }

    /**
     * Get standardRedemptionQuota
     *
     * @return standardRedemptionQuota
     */
    @jakarta.annotation.Nullable
    @Valid
    public GetBfusdQuotaDetailsResponseStandardRedemptionQuota getStandardRedemptionQuota() {
        return standardRedemptionQuota;
    }

    public void setStandardRedemptionQuota(
            @jakarta.annotation.Nullable
                    GetBfusdQuotaDetailsResponseStandardRedemptionQuota standardRedemptionQuota) {
        this.standardRedemptionQuota = standardRedemptionQuota;
    }

    public GetBfusdQuotaDetailsResponse subscribeEnable(
            @jakarta.annotation.Nullable Boolean subscribeEnable) {
        this.subscribeEnable = subscribeEnable;
        return this;
    }

    /**
     * Get subscribeEnable
     *
     * @return subscribeEnable
     */
    @jakarta.annotation.Nullable
    public Boolean getSubscribeEnable() {
        return subscribeEnable;
    }

    public void setSubscribeEnable(@jakarta.annotation.Nullable Boolean subscribeEnable) {
        this.subscribeEnable = subscribeEnable;
    }

    public GetBfusdQuotaDetailsResponse redeemEnable(
            @jakarta.annotation.Nullable Boolean redeemEnable) {
        this.redeemEnable = redeemEnable;
        return this;
    }

    /**
     * Get redeemEnable
     *
     * @return redeemEnable
     */
    @jakarta.annotation.Nullable
    public Boolean getRedeemEnable() {
        return redeemEnable;
    }

    public void setRedeemEnable(@jakarta.annotation.Nullable Boolean redeemEnable) {
        this.redeemEnable = redeemEnable;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetBfusdQuotaDetailsResponse getBfusdQuotaDetailsResponse =
                (GetBfusdQuotaDetailsResponse) o;
        return Objects.equals(
                        this.fastRedemptionQuota, getBfusdQuotaDetailsResponse.fastRedemptionQuota)
                && Objects.equals(
                        this.standardRedemptionQuota,
                        getBfusdQuotaDetailsResponse.standardRedemptionQuota)
                && Objects.equals(
                        this.subscribeEnable, getBfusdQuotaDetailsResponse.subscribeEnable)
                && Objects.equals(this.redeemEnable, getBfusdQuotaDetailsResponse.redeemEnable);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                fastRedemptionQuota, standardRedemptionQuota, subscribeEnable, redeemEnable);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetBfusdQuotaDetailsResponse {\n");
        sb.append("		fastRedemptionQuota: ")
                .append(toIndentedString(fastRedemptionQuota))
                .append("\n");
        sb.append("		standardRedemptionQuota: ")
                .append(toIndentedString(standardRedemptionQuota))
                .append("\n");
        sb.append("		subscribeEnable: ").append(toIndentedString(subscribeEnable)).append("\n");
        sb.append("		redeemEnable: ").append(toIndentedString(redeemEnable)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    public String toUrlQueryString() {
        StringBuilder sb = new StringBuilder();

        Object fastRedemptionQuotaValue = getFastRedemptionQuota();
        String fastRedemptionQuotaValueAsString = "";
        fastRedemptionQuotaValueAsString = fastRedemptionQuotaValue.toString();
        sb.append("fastRedemptionQuota=")
                .append(urlEncode(fastRedemptionQuotaValueAsString))
                .append("");
        Object standardRedemptionQuotaValue = getStandardRedemptionQuota();
        String standardRedemptionQuotaValueAsString = "";
        standardRedemptionQuotaValueAsString = standardRedemptionQuotaValue.toString();
        sb.append("standardRedemptionQuota=")
                .append(urlEncode(standardRedemptionQuotaValueAsString))
                .append("");
        Object subscribeEnableValue = getSubscribeEnable();
        String subscribeEnableValueAsString = "";
        subscribeEnableValueAsString = subscribeEnableValue.toString();
        sb.append("subscribeEnable=").append(urlEncode(subscribeEnableValueAsString)).append("");
        Object redeemEnableValue = getRedeemEnable();
        String redeemEnableValueAsString = "";
        redeemEnableValueAsString = redeemEnableValue.toString();
        sb.append("redeemEnable=").append(urlEncode(redeemEnableValueAsString)).append("");
        return sb.toString();
    }

    public static String urlEncode(String s) {
        try {
            return URLEncoder.encode(s, StandardCharsets.UTF_8.name());
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(StandardCharsets.UTF_8.name() + " is unsupported", e);
        }
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n		");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("fastRedemptionQuota");
        openapiFields.add("standardRedemptionQuota");
        openapiFields.add("subscribeEnable");
        openapiFields.add("redeemEnable");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to
     *     GetBfusdQuotaDetailsResponse
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetBfusdQuotaDetailsResponse.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in GetBfusdQuotaDetailsResponse is not"
                                        + " found in the empty JSON string",
                                GetBfusdQuotaDetailsResponse.openapiRequiredFields.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        // validate the optional field `fastRedemptionQuota`
        if (jsonObj.get("fastRedemptionQuota") != null
                && !jsonObj.get("fastRedemptionQuota").isJsonNull()) {
            GetBfusdQuotaDetailsResponseFastRedemptionQuota.validateJsonElement(
                    jsonObj.get("fastRedemptionQuota"));
        }
        // validate the optional field `standardRedemptionQuota`
        if (jsonObj.get("standardRedemptionQuota") != null
                && !jsonObj.get("standardRedemptionQuota").isJsonNull()) {
            GetBfusdQuotaDetailsResponseStandardRedemptionQuota.validateJsonElement(
                    jsonObj.get("standardRedemptionQuota"));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetBfusdQuotaDetailsResponse.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetBfusdQuotaDetailsResponse' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetBfusdQuotaDetailsResponse> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(GetBfusdQuotaDetailsResponse.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetBfusdQuotaDetailsResponse>() {
                        @Override
                        public void write(JsonWriter out, GetBfusdQuotaDetailsResponse value)
                                throws IOException {
                            JsonElement obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetBfusdQuotaDetailsResponse read(JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            // validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetBfusdQuotaDetailsResponse given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetBfusdQuotaDetailsResponse
     * @throws IOException if the JSON string is invalid with respect to
     *     GetBfusdQuotaDetailsResponse
     */
    public static GetBfusdQuotaDetailsResponse fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetBfusdQuotaDetailsResponse.class);
    }

    /**
     * Convert an instance of GetBfusdQuotaDetailsResponse to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
